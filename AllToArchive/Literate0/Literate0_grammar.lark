// Generated Lark grammar for Presentable Object Model
// Generator: PomGrammarGenerator

// ========== ANNOTATION ==========
Annotation_label_clause: LABEL: Annotation_label_value
Annotation_label_value: label
Annotation_content_clause: CONTENT: Annotation_content_value
Annotation_content_value: one_liner
Annotation_emoji_clause: EMOJI: Annotation_emoji_value
Annotation_emoji_value: value
annotation_body: (Annotation_label_clause | Annotation_emoji_clause | Annotation_content_clause)*

// ========== CAMELCASE ==========
CamelCase_content_clause: CONTENT: CamelCase_content_value
CamelCase_content_value: value
camel_case_body: (CamelCase_content_clause)*
camel_case: lower_camel | upper_camel | camel_case_body

// ========== COMPONENT ==========
Component_name_clause: NAME: Component_name_value
Component_name_value: component_name
Component_abbreviation_clause: ABBREVIATION: Component_abbreviation_value
Component_abbreviation_value: value
Component_one_liner_clause: ONE_LINER: Component_one_liner_value
Component_one_liner_value: value
Component_elaboration_clause: ELABORATION: Component_elaboration_value
Component_elaboration_value: value
Component_annotations_clause: ANNOTATIONS: Component_annotations_value
Component_annotations_value: value
component_body: (Component_elaboration_clause | Component_abbreviation_clause | Component_annotations_clause | Component_name_clause | Component_one_liner_clause)*
component: attribute | class | literate_data_model | component_body

// ========== COMPONENTNAME ==========
ComponentName_name_clause: NAME: ComponentName_name_value
ComponentName_name_value: camel_case
component_name_body: (ComponentName_name_clause)*
component_name: attribute_name | class_name | label | component_name_body

// ========== DATATYPE ==========
data_type_body: /* No fields */
data_type: base_data_type | list_data_type | mapping_data_type | set_data_type | data_type_body

// ========== DATATYPECLAUSE ==========
DataTypeClause_data_type_clause: DATA_TYPE: DataTypeClause_data_type_value
DataTypeClause_data_type_value: data_type
DataTypeClause_is_optional_clause: IS_OPTIONAL: DataTypeClause_is_optional_value
DataTypeClause_is_optional_value: value
DataTypeClause_cardinality_clause: CARDINALITY: DataTypeClause_cardinality_value
DataTypeClause_cardinality_value: value
data_type_clause_body: (DataTypeClause_data_type_clause | DataTypeClause_is_optional_clause | DataTypeClause_cardinality_clause)*

// ========== FORMULA ==========
Formula_english_clause: ENGLISH: Formula_english_value
Formula_english_value: value
Formula_code_clause: CODE: Formula_code_value
Formula_code_value: value
Formula_message_clause: MESSAGE: Formula_message_value
Formula_message_value: value
formula_body: (Formula_message_clause | Formula_english_clause | Formula_code_clause)*
formula: constraint | default | derivation | formula_body

// ========== FORMULACLAUSE ==========
FormulaClause_content_clause: CONTENT: FormulaClause_content_value
FormulaClause_content_value: value
formula_clause_body: (FormulaClause_content_clause)*

// ========== LABEL ==========
Label_name_clause: NAME: Label_name_value
Label_name_value: lower_camel
label_body: (Label_name_clause)*

// ========== LISTDATATYPE ==========
ListDataType_element_type_clause: ELEMENT_TYPE: ListDataType_element_type_value
ListDataType_element_type_value: data_type
list_data_type_body: (ListDataType_element_type_clause)*

// ========== LITERATEDATAMODEL ==========
literate_data_model_header: HASH NAME DASH ONE UNDERSCORE LINER
literate_data_model: literate_data_model_header literate_data_model_body
LiterateDataModel_name_clause: NAME: LiterateDataModel_name_value
LiterateDataModel_name_value: component_name
LiterateDataModel_abbreviation_clause: ABBREVIATION: LiterateDataModel_abbreviation_value
LiterateDataModel_abbreviation_value: value
LiterateDataModel_one_liner_clause: ONE_LINER: LiterateDataModel_one_liner_value
LiterateDataModel_one_liner_value: value
LiterateDataModel_elaboration_clause: ELABORATION: LiterateDataModel_elaboration_value
LiterateDataModel_elaboration_value: value
LiterateDataModel_annotations_clause: ANNOTATIONS: LiterateDataModel_annotations_value
LiterateDataModel_annotations_value: value
LiterateDataModel_classes_clause: CLASSES: LiterateDataModel_classes_value
LiterateDataModel_classes_value: value
literate_data_model_body: (LiterateDataModel_elaboration_clause | LiterateDataModel_annotations_clause | LiterateDataModel_one_liner_clause | LiterateDataModel_name_clause | LiterateDataModel_abbreviation_clause | LiterateDataModel_classes_clause)*

// ========== LOWERCAMEL ==========
LowerCamel_content_clause: CONTENT: LowerCamel_content_value
LowerCamel_content_value: value
lower_camel_body: (LowerCamel_content_clause)*

// ========== MAPPINGDATATYPE ==========
MappingDataType_domain_type_clause: DOMAIN_TYPE: MappingDataType_domain_type_value
MappingDataType_domain_type_value: data_type
MappingDataType_range_type_clause: RANGE_TYPE: MappingDataType_range_type_value
MappingDataType_range_type_value: data_type
mapping_data_type_body: (MappingDataType_range_type_clause | MappingDataType_domain_type_clause)*

// ========== PARAGRAPH ==========
Paragraph_content_clause: CONTENT: Paragraph_content_value
Paragraph_content_value: value
paragraph_body: (Paragraph_content_clause)*
paragraph: one_liner | paragraph_body

// ========== SETDATATYPE ==========
SetDataType_element_type_clause: ELEMENT_TYPE: SetDataType_element_type_value
SetDataType_element_type_value: data_type
set_data_type_body: (SetDataType_element_type_clause)*

// ========== UPPERCAMEL ==========
UpperCamel_content_clause: CONTENT: UpperCamel_content_value
UpperCamel_content_value: value
upper_camel_body: (UpperCamel_content_clause)*

// ========== ATTRIBUTE ==========
attribute_header: DASH NAME DASH ONE UNDERSCORE LINER LPAREN DATA UNDERSCORE TYPE UNDERSCORE CLAUSE RPAREN
attribute: attribute_header attribute_body
Attribute_name_clause: NAME: Attribute_name_value
Attribute_name_value: component_name
Attribute_abbreviation_clause: ABBREVIATION: Attribute_abbreviation_value
Attribute_abbreviation_value: value
Attribute_one_liner_clause: ONE_LINER: Attribute_one_liner_value
Attribute_one_liner_value: value
Attribute_elaboration_clause: ELABORATION: Attribute_elaboration_value
Attribute_elaboration_value: value
Attribute_annotations_clause: ANNOTATIONS: Attribute_annotations_value
Attribute_annotations_value: value
Attribute_data_type_clause_clause: DATA_TYPE_CLAUSE: Attribute_data_type_clause_value
Attribute_data_type_clause_value: value
Attribute_derivation_clause: DERIVATION: Attribute_derivation_value
Attribute_derivation_value: value
Attribute_default_clause: DEFAULT: Attribute_default_value
Attribute_default_value: value
Attribute_constraints_clause: CONSTRAINTS: Attribute_constraints_value
Attribute_constraints_value: value
attribute_body: (Attribute_annotations_clause | Attribute_abbreviation_clause | Attribute_default_clause | Attribute_name_clause | Attribute_data_type_clause_clause | Attribute_one_liner_clause | Attribute_derivation_clause | Attribute_elaboration_clause | Attribute_constraints_clause)*

// ========== ATTRIBUTENAME ==========
AttributeName_name_clause: NAME: AttributeName_name_value
AttributeName_name_value: lower_camel
attribute_name_body: (AttributeName_name_clause)*

// ========== BASEDATATYPE ==========
BaseDataType_class_name_clause: CLASS_NAME: BaseDataType_class_name_value
BaseDataType_class_name_value: value
BaseDataType_is_value_clause: IS_VALUE: BaseDataType_is_value_value
BaseDataType_is_value_value: value
base_data_type_body: (BaseDataType_class_name_clause | BaseDataType_is_value_clause)*

// ========== CLASS ==========
class_header: UNDERSCORE NAME DASH ONE UNDERSCORE LINER
class: class_header class_body
Class_name_clause: NAME: Class_name_value
Class_name_value: component_name
Class_abbreviation_clause: ABBREVIATION: Class_abbreviation_value
Class_abbreviation_value: value
Class_one_liner_clause: ONE_LINER: Class_one_liner_value
Class_one_liner_value: value
Class_elaboration_clause: ELABORATION: Class_elaboration_value
Class_elaboration_value: value
Class_annotations_clause: ANNOTATIONS: Class_annotations_value
Class_annotations_value: value
Class_plural_clause: PLURAL: Class_plural_value
Class_plural_value: value
Class_subtype_of_clause: SUBTYPE_OF: Class_subtype_of_value
Class_subtype_of_value: value
Class_subtypes_clause: SUBTYPES: Class_subtypes_value
Class_subtypes_value: value
Class_based_on_clause: BASED_ON: Class_based_on_value
Class_based_on_value: value
Class_dependents_clause: DEPENDENTS: Class_dependents_value
Class_dependents_value: value
Class_is_value_type_clause: IS_VALUE_TYPE: Class_is_value_type_value
Class_is_value_type_value: value
Class_where_clause: WHERE: Class_where_value
Class_where_value: value
Class_attributes_clause: ATTRIBUTES: Class_attributes_value
Class_attributes_value: value
class_body: (Class_dependents_clause | Class_elaboration_clause | Class_name_clause | Class_where_clause | Class_plural_clause | Class_subtypes_clause | Class_annotations_clause | Class_subtype_of_clause | Class_is_value_type_clause | Class_abbreviation_clause | Class_attributes_clause | Class_based_on_clause | Class_one_liner_clause)*
class: reference_type | value_type | class_body

// ========== CLASSNAME ==========
ClassName_name_clause: NAME: ClassName_name_value
ClassName_name_value: upper_camel
class_name_body: (ClassName_name_clause)*

// ========== CONSTRAINT ==========
Constraint_english_clause: ENGLISH: Constraint_english_value
Constraint_english_value: value
Constraint_code_clause: CODE: Constraint_code_value
Constraint_code_value: value
Constraint_message_clause: MESSAGE: Constraint_message_value
Constraint_message_value: value
constraint_body: (Constraint_code_clause | Constraint_english_clause | Constraint_message_clause)*

// ========== DEFAULT ==========
Default_english_clause: ENGLISH: Default_english_value
Default_english_value: value
Default_code_clause: CODE: Default_code_value
Default_code_value: value
Default_message_clause: MESSAGE: Default_message_value
Default_message_value: value
default_body: (Default_message_clause | Default_english_clause | Default_code_clause)*

// ========== DERIVATION ==========
Derivation_english_clause: ENGLISH: Derivation_english_value
Derivation_english_value: value
Derivation_code_clause: CODE: Derivation_code_value
Derivation_code_value: value
Derivation_message_clause: MESSAGE: Derivation_message_value
Derivation_message_value: value
derivation_body: (Derivation_english_clause | Derivation_code_clause | Derivation_message_clause)*

// ========== ONELINER ==========
OneLiner_content_clause: CONTENT: OneLiner_content_value
OneLiner_content_value: value
one_liner_body: (OneLiner_content_clause)*

// ========== REFERENCETYPE ==========
reference_type_header: UNDERSCORE NAME DASH ONE UNDERSCORE LINER
reference_type: reference_type_header reference_type_body
ReferenceType_name_clause: NAME: ReferenceType_name_value
ReferenceType_name_value: component_name
ReferenceType_abbreviation_clause: ABBREVIATION: ReferenceType_abbreviation_value
ReferenceType_abbreviation_value: value
ReferenceType_one_liner_clause: ONE_LINER: ReferenceType_one_liner_value
ReferenceType_one_liner_value: value
ReferenceType_elaboration_clause: ELABORATION: ReferenceType_elaboration_value
ReferenceType_elaboration_value: value
ReferenceType_annotations_clause: ANNOTATIONS: ReferenceType_annotations_value
ReferenceType_annotations_value: value
ReferenceType_plural_clause: PLURAL: ReferenceType_plural_value
ReferenceType_plural_value: value
ReferenceType_subtype_of_clause: SUBTYPE_OF: ReferenceType_subtype_of_value
ReferenceType_subtype_of_value: value
ReferenceType_subtypes_clause: SUBTYPES: ReferenceType_subtypes_value
ReferenceType_subtypes_value: value
ReferenceType_based_on_clause: BASED_ON: ReferenceType_based_on_value
ReferenceType_based_on_value: value
ReferenceType_dependents_clause: DEPENDENTS: ReferenceType_dependents_value
ReferenceType_dependents_value: value
ReferenceType_is_value_type_clause: IS_VALUE_TYPE: ReferenceType_is_value_type_value
ReferenceType_is_value_type_value: value
ReferenceType_where_clause: WHERE: ReferenceType_where_value
ReferenceType_where_value: value
ReferenceType_attributes_clause: ATTRIBUTES: ReferenceType_attributes_value
ReferenceType_attributes_value: value
reference_type_body: (ReferenceType_attributes_clause | ReferenceType_is_value_type_clause | ReferenceType_dependents_clause | ReferenceType_subtype_of_clause | ReferenceType_based_on_clause | ReferenceType_where_clause | ReferenceType_abbreviation_clause | ReferenceType_plural_clause | ReferenceType_annotations_clause | ReferenceType_subtypes_clause | ReferenceType_elaboration_clause | ReferenceType_name_clause | ReferenceType_one_liner_clause)*

// ========== VALUETYPE ==========
value_type_header: UNDERSCORE NAME DASH ONE UNDERSCORE LINER
value_type: value_type_header value_type_body
ValueType_name_clause: NAME: ValueType_name_value
ValueType_name_value: component_name
ValueType_abbreviation_clause: ABBREVIATION: ValueType_abbreviation_value
ValueType_abbreviation_value: value
ValueType_one_liner_clause: ONE_LINER: ValueType_one_liner_value
ValueType_one_liner_value: value
ValueType_elaboration_clause: ELABORATION: ValueType_elaboration_value
ValueType_elaboration_value: value
ValueType_annotations_clause: ANNOTATIONS: ValueType_annotations_value
ValueType_annotations_value: value
ValueType_plural_clause: PLURAL: ValueType_plural_value
ValueType_plural_value: value
ValueType_subtype_of_clause: SUBTYPE_OF: ValueType_subtype_of_value
ValueType_subtype_of_value: value
ValueType_subtypes_clause: SUBTYPES: ValueType_subtypes_value
ValueType_subtypes_value: value
ValueType_based_on_clause: BASED_ON: ValueType_based_on_value
ValueType_based_on_value: value
ValueType_dependents_clause: DEPENDENTS: ValueType_dependents_value
ValueType_dependents_value: value
ValueType_is_value_type_clause: IS_VALUE_TYPE: ValueType_is_value_type_value
ValueType_is_value_type_value: value
ValueType_where_clause: WHERE: ValueType_where_value
ValueType_where_value: value
ValueType_attributes_clause: ATTRIBUTES: ValueType_attributes_value
ValueType_attributes_value: value
value_type_body: (ValueType_attributes_clause | ValueType_elaboration_clause | ValueType_name_clause | ValueType_is_value_type_clause | ValueType_one_liner_clause | ValueType_dependents_clause | ValueType_based_on_clause | ValueType_subtype_of_clause | ValueType_where_clause | ValueType_abbreviation_clause | ValueType_annotations_clause | ValueType_subtypes_clause | ValueType_plural_clause)*


start: annotation | camel_case | component | component_name | data_type | data_type_clause | formula | formula_clause | paragraph

// ===== Terminal definitions =====
HASH: "#"
ASTERISK: "*"
UNDERSCORE: "_"
DASH: "-"
LPAREN: "("
RPAREN: ")"
LBRACK: "["
RBRACK: "]"
LBRACE: "{"
RBRACE: "}"
COMMA: ","
COLON: ":"
DOT: "."
ABBREVIATION: "abbreviation"i
ANNOTATIONS: "annotations"i
ATTRIBUTES: "attributes"i
BASED_ON: "based_on"i
CARDINALITY: "cardinality"i
CLASSES: "classes"i
CLASS_NAME: "class_name"i
CLAUSE: "clause"i
CODE: "code"i
CONSTRAINTS: "constraints"i
CONTENT: "content"i
DATA: "data"i
DATA_TYPE: "data_type"i
DATA_TYPE_CLAUSE: "data_type_clause"i
DEFAULT: "default"i
DEPENDENTS: "dependents"i
DERIVATION: "derivation"i
DOMAIN_TYPE: "domain_type"i
ELABORATION: "elaboration"i
ELEMENT_TYPE: "element_type"i
EMOJI: "emoji"i
ENGLISH: "english"i
IS_OPTIONAL: "is_optional"i
IS_VALUE: "is_value"i
IS_VALUE_TYPE: "is_value_type"i
LABEL: "label"i
LINER: "liner"i
MESSAGE: "message"i
NAME: "name"i
ONE: "one"i
ONE_LINER: "one_liner"i
PLURAL: "plural"i
RANGE_TYPE: "range_type"i
SUBTYPES: "subtypes"i
SUBTYPE_OF: "subtype_of"i
TYPE: "type"i
WHERE: "where"i

// ===== Value types =====
STRING: "\""[^"\"]*"\""
NUMBER: /[0-9]+(\.[0-9]+)?/
BOOLEAN: "true" | "false"
IDENTIFIER: /[a-zA-Z][a-zA-Z0-9_]*/

// Generic value (fallback)
value: STRING | NUMBER | BOOLEAN | IDENTIFIER

// Whitespace handling
WHITESPACE: /[ \t\n\r]+/
COMMENT: "//" /[^\n]*/ "\n"
%ignore WHITESPACE
%ignore COMMENT