
Phase: Creating schema and survey of Literate_01
Generate schema...

Phase: Parsing model: ldm/ldm_models/Diagrams/Diagrams.md
PARSING ldm/ldm_models/Diagrams/Diagrams.md

Phase: Deriving dict from parse => {yaml_dict_file}
Full header:  # This is my first Mermaid test

Full header:  ## Mermaid Class Diagram

Full header:  ## Mermaid Flowchart

Full header:  ## PlantUML jsondata

Full header:  ## PlantUML UML

Full header:  ## Mermaid block diagram

Full header:  ## Mermaid ER Diagram

Full header:  ## Mermaid ER Diagram

Full header:  ## Captioned figure

Full header:  ## List of Codes

Full header:  ## PlantUML UML

Full header:  ## Russian UML

Full header:  ## Car diagram

Full header:  ## Fancy PlantUML

Full header:  ## MindMap - PlanUML

Full header:  ## JSON for Components

Full header:  #JSON for LDM Component

Full header:  ## and a dummy section

Full header:  ## Mermaid ER from  Extract


Phase: .. full dict saved  in ldm/ldm_models/Diagrams/Diagrams_results/Diagrams_PD_02.dict.yaml

Phase: Creating model with from_typed_dict() => to_typed_dict() => ldm/ldm_models/Diagrams/Diagrams_results/Diagrams_PD_03.model.yaml
Calling LiterateModel.from_typed_dict ...

Phase: have py  model from dict

Phase: Creating model_dict from model => ldm/ldm_models/Diagrams/Diagrams_results/Diagrams_PD_03.model.yaml

Phase: Validating model tp ldm/ldm_models/Diagrams/Diagrams_results/Diagrams_PD_04.v_model.yaml
All classes names (singular and plural are: 
Calcing all_class names  for  Literatemodel: This is my first Mermaid test
Calcing all_classes for  Literatemodel: This is my first Mermaid test
- locally, there are 0 classes for Literatemodel: This is my first Mermaid test
Calcing all_classes for  Subjectb: Mermaid Class Diagram
- locally, there are 0 classes for Subjectb: Mermaid Class Diagram
- allclasses for Subjectb: Mermaid Class Diagram contains 0; locally just 0
Calcing all_classes for  Subjectb: Mermaid Flowchart
- locally, there are 0 classes for Subjectb: Mermaid Flowchart
- allclasses for Subjectb: Mermaid Flowchart contains 0; locally just 0
Calcing all_classes for  Subjectb: Plant UML jsondata
- locally, there are 0 classes for Subjectb: Plant UML jsondata
- allclasses for Subjectb: Plant UML jsondata contains 0; locally just 0
Calcing all_classes for  Subjectb: Plant UML UML
- locally, there are 0 classes for Subjectb: Plant UML UML
- allclasses for Subjectb: Plant UML UML contains 0; locally just 0
Calcing all_classes for  Subjectb: Mermaid block diagram
- locally, there are 0 classes for Subjectb: Mermaid block diagram
- allclasses for Subjectb: Mermaid block diagram contains 0; locally just 0
Calcing all_classes for  Subjectb: Mermaid ER Diagram
- locally, there are 0 classes for Subjectb: Mermaid ER Diagram
- allclasses for Subjectb: Mermaid ER Diagram contains 0; locally just 0
Calcing all_classes for  Subjectb: Mermaid ER Diagram
- locally, there are 0 classes for Subjectb: Mermaid ER Diagram
- allclasses for Subjectb: Mermaid ER Diagram contains 0; locally just 0
Calcing all_classes for  Subjectb: Captioned figure
- locally, there are 0 classes for Subjectb: Captioned figure
- allclasses for Subjectb: Captioned figure contains 0; locally just 0
Calcing all_classes for  Subjectb: List of Codes
- locally, there are 0 classes for Subjectb: List of Codes
- allclasses for Subjectb: List of Codes contains 0; locally just 0
Calcing all_classes for  Subjectb: Plant UML UML
- locally, there are 0 classes for Subjectb: Plant UML UML
- allclasses for Subjectb: Plant UML UML contains 0; locally just 0
Calcing all_classes for  Subjectb: Russian UML
- locally, there are 0 classes for Subjectb: Russian UML
- allclasses for Subjectb: Russian UML contains 0; locally just 0
Calcing all_classes for  Subjectb: Car diagram
- locally, there are 0 classes for Subjectb: Car diagram
- allclasses for Subjectb: Car diagram contains 0; locally just 0
Calcing all_classes for  Subjectb: Fancy Plant UML
- locally, there are 0 classes for Subjectb: Fancy Plant UML
- allclasses for Subjectb: Fancy Plant UML contains 0; locally just 0
Calcing all_classes for  Subjectb: Mind Map
- locally, there are 0 classes for Subjectb: Mind Map
- allclasses for Subjectb: Mind Map contains 0; locally just 0
Calcing all_classes for  Subjectb: JSON for Components
- locally, there are 0 classes for Subjectb: JSON for Components
- allclasses for Subjectb: JSON for Components contains 0; locally just 0
- allclasses for Literatemodel: This is my first Mermaid test contains 0; locally just 0
Attributes Index = 

finding value types...
CALC MROS - yields...
0  classes in final model
Calc Dependents
All Subtypings
All classes names (singular and plural are: 
Attributes Index = 

finding value types...
CALC MROS - yields...
0  classes in final model
Validating LiterateModel
Call to Validating references...
Before validating:  0  classes in model
Validating references
After validating:  0  classes in model
No validation diagnostics found.
..Created dict for validated model: ldm/ldm_models/Diagrams/Diagrams_results/Diagrams_PD_04.v_model.yaml

Phase: counting diagnostics
{}
pattern is ldm/ldm_models/Diagrams/Diagrams_results/*dict*.yaml
pattern is ldm/ldm_models/Diagrams/Diagrams_results/*model*.yaml
Dict names are:  ['Diagrams_PD_02.dict.yaml', 'Diagrams_PD_03.model.yaml', 'Diagrams_PD_04.v_model.yaml']
All combos are:
['Diagrams_PD_02.dict.yaml', 'Diagrams_PD_03.model.yaml']
['Diagrams_PD_03.model.yaml', 'Diagrams_PD_04.v_model.yaml']
Combo is: ['Diagrams_PD_02.dict.yaml', 'Diagrams_PD_03.model.yaml']
Including:  Diagrams_PD_02.dict.yaml
Including:  Diagrams_PD_03.model.yaml
Combo is: ['Diagrams_PD_03.model.yaml', 'Diagrams_PD_04.v_model.yaml']
Including:  Diagrams_PD_03.model.yaml
Including:  Diagrams_PD_04.v_model.yaml

Phase: Create extract for diagrams
Registered as_extract for object
Registered as_extract for LiterateModel
Registered as_extract for Class
Faculty class Extractors created
Faculty patches setup:
  Component.validate -> validate_component
  Component.as_html -> component_html
  LiterateModel.validate -> validate_literate_model
  LiterateModel.as_html -> literate_model_html
  LiterateModel.as_extract -> model_extract
  SubjectE.validate -> validate_subject_e
  SubjectE.as_html -> subject_html
  Class.validate -> validate_class
  Class.as_html -> class_html
  Class.as_extract -> class_extract
  AttributeSection.validate -> validate_attribute_section
  AttributeSection.as_html -> attribute_section_html
  Attribute.validate -> validate_attribute
  Attribute.as_html -> attribute_html
  Formula.validate -> validate_formula
  Formula.as_html -> formula_html
  Constraint.validate -> validate_constraint
  object.as_html -> any_html
  object.as_extract -> any_extract
  Paragraph.as_html -> paragraph_html
  OneLiner.as_html -> one_liner_html
  CodeBlock.as_html -> code_block_html
  str.as_html -> str_html
  list.as_html -> list_html
  Annotation.as_html -> annotation_html
  Emoji.as_html -> emoji_html
  Casing.as_html -> casing_html
  ClassName.as_html -> class_name_html
  ClassReference.as_html -> class_reference_html
  SubtypeBy.as_html -> subtype_by_html
  DataTypeClause.as_html -> dtc_html
  BaseDataType.as_html -> bdt_html
  ListDataType.as_html -> ldt_html
  SetDataType.as_html -> sdt_as_html
  MappingDataType.as_html -> mdt_html
  IsOptional.as_html -> is_optional_html
  AsValue.as_html -> as_value_html
  Diagnostic.as_html -> diagnostic_html
  Subtyping.as_html -> subtyping_html
  AttributeName.as_html -> attribute_name_html
  AttributeReference.as_html -> attribute_reference_html
Created Extractprs() =  <ldm.ldm_extractors.Extractors object at 0x000001F481973B60>
Patches are...
Function validate_component registered as validate for target Component
Function component_html registered as as_html for target Component
Function validate_literate_model registered as validate for target LiterateModel
Function literate_model_html registered as as_html for target LiterateModel
Function model_extract registered as as_extract for target LiterateModel
Function validate_subject_e registered as validate for target SubjectE
Function subject_html registered as as_html for target SubjectE
Function validate_class registered as validate for target Class
Function class_html registered as as_html for target Class
Function class_extract registered as as_extract for target Class
Function validate_attribute_section registered as validate for target AttributeSection
Function attribute_section_html registered as as_html for target AttributeSection
Function validate_attribute registered as validate for target Attribute
Function attribute_html registered as as_html for target Attribute
Function validate_formula registered as validate for target Formula
Function formula_html registered as as_html for target Formula
Function validate_constraint registered as validate for target Constraint
Function any_html registered as as_html for target object
Function any_extract registered as as_extract for target object
Function paragraph_html registered as as_html for target Paragraph
Function one_liner_html registered as as_html for target OneLiner
Function code_block_html registered as as_html for target CodeBlock
Function str_html registered as as_html for target str
Function list_html registered as as_html for target list
Function annotation_html registered as as_html for target Annotation
Function emoji_html registered as as_html for target Emoji
Function casing_html registered as as_html for target Casing
Function class_name_html registered as as_html for target ClassName
Function class_reference_html registered as as_html for target ClassReference
Function subtype_by_html registered as as_html for target SubtypeBy
Function dtc_html registered as as_html for target DataTypeClause
Function bdt_html registered as as_html for target BaseDataType
Function ldt_html registered as as_html for target ListDataType
Function sdt_as_html registered as as_html for target SetDataType
Function mdt_html registered as as_html for target MappingDataType
Function is_optional_html registered as as_html for target IsOptional
Function as_value_html registered as as_html for target AsValue
Function diagnostic_html registered as as_html for target Diagnostic
Function subtyping_html registered as as_html for target Subtyping
Function attribute_name_html registered as as_html for target AttributeName
Function attribute_reference_html registered as as_html for target AttributeReference
And the extract is....
{'_type': 'LiterateModel', 'name': 'This is my first Mermaid test', 'classes': []}

Phase: Validating to JSON Schema
Schema path is:  ldm/ldm_models/Diagrams/Diagrams_results/LiterateMeta/LiterateMetaModel_01_PD_schema.yaml
Object  path is:  ldm/ldm_models/Diagrams/Diagrams_results/Diagrams_PD_04.v_model.yaml
Validation successful!

Phase: Skipping Render to Markdown

Phase: Creating HTML using the Faculty
HTMLing Model This is my first Mermaid test
Doing html for 0 classes and 15 subjects
HTMLing subject This is my first Mermaid test
	Doing html for 0 classes and 15 subjects
HTMLing subject Mermaid Class Diagram
	Doing html for 0 classes and 0 subjects
creating png  for mermaid in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\diagrams\diagram_1_mermaid.png
Generating single mermaid chart
HTMLing subject Mermaid Flowchart
	Doing html for 0 classes and 0 subjects
creating png  for mermaid in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\diagrams\diagram_2_mermaid.png
Generating single mermaid chart
HTMLing subject Plant UML jsondata
	Doing html for 0 classes and 0 subjects
creating png  for puml in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\diagrams\diagram_3_puml.png
PUML png file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\diagrams\diagram_3_puml.png
HTMLing subject Plant UML UML
	Doing html for 0 classes and 0 subjects
creating png  for puml in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\diagrams\diagram_4_puml.png
PUML png file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\diagrams\diagram_4_puml.png
HTMLing subject Mermaid block diagram
	Doing html for 0 classes and 0 subjects
creating png  for mermaid in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\diagrams\diagram_5_mermaid.png
Generating single mermaid chart
Browser console: . 

Browser console: COLUMNS (LEX) 3
Browser console: . 

Browser console: Lex: NODE_ID a
Browser console: APA123 {$: 3, _$: Object}
Browser console: COLUMNS:  3
Browser console: Lex: COLON :3
Browser console: Rule: node (NODE_ID separator):  a
Browser console: . 

Browser console: Found space-block
Browser console: Rule: nodeStatement (abc88 node size)  {id: a} 3
Browser console: Lex: NODE_ID group1
Browser console: Lex: COLON :2
Browser console: Rule: node (NODE_ID separator):  group1
Browser console: . 

Browser console: COLUMNS (LEX) 2
Browser console: Rule: nodeStatement (abc88 node size)  {id: group1} 2
Browser console: . 

Browser console: Lex: NODE_ID h
Browser console: APA123 {$: 2, _$: Object}
Browser console: COLUMNS:  2
Browser console: .  
Browser console: Lex: NODE_ID i
Browser console: Rule: node (NODE_ID separator):  h
Browser console: Rule: nodeStatement (node)  {id: h}
Browser console: .  
Browser console: Lex: NODE_ID j
Browser console: Rule: node (NODE_ID separator):  i
Browser console: Rule: nodeStatement (node)  {id: i}
Browser console: .  
Browser console: Lex: NODE_ID k
Browser console: Rule: node (NODE_ID separator):  j
Browser console: Rule: nodeStatement (node)  {id: j}
Browser console: . 

Browser console: Rule: node (NODE_ID separator):  k
Browser console: Rule: nodeStatement (node)  {id: k}
Browser console: Rule: statement:  {id: k, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: j, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: i, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: h, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {type: column-setting, columns: 2}
Browser console: Lex: NODE_ID g
Browser console: Rule: id-block statement :  {id: group1, label: undefined, type: na, directions: undefined, widthInColumns: 2} [Object, Object, Object, Object, Object]
Browser console: . 

Browser console: Found space-block
Browser console: Rule: node (NODE_ID separator):  g
Browser console: Rule: nodeStatement (node)  {id: g}
Browser console: Lex: NODE_ID group2
Browser console: Lex: COLON :3
Browser console: Rule: node (NODE_ID separator):  group2
Browser console: . 

Browser console: Lex: NODE_ID l
Browser console: Rule: nodeStatement (abc88 node size)  {id: group2} 3
Browser console: .  
Browser console: Lex: NODE_ID m
Browser console: Rule: node (NODE_ID separator):  l
Browser console: Rule: nodeStatement (node)  {id: l}
Browser console: .  
Browser console: Lex: NODE_ID n
Browser console: Rule: node (NODE_ID separator):  m
Browser console: Rule: nodeStatement (node)  {id: m}
Browser console: .  
Browser console: Lex: NODE_ID o
Browser console: Rule: node (NODE_ID separator):  n
Browser console: Rule: nodeStatement (node)  {id: n}
Browser console: .  
Browser console: Lex: NODE_ID p
Browser console: Rule: node (NODE_ID separator):  o
Browser console: Rule: nodeStatement (node)  {id: o}
Browser console: .  
Browser console: Lex: NODE_ID q
Browser console: Rule: node (NODE_ID separator):  p
Browser console: Rule: nodeStatement (node)  {id: p}
Browser console: .  
Browser console: Lex: NODE_ID r
Browser console: Rule: node (NODE_ID separator):  q
Browser console: Rule: nodeStatement (node)  {id: q}
Browser console: . 

Browser console: Rule: node (NODE_ID separator):  r
Browser console: Rule: nodeStatement (node)  {id: r}
Browser console: Rule: statement:  {id: r, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: q, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: p, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: o, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: n, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: m, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: l, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Lex: EOF 
Browser console: Rule: id-block statement :  {id: group2, label: undefined, type: na, directions: undefined, widthInColumns: 3} [Object, Object, Object, Object, Object, Object, Object]
Browser console: Rule: statement:  {id: group2, label: undefined, type: composite, directions: undefined, widthInColumns: 3}
Browser console: Rule: statement #2:  {id: g, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: group1, label: undefined, type: composite, directions: undefined, widthInColumns: 2}
Browser console: Rule: statement #2:  {id: a, label: undefined, type: na, directions: undefined, widthInColumns: 3}
Browser console: Rule: statement #2:  {type: column-setting, columns: 3}
Browser console: Rule: hierarchy:  [Object, Object, Object, Object, Object]
HTMLing subject Mermaid ER Diagram
	Doing html for 0 classes and 0 subjects
creating png  for mermaid in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\diagrams\diagram_6_mermaid.png
Generating single mermaid chart
HTMLing subject Mermaid ER Diagram
	Doing html for 0 classes and 0 subjects
creating png  for mermaid in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\diagrams\diagram_7_mermaid.png
Generating single mermaid chart
HTMLing subject Captioned figure
	Doing html for 0 classes and 0 subjects
HTMLing subject List of Codes
	Doing html for 0 classes and 0 subjects
HTMLing subject Plant UML UML
	Doing html for 0 classes and 0 subjects
creating png  for puml in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\diagrams\diagram_8_puml.png
PUML png file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\diagrams\diagram_8_puml.png
HTMLing subject Russian UML
	Doing html for 0 classes and 0 subjects
creating png  for puml in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\diagrams\diagram_9_puml.png
PUML png file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\diagrams\diagram_9_puml.png
HTMLing subject Car diagram
	Doing html for 0 classes and 0 subjects
creating png  for puml in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\diagrams\diagram_10_puml.png
PUML png file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\diagrams\diagram_10_puml.png
HTMLing subject Fancy Plant UML
	Doing html for 0 classes and 0 subjects
creating png  for puml in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\diagrams\diagram_11_puml.png
PUML png file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\diagrams\diagram_11_puml.png
HTMLing subject Mind Map
	Doing html for 0 classes and 0 subjects
creating png  for puml in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\diagrams\diagram_12_puml.png
PUML png file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\diagrams\diagram_12_puml.png
HTMLing subject JSON for Components
	Doing html for 0 classes and 0 subjects
creating png  for puml in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\diagrams\diagram_13_puml.png
PUML png file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\diagrams\diagram_13_puml.png
Body classes are None
Saved styled dictionary to ldm/ldm_models/Diagrams/Diagrams_results/Diagrams_PD_07_as.html
Body classes are ['reviewing']
Saved styled dictionary (for review) to ldm/ldm_models/Diagrams/Diagrams_results/Diagrams_PD_07_as.review.html

Phase: Saving HTML for PDF 
Body classes are None
Saved styled dictionary to ldm/ldm_models/Diagrams/Diagrams_results/Diagrams_PD_08_as_pdf.html
Body classes are ['reviewing']
Saved styled dictionary (for review) to ldm/ldm_models/Diagrams/Diagrams_results/Diagrams_PD_08_as_pdf.review.html

Phase: Creating PDF from html and css - using Prince
