
Phase: Creating schema and survey of Literate_01
Generate schema...
as yaml - warnings =  False
Annotation  Qualified:  <class 'ldm.Literate_01.Annotation'>
Annotation  MRO:  ['Annotation', 'PydanticMixin', 'object']
Any  Qualified:  typing.Any
Any  MRO:  ['Any', 'object']
AsValue  Qualified:  <class 'utils.class_pom_token.AsValue'>
AsValue  MRO:  ['AsValue', 'PresentableBoolean', 'PresentableToken', 'PydanticMixin', 'object']
Attribute  Qualified:  <class 'ldm.Literate_01.Attribute'>
Attribute  MRO:  ['Attribute', 'Component', 'MinorComponent', 'PydanticMixin', 'object']
AttributeName  Qualified:  <class 'ldm.Literate_01.AttributeName'>
AttributeName  MRO:  ['AttributeName', 'LowerCamel', 'CamelCase', 'Casing', 'PresentableToken', 'PydanticMixin', 'object']
AttributeReference  Qualified:  <class 'ldm.Literate_01.AttributeReference'>
AttributeReference  MRO:  ['AttributeReference', 'PydanticMixin', 'object']
AttributeSection  Qualified:  <class 'ldm.Literate_01.AttributeSection'>
AttributeSection  MRO:  ['AttributeSection', 'Component', 'MinorComponent', 'PydanticMixin', 'object']
AttributeSectionName  Qualified:  <class 'ldm.Literate_01.AttributeSectionName'>
AttributeSectionName  MRO:  ['AttributeSectionName', 'NormalCase', 'Casing', 'PresentableToken', 'PydanticMixin', 'object']
BaseDataType  Qualified:  <class 'ldm.Literate_01.BaseDataType'>
BaseDataType  MRO:  ['BaseDataType', 'DataType', 'PydanticMixin', 'object']
CamelCase  Qualified:  <class 'utils.class_casing.CamelCase'>
CamelCase  MRO:  ['CamelCase', 'Casing', 'PresentableToken', 'PydanticMixin', 'object']
Cardinality  Qualified:  <enum 'Cardinality'>
Cardinality  MRO:  ['Cardinality', 'StrEnum', 'str', 'ReprEnum', 'Enum', 'object']
Casing  Qualified:  <class 'utils.class_casing.Casing'>
Casing  MRO:  ['Casing', 'PresentableToken', 'PydanticMixin', 'object']
Class  Qualified:  <class 'ldm.Literate_01.Class'>
Class  MRO:  ['Class', 'Component', 'MinorComponent', 'PydanticMixin', 'object']
ClassName  Qualified:  <class 'ldm.Literate_01.ClassName'>
ClassName  MRO:  ['ClassName', 'UpperCamel', 'CamelCase', 'Casing', 'PresentableToken', 'PydanticMixin', 'object']
ClassReference  Qualified:  <class 'ldm.Literate_01.ClassReference'>
ClassReference  MRO:  ['ClassReference', 'ClassName', 'UpperCamel', 'CamelCase', 'Casing', 'PresentableToken', 'PydanticMixin', 'object']
Class  Qualified:  <class 'ldm.Literate_01.Class'>
Class  MRO:  ['Class', 'Component', 'MinorComponent', 'PydanticMixin', 'object']
CodeBlock  Qualified:  <class 'ldm.Literate_01.CodeBlock'>
CodeBlock  MRO:  ['CodeBlock', 'PydanticMixin', 'object']
CodeType  Qualified:  <class 'ldm.Literate_01.CodeType'>
CodeType  MRO:  ['CodeType', 'ValueType', 'Class', 'Component', 'MinorComponent', 'PydanticMixin', 'object']
Component  Qualified:  <class 'ldm.Literate_01.Component'>
Component  MRO:  ['Component', 'MinorComponent', 'PydanticMixin', 'object']
Constraint  Qualified:  <class 'ldm.Literate_01.Constraint'>
Constraint  MRO:  ['Constraint', 'Formula', 'MinorComponent', 'PydanticMixin', 'object']
DataType  Qualified:  <class 'ldm.Literate_01.DataType'>
DataType  MRO:  ['DataType', 'PydanticMixin', 'object']
DataTypeClause  Qualified:  <class 'ldm.Literate_01.DataTypeClause'>
DataTypeClause  MRO:  ['DataTypeClause', 'PydanticMixin', 'object']
Default  Qualified:  <class 'ldm.Literate_01.Default'>
Default  MRO:  ['Default', 'Formula', 'MinorComponent', 'PydanticMixin', 'object']
Derivation  Qualified:  <class 'ldm.Literate_01.Derivation'>
Derivation  MRO:  ['Derivation', 'Formula', 'MinorComponent', 'PydanticMixin', 'object']
Diagnostic  Qualified:  <class 'ldm.Literate_01.Diagnostic'>
Diagnostic  MRO:  ['Diagnostic', 'PydanticMixin', 'object']
DotCase  Qualified:  <class 'utils.class_casing.DotCase'>
DotCase  MRO:  ['DotCase', 'Casing', 'PresentableToken', 'PydanticMixin', 'object']
Emoji  Qualified:  <class 'utils.class_pom_token.Emoji'>
Emoji  MRO:  ['Emoji', 'PresentableToken', 'PydanticMixin', 'object']
Enum  Qualified:  <enum 'Enum'>
Enum  MRO:  ['Enum', 'object']
Formula  Qualified:  <class 'ldm.Literate_01.Formula'>
Formula  MRO:  ['Formula', 'MinorComponent', 'PydanticMixin', 'object']
FormulaCoding  Qualified:  <class 'ldm.Literate_01.FormulaCoding'>
FormulaCoding  MRO:  ['FormulaCoding', 'PydanticMixin', 'object']
InitVar  Qualified:  <class 'dataclasses.InitVar'>
InitVar  MRO:  ['InitVar', 'object']
IsExclusive  Qualified:  <class 'utils.class_pom_token.IsExclusive'>
IsExclusive  MRO:  ['IsExclusive', 'PresentableBoolean', 'PresentableToken', 'PydanticMixin', 'object']
IsExhaustive  Qualified:  <class 'utils.class_pom_token.IsExhaustive'>
IsExhaustive  MRO:  ['IsExhaustive', 'PresentableBoolean', 'PresentableToken', 'PydanticMixin', 'object']
IsOptional  Qualified:  <class 'utils.class_pom_token.IsOptional'>
IsOptional  MRO:  ['IsOptional', 'PresentableBoolean', 'PresentableToken', 'PydanticMixin', 'object']
Kebab  Qualified:  <class 'utils.class_casing.Kebab'>
Kebab  MRO:  ['Kebab', 'Casing', 'PresentableToken', 'PydanticMixin', 'object']
Label  Qualified:  <class 'ldm.Literate_01.Label'>
Label  MRO:  ['Label', 'LowerCamel', 'CamelCase', 'Casing', 'PresentableToken', 'PydanticMixin', 'object']
ListDataType  Qualified:  <class 'ldm.Literate_01.ListDataType'>
ListDataType  MRO:  ['ListDataType', 'DataType', 'PydanticMixin', 'object']
LiterateModel  Qualified:  <class 'ldm.Literate_01.LiterateModel'>
LiterateModel  MRO:  ['LiterateModel', 'SubjectB', 'SubjectC', 'SubjectD', 'SubjectE', 'Component', 'MinorComponent', 'PydanticMixin', 'object']
LowerCamel  Qualified:  <class 'utils.class_casing.LowerCamel'>
LowerCamel  MRO:  ['LowerCamel', 'CamelCase', 'Casing', 'PresentableToken', 'PydanticMixin', 'object']
MappingDataType  Qualified:  <class 'ldm.Literate_01.MappingDataType'>
MappingDataType  MRO:  ['MappingDataType', 'DataType', 'PydanticMixin', 'object']
MinorComponent  Qualified:  <class 'ldm.Literate_01.MinorComponent'>
MinorComponent  MRO:  ['MinorComponent', 'PydanticMixin', 'object']
ModelName  Qualified:  <class 'ldm.Literate_01.ModelName'>
ModelName  MRO:  ['ModelName', 'NormalCase', 'Casing', 'PresentableToken', 'PydanticMixin', 'object']
SnakeCase  Qualified:  <class 'utils.class_casing.SnakeCase'>
SnakeCase  MRO:  ['SnakeCase', 'Casing', 'PresentableToken', 'PydanticMixin', 'object']
Natural  Qualified:  <class 'ldm.Literate_01.Natural'>
Natural  MRO:  ['Natural', 'PydanticMixin', 'object']
NormalCase  Qualified:  <class 'utils.class_casing.NormalCase'>
NormalCase  MRO:  ['NormalCase', 'Casing', 'PresentableToken', 'PydanticMixin', 'object']
OneLiner  Qualified:  <class 'ldm.Literate_01.OneLiner'>
OneLiner  MRO:  ['OneLiner', 'Natural', 'PydanticMixin', 'object']
Paragraph  Qualified:  <class 'ldm.Literate_01.Paragraph'>
Paragraph  MRO:  ['Paragraph', 'Natural', 'PydanticMixin', 'object']
PascalCase  Qualified:  <class 'utils.class_casing.PascalCase'>
PascalCase  MRO:  ['PascalCase', 'Casing', 'PresentableToken', 'PydanticMixin', 'object']
PomTemplate  Qualified:  <class 'utils.class_templates.PomTemplate'>
PomTemplate  MRO:  ['PomTemplate', 'object']
PresentableBoolean  Qualified:  <class 'utils.class_pom_token.PresentableBoolean'>
PresentableBoolean  MRO:  ['PresentableBoolean', 'PresentableToken', 'PydanticMixin', 'object']
PresentableToken  Qualified:  <class 'utils.class_pom_token.PresentableToken'>
PresentableToken  MRO:  ['PresentableToken', 'PydanticMixin', 'object']
PydanticMixin  Qualified:  <class 'utils.util_pydantic.PydanticMixin'>
PydanticMixin  MRO:  ['PydanticMixin', 'object']
ReferenceType  Qualified:  <class 'ldm.Literate_01.ReferenceType'>
ReferenceType  MRO:  ['ReferenceType', 'Class', 'Component', 'MinorComponent', 'PydanticMixin', 'object']
SetDataType  Qualified:  <class 'ldm.Literate_01.SetDataType'>
SetDataType  MRO:  ['SetDataType', 'DataType', 'PydanticMixin', 'object']
SnakeCase  Qualified:  <class 'utils.class_casing.SnakeCase'>
SnakeCase  MRO:  ['SnakeCase', 'Casing', 'PresentableToken', 'PydanticMixin', 'object']
StrEnum  Qualified:  <enum 'StrEnum'>
StrEnum  MRO:  ['StrEnum', 'str', 'ReprEnum', 'Enum', 'object']
SubjectB  Qualified:  <class 'ldm.Literate_01.SubjectB'>
SubjectB  MRO:  ['SubjectB', 'SubjectC', 'SubjectD', 'SubjectE', 'Component', 'MinorComponent', 'PydanticMixin', 'object']
SubjectB  Qualified:  <class 'ldm.Literate_01.SubjectB'>
SubjectB  MRO:  ['SubjectB', 'SubjectC', 'SubjectD', 'SubjectE', 'Component', 'MinorComponent', 'PydanticMixin', 'object']
SubjectC  Qualified:  <class 'ldm.Literate_01.SubjectC'>
SubjectC  MRO:  ['SubjectC', 'SubjectD', 'SubjectE', 'Component', 'MinorComponent', 'PydanticMixin', 'object']
SubjectD  Qualified:  <class 'ldm.Literate_01.SubjectD'>
SubjectD  MRO:  ['SubjectD', 'SubjectE', 'Component', 'MinorComponent', 'PydanticMixin', 'object']
SubjectE  Qualified:  <class 'ldm.Literate_01.SubjectE'>
SubjectE  MRO:  ['SubjectE', 'Component', 'MinorComponent', 'PydanticMixin', 'object']
SubjectName  Qualified:  <class 'ldm.Literate_01.SubjectName'>
SubjectName  MRO:  ['SubjectName', 'NormalCase', 'Casing', 'PresentableToken', 'PydanticMixin', 'object']
SubtypeBy  Qualified:  <class 'ldm.Literate_01.SubtypeBy'>
SubtypeBy  MRO:  ['SubtypeBy', 'PydanticMixin', 'object']
Subtyping  Qualified:  <class 'ldm.Literate_01.Subtyping'>
Subtyping  MRO:  ['Subtyping', 'PydanticMixin', 'object']
SubtypingName  Qualified:  <class 'ldm.Literate_01.SubtypingName'>
SubtypingName  MRO:  ['SubtypingName', 'LowerCamel', 'CamelCase', 'Casing', 'PresentableToken', 'PydanticMixin', 'object']
UpperSnake  Qualified:  <class 'utils.class_casing.UpperSnake'>
UpperSnake  MRO:  ['UpperSnake', 'Casing', 'PresentableToken', 'PydanticMixin', 'object']
TrainCase  Qualified:  <class 'utils.class_casing.TrainCase'>
TrainCase  MRO:  ['TrainCase', 'Casing', 'PresentableToken', 'PydanticMixin', 'object']
UpperSnake  Qualified:  <class 'utils.class_casing.UpperSnake'>
UpperSnake  MRO:  ['UpperSnake', 'Casing', 'PresentableToken', 'PydanticMixin', 'object']
UpperCamel  Qualified:  <class 'utils.class_casing.UpperCamel'>
UpperCamel  MRO:  ['UpperCamel', 'CamelCase', 'Casing', 'PresentableToken', 'PydanticMixin', 'object']
UpperCamel  Qualified:  <class 'utils.class_casing.UpperCamel'>
UpperCamel  MRO:  ['UpperCamel', 'CamelCase', 'Casing', 'PresentableToken', 'PydanticMixin', 'object']
UpperSnake  Qualified:  <class 'utils.class_casing.UpperSnake'>
UpperSnake  MRO:  ['UpperSnake', 'Casing', 'PresentableToken', 'PydanticMixin', 'object']
ValueType  Qualified:  <class 'ldm.Literate_01.ValueType'>
ValueType  MRO:  ['ValueType', 'Class', 'Component', 'MinorComponent', 'PydanticMixin', 'object']
DotCase  Qualified:  <class 'utils.class_casing.DotCase'>
DotCase  MRO:  ['DotCase', 'Casing', 'PresentableToken', 'PydanticMixin', 'object']
Kebab  Qualified:  <class 'utils.class_casing.Kebab'>
Kebab  MRO:  ['Kebab', 'Casing', 'PresentableToken', 'PydanticMixin', 'object']
LowerCamel  Qualified:  <class 'utils.class_casing.LowerCamel'>
LowerCamel  MRO:  ['LowerCamel', 'CamelCase', 'Casing', 'PresentableToken', 'PydanticMixin', 'object']
PascalCase  Qualified:  <class 'utils.class_casing.PascalCase'>
PascalCase  MRO:  ['PascalCase', 'Casing', 'PresentableToken', 'PydanticMixin', 'object']
SnakeCase  Qualified:  <class 'utils.class_casing.SnakeCase'>
SnakeCase  MRO:  ['SnakeCase', 'Casing', 'PresentableToken', 'PydanticMixin', 'object']
TrainCase  Qualified:  <class 'utils.class_casing.TrainCase'>
TrainCase  MRO:  ['TrainCase', 'Casing', 'PresentableToken', 'PydanticMixin', 'object']
as yaml - warnings =  False

Phase: Parsing model: ldm/ldm_models/Diagrams/Diagrams.md
PARSING ldm/ldm_models/Diagrams/Diagrams.md

Phase: Deriving dict from parse => {yaml_dict_file}
Full header:  # This is my first Mermaid test

Full header:  ## Mermaid Class Diagram

Full header:  ## Mermaid Flowchart

Full header:  ## PlantUML jsondata

Full header:  ## PlantUML UML

Full header:  ## Mermaid block diagram

Full header:  ## Mermaid ER Diagram

Full header:  ## Mermaid ER Diagram

Full header:  ## Captioned figure

Full header:  ## List of Codes

Full header:  ## PlantUML UML

Full header:  ## Russian UML

Full header:  ## Car diagram

Full header:  ## Fancy PlantUML

Full header:  ## MindMap - PlanUML

Full header:  ## JSON for Components

Full header:  #JSON for LDM Component

Full header:  ## and a dummy section

Full header:  ## Mermaid ER from  Extract

as yaml - warnings =  False

Phase: .. full dict saved  in ldm/ldm_models/Diagrams/Diagrams_results/Diagrams_PD_02.dict.yaml

Phase: Creating model with from_typed_dict() => to_typed_dict() => ldm/ldm_models/Diagrams/Diagrams_results/Diagrams_PD_03.model.yaml
Calling LiterateModel.from_typed_dict ...

Phase: have py  model from dict

Phase: Creating model_dict from model => ldm/ldm_models/Diagrams/Diagrams_results/Diagrams_PD_03.model.yaml
as yaml - warnings =  False

Phase: Validating model tp ldm/ldm_models/Diagrams/Diagrams_results/Diagrams_PD_04.v_model.yaml
All class names are set()
all plural names are  set()
All classes names (singular and plural are: 
Attributes Index = 

finding value types...
CALC MROS - index has  {}
0  classes in final model
0  classes in final model
Calc Dependents
All Subtypings
All class names are set()
all plural names are  set()
All classes names (singular and plural are: 
Attributes Index = 

finding value types...
CALC MROS - index has  {}
0  classes in final model
0  classes in final model
Validating LiterateModel
Call to Validating references...
Before validating:  0  classes in model
Validating references
After validating:  0  classes in model
No validation diagnostics found.
as yaml - warnings =  False
..Created dict for validated model: ldm/ldm_models/Diagrams/Diagrams_results/Diagrams_PD_04.v_model.yaml

Phase: counting diagnostics
{}
pattern is ldm/ldm_models/Diagrams/Diagrams_results/*dict*.yaml
pattern is ldm/ldm_models/Diagrams/Diagrams_results/*model*.yaml
Dict names are:  ['Diagrams_PD_02.dict.yaml', 'Diagrams_PD_03.model.yaml', 'Diagrams_PD_04.v_model.yaml']
All combos are:
['Diagrams_PD_02.dict.yaml', 'Diagrams_PD_03.model.yaml']
['Diagrams_PD_03.model.yaml', 'Diagrams_PD_04.v_model.yaml']
Combo is: ['Diagrams_PD_02.dict.yaml', 'Diagrams_PD_03.model.yaml']
Including:  Diagrams_PD_02.dict.yaml
Including:  Diagrams_PD_03.model.yaml
as yaml - warnings =  False
Combo is: ['Diagrams_PD_03.model.yaml', 'Diagrams_PD_04.v_model.yaml']
Including:  Diagrams_PD_03.model.yaml
Including:  Diagrams_PD_04.v_model.yaml
as yaml - warnings =  False

Phase: Create extract for diagrams
Registered as_extract for object
Registered as_extract for LiterateModel
Registered as_extract for Class
Faculty class Extractors created
Faculty patches setup:
  Component.validate -> validate_component
  Component.as_html -> component_html
  LiterateModel.validate -> validate_literate_model
  LiterateModel.as_html -> literate_model_html
  LiterateModel.as_extract -> model_extract
  SubjectE.validate -> validate_subject_e
  SubjectE.as_html -> subject_html
  Class.validate -> validate_class
  Class.as_html -> class_html
  Class.as_extract -> class_extract
  AttributeSection.validate -> validate_attribute_section
  AttributeSection.as_html -> attribute_section_html
  Attribute.validate -> validate_attribute
  Attribute.as_html -> attribute_html
  Formula.validate -> validate_formula
  Formula.as_html -> formula_html
  Constraint.validate -> validate_constraint
  object.as_html -> any_html
  object.as_extract -> any_extract
  Paragraph.as_html -> paragraph_html
  OneLiner.as_html -> one_liner_html
  CodeBlock.as_html -> code_block_html
  str.as_html -> str_html
  list.as_html -> list_html
  Annotation.as_html -> annotation_html
  Emoji.as_html -> emoji_html
  Casing.as_html -> casing_html
  ClassName.as_html -> class_name_html
  ClassReference.as_html -> class_reference_html
  SubtypeBy.as_html -> subtype_by_html
  DataTypeClause.as_html -> dtc_html
  BaseDataType.as_html -> bdt_html
  ListDataType.as_html -> ldt_html
  SetDataType.as_html -> sdt_as_html
  MappingDataType.as_html -> mdt_html
  IsOptional.as_html -> is_optional_html
  AsValue.as_html -> as_value_html
  Diagnostic.as_html -> diagnostic_html
  Subtyping.as_html -> subtyping_html
  AttributeName.as_html -> attribute_name_html
  AttributeReference.as_html -> attribute_reference_html
Created Extractprs() =  <ldm.ldm_extractors.Extractors object at 0x00000299A7A05FD0>
Patches are...
Function validate_component registered as validate for target Component
Function component_html registered as as_html for target Component
Function validate_literate_model registered as validate for target LiterateModel
Function literate_model_html registered as as_html for target LiterateModel
Function model_extract registered as as_extract for target LiterateModel
Function validate_subject_e registered as validate for target SubjectE
Function subject_html registered as as_html for target SubjectE
Function validate_class registered as validate for target Class
Function class_html registered as as_html for target Class
Function class_extract registered as as_extract for target Class
Function validate_attribute_section registered as validate for target AttributeSection
Function attribute_section_html registered as as_html for target AttributeSection
Function validate_attribute registered as validate for target Attribute
Function attribute_html registered as as_html for target Attribute
Function validate_formula registered as validate for target Formula
Function formula_html registered as as_html for target Formula
Function validate_constraint registered as validate for target Constraint
Function any_html registered as as_html for target object
Function any_extract registered as as_extract for target object
Function paragraph_html registered as as_html for target Paragraph
Function one_liner_html registered as as_html for target OneLiner
Function code_block_html registered as as_html for target CodeBlock
Function str_html registered as as_html for target str
Function list_html registered as as_html for target list
Function annotation_html registered as as_html for target Annotation
Function emoji_html registered as as_html for target Emoji
Function casing_html registered as as_html for target Casing
Function class_name_html registered as as_html for target ClassName
Function class_reference_html registered as as_html for target ClassReference
Function subtype_by_html registered as as_html for target SubtypeBy
Function dtc_html registered as as_html for target DataTypeClause
Function bdt_html registered as as_html for target BaseDataType
Function ldt_html registered as as_html for target ListDataType
Function sdt_as_html registered as as_html for target SetDataType
Function mdt_html registered as as_html for target MappingDataType
Function is_optional_html registered as as_html for target IsOptional
Function as_value_html registered as as_html for target AsValue
Function diagnostic_html registered as as_html for target Diagnostic
Function subtyping_html registered as as_html for target Subtyping
Function attribute_name_html registered as as_html for target AttributeName
Function attribute_reference_html registered as as_html for target AttributeReference
Subjectb: Mermaid Class Diagram
[]
Subjectb: Mermaid Flowchart
[]
Subjectb: Plant UML jsondata
[]
Subjectb: Plant UML UML
[]
Subjectb: Mermaid block diagram
[]
Subjectb: Mermaid ER Diagram
[]
Subjectb: Mermaid ER Diagram
[]
Subjectb: Captioned figure
[]
Subjectb: List of Codes
[]
Subjectb: Plant UML UML
[]
Subjectb: Russian UML
[]
Subjectb: Car diagram
[]
Subjectb: Fancy Plant UML
[]
Subjectb: Mind Map
[]
Subjectb: JSON for Components
[]
And the extract is....
{'_type': 'LiterateModel', 'name': 'This is my first Mermaid test', 'classes': []}
as yaml - warnings =  False

Phase: Validating to JSON Schema
Schema path is:  ldm/ldm_models/Diagrams/Diagrams_results/LiterateMeta/LiterateMetaModel_01_PD_schema.yaml
Object  path is:  ldm/ldm_models/Diagrams/Diagrams_results/Diagrams_PD_04.v_model.yaml
Validation successful!

Phase: Skipping Render to Markdown

Phase: Creating HTML using the Faculty
Adding simple: CodeBlock 
...obj is  CodeBlock(content='```mermaid\n\n\nclassDiagram\nclass Component\nclass Literate\nclass Subject\nclass Class\nclass Attrribute Section\nclass Attribute\n\nComponent  <|-- Literate\nSubject  <|-- Literate\nClass  <|-- Literate\nAttributeSection  <|-- Literate\nAttribute  <|-- Literate\n\nclassDef default fill:yellow,stroke:#000, color:black, stroke-width:4px\n```')
Found codeblocks  1
 and the soup is 
<div>
 <pre><code class="language-mermaid">

classDiagram
class Component
class Literate
class Subject
class Class
class Attrribute Section
class Attribute

Component  &lt;|-- Literate
Subject  &lt;|-- Literate
Class  &lt;|-- Literate
AttributeSection  &lt;|-- Literate
Attribute  &lt;|-- Literate

classDef default fill:yellow,stroke:#000, color:black, stroke-width:4px
</code></pre>
</div>

Starting codeblock
code
and Starting codeblock parent for
<pre><code class="language-mermaid">

classDiagram
class Component
class Literate
class Subject
class Class
class Attrribute Section
class Attribute

Component  &lt;|-- Literate
Subject  &lt;|-- Literate
Class  &lt;|-- Literate
AttributeSection  &lt;|-- Literate
Attribute  &lt;|-- Literate

classDef default fill:yellow,stroke:#000, color:black, stroke-width:4px
</code></pre>

and Starting codeblock grandparent for
div
creating png  for mermaid in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\mermaid_img1.png
Generating single mermaid chart
Generating single mermaid chart
...contenth for prose html is...
<div>
 <pre><code class="language-mermaid mermaid">

classDiagram
class Component
class Literate
class Subject
class Class
class Attrribute Section
class Attribute

Component  &lt;|-- Literate
Subject  &lt;|-- Literate
Class  &lt;|-- Literate
AttributeSection  &lt;|-- Literate
Attribute  &lt;|-- Literate

classDef default fill:yellow,stroke:#000, color:black, stroke-width:4px
</code></pre>
 <div class="diagram png puml" string="PNG Diagram for Mermaid">
  Mermaid PNG - mermaid_img1.png
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\mermaid_img1.png" width="500px"/>
 </div>
 <div class="diagram svg puml" string="SVG Diagram for Mermaid">
  Mermaid SVG - mermaid_img1.svg
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\mermaid_img1.svg" width="500px"/>
 </div>
</div>

...end of contenth for prose html .
Adding simple: CodeBlock 
...obj is  CodeBlock(content='``` mermaid\n%%{init: {\n"flowchart": {\n"curve": "stepAfter",\n"useMaxWidth": true\n}\n}}%%\n\nflowchart TB\nsubgraph Component["Component - Base class"]\ndirection TB\n\nLiterate["Literate<br>Core implementation"]\n\nsubgraph Subtypes["Component Subtypes"]\ndirection LR\nSubject["Subject<br>Domain entity"]\nClass["Class<br>Schema definition"]\nAttributeSection["AttributeSection<br>Property group"]\nAttribute["Attribute<br>Individual property"]\nend\n\nSubject ==> Literate\nClass ==> Literate\nAttributeSection ==> Literate\nAttribute ==> Literate\nend\n\n%% Styling with border-radius only\nclassDef container fill:#e3f2fd,stroke:#1565c0,stroke-width:3px,color:#0d47a1,border-radius:10px\nclassDef subcontainer fill:#f5f5f5,stroke:#78909c,stroke-width:2px,color:#37474f,border-radius:8px\nclassDef default fill:white,stroke:#90a4ae,stroke-width:1px,color:#455a64,border-radius:5px\n\nclass Component container\nclass Subtypes subcontainer\n\n%% Edge styling\nlinkStyle default stroke:#546e7a,stroke-width:2px, border-radius: 20px\n```')
Found codeblocks  1
 and the soup is 
<div>
 <pre><code class="language-mermaid">%%{init: {
"flowchart": {
"curve": "stepAfter",
"useMaxWidth": true
}
}}%%

flowchart TB
subgraph Component["Component - Base class"]
direction TB

Literate["Literate&lt;br&gt;Core implementation"]

subgraph Subtypes["Component Subtypes"]
direction LR
Subject["Subject&lt;br&gt;Domain entity"]
Class["Class&lt;br&gt;Schema definition"]
AttributeSection["AttributeSection&lt;br&gt;Property group"]
Attribute["Attribute&lt;br&gt;Individual property"]
end

Subject ==&gt; Literate
Class ==&gt; Literate
AttributeSection ==&gt; Literate
Attribute ==&gt; Literate
end

%% Styling with border-radius only
classDef container fill:#e3f2fd,stroke:#1565c0,stroke-width:3px,color:#0d47a1,border-radius:10px
classDef subcontainer fill:#f5f5f5,stroke:#78909c,stroke-width:2px,color:#37474f,border-radius:8px
classDef default fill:white,stroke:#90a4ae,stroke-width:1px,color:#455a64,border-radius:5px

class Component container
class Subtypes subcontainer

%% Edge styling
linkStyle default stroke:#546e7a,stroke-width:2px, border-radius: 20px
</code></pre>
</div>

Starting codeblock
code
and Starting codeblock parent for
<pre><code class="language-mermaid">%%{init: {
"flowchart": {
"curve": "stepAfter",
"useMaxWidth": true
}
}}%%

flowchart TB
subgraph Component["Component - Base class"]
direction TB

Literate["Literate&lt;br&gt;Core implementation"]

subgraph Subtypes["Component Subtypes"]
direction LR
Subject["Subject&lt;br&gt;Domain entity"]
Class["Class&lt;br&gt;Schema definition"]
AttributeSection["AttributeSection&lt;br&gt;Property group"]
Attribute["Attribute&lt;br&gt;Individual property"]
end

Subject ==&gt; Literate
Class ==&gt; Literate
AttributeSection ==&gt; Literate
Attribute ==&gt; Literate
end

%% Styling with border-radius only
classDef container fill:#e3f2fd,stroke:#1565c0,stroke-width:3px,color:#0d47a1,border-radius:10px
classDef subcontainer fill:#f5f5f5,stroke:#78909c,stroke-width:2px,color:#37474f,border-radius:8px
classDef default fill:white,stroke:#90a4ae,stroke-width:1px,color:#455a64,border-radius:5px

class Component container
class Subtypes subcontainer

%% Edge styling
linkStyle default stroke:#546e7a,stroke-width:2px, border-radius: 20px
</code></pre>

and Starting codeblock grandparent for
div
creating png  for mermaid in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\mermaid_img2.png
Generating single mermaid chart
Generating single mermaid chart
...contenth for prose html is...
<div>
 <pre><code class="language-mermaid mermaid">%%{init: {
"flowchart": {
"curve": "stepAfter",
"useMaxWidth": true
}
}}%%

flowchart TB
subgraph Component["Component - Base class"]
direction TB

Literate["Literate&lt;br&gt;Core implementation"]

subgraph Subtypes["Component Subtypes"]
direction LR
Subject["Subject&lt;br&gt;Domain entity"]
Class["Class&lt;br&gt;Schema definition"]
AttributeSection["AttributeSection&lt;br&gt;Property group"]
Attribute["Attribute&lt;br&gt;Individual property"]
end

Subject ==&gt; Literate
Class ==&gt; Literate
AttributeSection ==&gt; Literate
Attribute ==&gt; Literate
end

%% Styling with border-radius only
classDef container fill:#e3f2fd,stroke:#1565c0,stroke-width:3px,color:#0d47a1,border-radius:10px
classDef subcontainer fill:#f5f5f5,stroke:#78909c,stroke-width:2px,color:#37474f,border-radius:8px
classDef default fill:white,stroke:#90a4ae,stroke-width:1px,color:#455a64,border-radius:5px

class Component container
class Subtypes subcontainer

%% Edge styling
linkStyle default stroke:#546e7a,stroke-width:2px, border-radius: 20px
</code></pre>
 <div class="diagram png puml" string="PNG Diagram for Mermaid">
  Mermaid PNG - mermaid_img2.png
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\mermaid_img2.png" width="500px"/>
 </div>
 <div class="diagram svg puml" string="SVG Diagram for Mermaid">
  Mermaid SVG - mermaid_img2.svg
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\mermaid_img2.svg" width="500px"/>
 </div>
</div>

...end of contenth for prose html .
Adding simple: CodeBlock 
...obj is  CodeBlock(content='``` puml\n@startjson\n<style>\n.h1 {\nBackGroundColor green\nFontColor white\nFontStyle italic\n}\n.h2 {\nBackGroundColor red\nFontColor white\nFontStyle bold\n}\n</style>\n#highlight "lastName"\n#highlight "address" / "city" <<h1>>\n#highlight "phoneNumbers" / "0" / "number" <<h2>>\n{\n"firstName": "John",\n"lastName": "Smith",\n"isAlive": true,\n"age": 28,\n"address": {\n"streetAddress": "21 2nd Street",\n"city": "New York",\n"state": "NY",\n"postalCode": "10021-3100"\n},\n"phoneNumbers": [\n{\n"type": "home",\n"number": "212 555-1234"\n},\n{\n"type": "office",\n"number": "646 555-4567"\n}\n],\n"children": [],\n"spouse": null\n}\n@endjson\n```')
Found codeblocks  1
 and the soup is 
<div>
 <pre><code class="language-puml">@startjson
&lt;style&gt;
.h1 {
BackGroundColor green
FontColor white
FontStyle italic
}
.h2 {
BackGroundColor red
FontColor white
FontStyle bold
}
&lt;/style&gt;
#highlight "lastName"
#highlight "address" / "city" &lt;&lt;h1&gt;&gt;
#highlight "phoneNumbers" / "0" / "number" &lt;&lt;h2&gt;&gt;
{
"firstName": "John",
"lastName": "Smith",
"isAlive": true,
"age": 28,
"address": {
"streetAddress": "21 2nd Street",
"city": "New York",
"state": "NY",
"postalCode": "10021-3100"
},
"phoneNumbers": [
{
"type": "home",
"number": "212 555-1234"
},
{
"type": "office",
"number": "646 555-4567"
}
],
"children": [],
"spouse": null
}
@endjson
</code></pre>
</div>

Starting codeblock
code
and Starting codeblock parent for
<pre><code class="language-puml">@startjson
&lt;style&gt;
.h1 {
BackGroundColor green
FontColor white
FontStyle italic
}
.h2 {
BackGroundColor red
FontColor white
FontStyle bold
}
&lt;/style&gt;
#highlight "lastName"
#highlight "address" / "city" &lt;&lt;h1&gt;&gt;
#highlight "phoneNumbers" / "0" / "number" &lt;&lt;h2&gt;&gt;
{
"firstName": "John",
"lastName": "Smith",
"isAlive": true,
"age": 28,
"address": {
"streetAddress": "21 2nd Street",
"city": "New York",
"state": "NY",
"postalCode": "10021-3100"
},
"phoneNumbers": [
{
"type": "home",
"number": "212 555-1234"
},
{
"type": "office",
"number": "646 555-4567"
}
],
"children": [],
"spouse": null
}
@endjson
</code></pre>

and Starting codeblock grandparent for
div
creating png in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img3.png
PUML png file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img3.png
PUML svg file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img3.svg
...contenth for prose html is...
<div>
 <pre><code class="language-puml">@startjson
&lt;style&gt;
.h1 {
BackGroundColor green
FontColor white
FontStyle italic
}
.h2 {
BackGroundColor red
FontColor white
FontStyle bold
}
&lt;/style&gt;
#highlight "lastName"
#highlight "address" / "city" &lt;&lt;h1&gt;&gt;
#highlight "phoneNumbers" / "0" / "number" &lt;&lt;h2&gt;&gt;
{
"firstName": "John",
"lastName": "Smith",
"isAlive": true,
"age": 28,
"address": {
"streetAddress": "21 2nd Street",
"city": "New York",
"state": "NY",
"postalCode": "10021-3100"
},
"phoneNumbers": [
{
"type": "home",
"number": "212 555-1234"
},
{
"type": "office",
"number": "646 555-4567"
}
],
"children": [],
"spouse": null
}
@endjson
</code></pre>
 <div class="diagram png puml" string="PNG Diagram plant_img3.png">
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img3.png" width="500px"/>
 </div>
 <div class="diagram svg puml" string="SVG Diagramplant_img3.svg">
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img3.svg" width="500px"/>
 </div>
</div>

...end of contenth for prose html .
Adding simple: CodeBlock 
...obj is  CodeBlock(content='``` puml\n\n@startuml\n\nrectangle Component\nrectangle Literate\nrectangle Subject\nrectangle Class\nrectangle Attribute\nrectangle a\n\nLiterate -u->  a\nSubject -u-> a\nClass -u-> a\nAttribute -u-> a\na -u-> Component\nskinparam linetype ortho\n@enduml\n```')
Found codeblocks  1
 and the soup is 
<div>
 <pre><code class="language-puml">
@startuml

rectangle Component
rectangle Literate
rectangle Subject
rectangle Class
rectangle Attribute
rectangle a

Literate -u-&gt;  a
Subject -u-&gt; a
Class -u-&gt; a
Attribute -u-&gt; a
a -u-&gt; Component
skinparam linetype ortho
@enduml
</code></pre>
</div>

Starting codeblock
code
and Starting codeblock parent for
<pre><code class="language-puml">
@startuml

rectangle Component
rectangle Literate
rectangle Subject
rectangle Class
rectangle Attribute
rectangle a

Literate -u-&gt;  a
Subject -u-&gt; a
Class -u-&gt; a
Attribute -u-&gt; a
a -u-&gt; Component
skinparam linetype ortho
@enduml
</code></pre>

and Starting codeblock grandparent for
div
creating png in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img4.png
PUML png file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img4.png
PUML svg file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img4.svg
...contenth for prose html is...
<div>
 <pre><code class="language-puml">
@startuml

rectangle Component
rectangle Literate
rectangle Subject
rectangle Class
rectangle Attribute
rectangle a

Literate -u-&gt;  a
Subject -u-&gt; a
Class -u-&gt; a
Attribute -u-&gt; a
a -u-&gt; Component
skinparam linetype ortho
@enduml
</code></pre>
 <div class="diagram png puml" string="PNG Diagram plant_img4.png">
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img4.png" width="500px"/>
 </div>
 <div class="diagram svg puml" string="SVG Diagramplant_img4.svg">
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img4.svg" width="500px"/>
 </div>
</div>

...end of contenth for prose html .
Adding simple: CodeBlock 
...obj is  CodeBlock(content='```mermaid\nblock-beta\ncolumns 3\na:3\nblock:group1:2\ncolumns 2\nh i j k\nend\ng\nblock:group2:3\n%% columns auto (default)\nl m n o p q r\nend\n```')
Found codeblocks  1
 and the soup is 
<div>
 <pre><code class="language-mermaid">block-beta
columns 3
a:3
block:group1:2
columns 2
h i j k
end
g
block:group2:3
%% columns auto (default)
l m n o p q r
end
</code></pre>
</div>

Starting codeblock
code
and Starting codeblock parent for
<pre><code class="language-mermaid">block-beta
columns 3
a:3
block:group1:2
columns 2
h i j k
end
g
block:group2:3
%% columns auto (default)
l m n o p q r
end
</code></pre>

and Starting codeblock grandparent for
div
creating png  for mermaid in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\mermaid_img5.png
Generating single mermaid chart
Browser console: . 

Browser console: COLUMNS (LEX) 3
Browser console: . 

Browser console: Lex: NODE_ID a
Browser console: APA123 {$: 3, _$: Object}
Browser console: COLUMNS:  3
Browser console: Lex: COLON :3
Browser console: Rule: node (NODE_ID separator):  a
Browser console: . 

Browser console: Found space-block
Browser console: Rule: nodeStatement (abc88 node size)  {id: a} 3
Browser console: Lex: NODE_ID group1
Browser console: Lex: COLON :2
Browser console: Rule: node (NODE_ID separator):  group1
Browser console: . 

Browser console: COLUMNS (LEX) 2
Browser console: Rule: nodeStatement (abc88 node size)  {id: group1} 2
Browser console: . 

Browser console: Lex: NODE_ID h
Browser console: APA123 {$: 2, _$: Object}
Browser console: COLUMNS:  2
Browser console: .  
Browser console: Lex: NODE_ID i
Browser console: Rule: node (NODE_ID separator):  h
Browser console: Rule: nodeStatement (node)  {id: h}
Browser console: .  
Browser console: Lex: NODE_ID j
Browser console: Rule: node (NODE_ID separator):  i
Browser console: Rule: nodeStatement (node)  {id: i}
Browser console: .  
Browser console: Lex: NODE_ID k
Browser console: Rule: node (NODE_ID separator):  j
Browser console: Rule: nodeStatement (node)  {id: j}
Browser console: . 

Browser console: Rule: node (NODE_ID separator):  k
Browser console: Rule: nodeStatement (node)  {id: k}
Browser console: Rule: statement:  {id: k, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: j, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: i, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: h, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {type: column-setting, columns: 2}
Browser console: Lex: NODE_ID g
Browser console: Rule: id-block statement :  {id: group1, label: undefined, type: na, directions: undefined, widthInColumns: 2} [Object, Object, Object, Object, Object]
Browser console: . 

Browser console: Found space-block
Browser console: Rule: node (NODE_ID separator):  g
Browser console: Rule: nodeStatement (node)  {id: g}
Browser console: Lex: NODE_ID group2
Browser console: Lex: COLON :3
Browser console: Rule: node (NODE_ID separator):  group2
Browser console: . 

Browser console: Lex: NODE_ID l
Browser console: Rule: nodeStatement (abc88 node size)  {id: group2} 3
Browser console: .  
Browser console: Lex: NODE_ID m
Browser console: Rule: node (NODE_ID separator):  l
Browser console: Rule: nodeStatement (node)  {id: l}
Browser console: .  
Browser console: Lex: NODE_ID n
Browser console: Rule: node (NODE_ID separator):  m
Browser console: Rule: nodeStatement (node)  {id: m}
Browser console: .  
Browser console: Lex: NODE_ID o
Browser console: Rule: node (NODE_ID separator):  n
Browser console: Rule: nodeStatement (node)  {id: n}
Browser console: .  
Browser console: Lex: NODE_ID p
Browser console: Rule: node (NODE_ID separator):  o
Browser console: Rule: nodeStatement (node)  {id: o}
Browser console: .  
Browser console: Lex: NODE_ID q
Browser console: Rule: node (NODE_ID separator):  p
Browser console: Rule: nodeStatement (node)  {id: p}
Browser console: .  
Browser console: Lex: NODE_ID r
Browser console: Rule: node (NODE_ID separator):  q
Browser console: Rule: nodeStatement (node)  {id: q}
Browser console: . 

Browser console: Rule: node (NODE_ID separator):  r
Browser console: Rule: nodeStatement (node)  {id: r}
Browser console: Rule: statement:  {id: r, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: q, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: p, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: o, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: n, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: m, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: l, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Lex: EOF 
Browser console: Rule: id-block statement :  {id: group2, label: undefined, type: na, directions: undefined, widthInColumns: 3} [Object, Object, Object, Object, Object, Object, Object]
Browser console: Rule: statement:  {id: group2, label: undefined, type: composite, directions: undefined, widthInColumns: 3}
Browser console: Rule: statement #2:  {id: g, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: group1, label: undefined, type: composite, directions: undefined, widthInColumns: 2}
Browser console: Rule: statement #2:  {id: a, label: undefined, type: na, directions: undefined, widthInColumns: 3}
Browser console: Rule: statement #2:  {type: column-setting, columns: 3}
Browser console: Rule: hierarchy:  [Object, Object, Object, Object, Object]
Generating single mermaid chart
Browser console: . 

Browser console: COLUMNS (LEX) 3
Browser console: . 

Browser console: Lex: NODE_ID a
Browser console: APA123 {$: 3, _$: Object}
Browser console: COLUMNS:  3
Browser console: Lex: COLON :3
Browser console: Rule: node (NODE_ID separator):  a
Browser console: . 

Browser console: Found space-block
Browser console: Rule: nodeStatement (abc88 node size)  {id: a} 3
Browser console: Lex: NODE_ID group1
Browser console: Lex: COLON :2
Browser console: Rule: node (NODE_ID separator):  group1
Browser console: . 

Browser console: COLUMNS (LEX) 2
Browser console: Rule: nodeStatement (abc88 node size)  {id: group1} 2
Browser console: . 

Browser console: Lex: NODE_ID h
Browser console: APA123 {$: 2, _$: Object}
Browser console: COLUMNS:  2
Browser console: .  
Browser console: Lex: NODE_ID i
Browser console: Rule: node (NODE_ID separator):  h
Browser console: Rule: nodeStatement (node)  {id: h}
Browser console: .  
Browser console: Lex: NODE_ID j
Browser console: Rule: node (NODE_ID separator):  i
Browser console: Rule: nodeStatement (node)  {id: i}
Browser console: .  
Browser console: Lex: NODE_ID k
Browser console: Rule: node (NODE_ID separator):  j
Browser console: Rule: nodeStatement (node)  {id: j}
Browser console: . 

Browser console: Rule: node (NODE_ID separator):  k
Browser console: Rule: nodeStatement (node)  {id: k}
Browser console: Rule: statement:  {id: k, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: j, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: i, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: h, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {type: column-setting, columns: 2}
Browser console: Lex: NODE_ID g
Browser console: Rule: id-block statement :  {id: group1, label: undefined, type: na, directions: undefined, widthInColumns: 2} [Object, Object, Object, Object, Object]
Browser console: . 

Browser console: Found space-block
Browser console: Rule: node (NODE_ID separator):  g
Browser console: Rule: nodeStatement (node)  {id: g}
Browser console: Lex: NODE_ID group2
Browser console: Lex: COLON :3
Browser console: Rule: node (NODE_ID separator):  group2
Browser console: . 

Browser console: Lex: NODE_ID l
Browser console: Rule: nodeStatement (abc88 node size)  {id: group2} 3
Browser console: .  
Browser console: Lex: NODE_ID m
Browser console: Rule: node (NODE_ID separator):  l
Browser console: Rule: nodeStatement (node)  {id: l}
Browser console: .  
Browser console: Lex: NODE_ID n
Browser console: Rule: node (NODE_ID separator):  m
Browser console: Rule: nodeStatement (node)  {id: m}
Browser console: .  
Browser console: Lex: NODE_ID o
Browser console: Rule: node (NODE_ID separator):  n
Browser console: Rule: nodeStatement (node)  {id: n}
Browser console: .  
Browser console: Lex: NODE_ID p
Browser console: Rule: node (NODE_ID separator):  o
Browser console: Rule: nodeStatement (node)  {id: o}
Browser console: .  
Browser console: Lex: NODE_ID q
Browser console: Rule: node (NODE_ID separator):  p
Browser console: Rule: nodeStatement (node)  {id: p}
Browser console: .  
Browser console: Lex: NODE_ID r
Browser console: Rule: node (NODE_ID separator):  q
Browser console: Rule: nodeStatement (node)  {id: q}
Browser console: . 

Browser console: Rule: node (NODE_ID separator):  r
Browser console: Rule: nodeStatement (node)  {id: r}
Browser console: Rule: statement:  {id: r, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: q, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: p, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: o, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: n, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: m, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: l, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Lex: EOF 
Browser console: Rule: id-block statement :  {id: group2, label: undefined, type: na, directions: undefined, widthInColumns: 3} [Object, Object, Object, Object, Object, Object, Object]
Browser console: Rule: statement:  {id: group2, label: undefined, type: composite, directions: undefined, widthInColumns: 3}
Browser console: Rule: statement #2:  {id: g, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: group1, label: undefined, type: composite, directions: undefined, widthInColumns: 2}
Browser console: Rule: statement #2:  {id: a, label: undefined, type: na, directions: undefined, widthInColumns: 3}
Browser console: Rule: statement #2:  {type: column-setting, columns: 3}
Browser console: Rule: hierarchy:  [Object, Object, Object, Object, Object]
...contenth for prose html is...
<div>
 <pre><code class="language-mermaid mermaid">block-beta
columns 3
a:3
block:group1:2
columns 2
h i j k
end
g
block:group2:3
%% columns auto (default)
l m n o p q r
end
</code></pre>
 <div class="diagram png puml" string="PNG Diagram for Mermaid">
  Mermaid PNG - mermaid_img5.png
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\mermaid_img5.png" width="500px"/>
 </div>
 <div class="diagram svg puml" string="SVG Diagram for Mermaid">
  Mermaid SVG - mermaid_img5.svg
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\mermaid_img5.svg" width="500px"/>
 </div>
</div>

...end of contenth for prose html .
Adding simple: CodeBlock 
...obj is  CodeBlock(content='``` mermaid\n\nerDiagram\n\nCAR {\n\nstring registrationNumber\n\nstring make\n\nstring model\n\n}\n\nPERSON {\n\nstring firstName\n\nstring lastName\n\nint age\n\n}\n\nstyle CAR fill: red,stroke:navy,stroke-width:3px\n\nstyle PERSON color: white, fill: navy,stroke:yellow ,stroke-width:2px\n\n```')
Found codeblocks  1
 and the soup is 
<div>
 <pre><code class="language-mermaid">
erDiagram

CAR {

string registrationNumber

string make

string model

}

PERSON {

string firstName

string lastName

int age

}

style CAR fill: red,stroke:navy,stroke-width:3px

style PERSON color: white, fill: navy,stroke:yellow ,stroke-width:2px

</code></pre>
</div>

Starting codeblock
code
and Starting codeblock parent for
<pre><code class="language-mermaid">
erDiagram

CAR {

string registrationNumber

string make

string model

}

PERSON {

string firstName

string lastName

int age

}

style CAR fill: red,stroke:navy,stroke-width:3px

style PERSON color: white, fill: navy,stroke:yellow ,stroke-width:2px

</code></pre>

and Starting codeblock grandparent for
div
creating png  for mermaid in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\mermaid_img6.png
Generating single mermaid chart
Generating single mermaid chart
...contenth for prose html is...
<div>
 <pre><code class="language-mermaid mermaid">
erDiagram

CAR {

string registrationNumber

string make

string model

}

PERSON {

string firstName

string lastName

int age

}

style CAR fill: red,stroke:navy,stroke-width:3px

style PERSON color: white, fill: navy,stroke:yellow ,stroke-width:2px

</code></pre>
 <div class="diagram png puml" string="PNG Diagram for Mermaid">
  Mermaid PNG - mermaid_img6.png
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\mermaid_img6.png" width="500px"/>
 </div>
 <div class="diagram svg puml" string="SVG Diagram for Mermaid">
  Mermaid SVG - mermaid_img6.svg
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\mermaid_img6.svg" width="500px"/>
 </div>
</div>

...end of contenth for prose html .
Adding simple: CodeBlock 
...obj is  CodeBlock(content='``` mermaid\nerDiagram\n\nclass Subject Component\n\nclass Section Component\n\nclass Attribute Component\n\nclass Classe Component\n\nSubject ||--|{ Subject : contains\n\nSubject ||--|{ Classe : contains\n\n\n\nClasse ||--|{ Section : contains\n\nClasse ||--|{ Attribute : contains\n\nSection ||--|{ Attribute : contains\n\n```')
Found codeblocks  1
 and the soup is 
<div>
 <pre><code class="language-mermaid">erDiagram

class Subject Component

class Section Component

class Attribute Component

class Classe Component

Subject ||--|{ Subject : contains

Subject ||--|{ Classe : contains



Classe ||--|{ Section : contains

Classe ||--|{ Attribute : contains

Section ||--|{ Attribute : contains

</code></pre>
</div>

Starting codeblock
code
and Starting codeblock parent for
<pre><code class="language-mermaid">erDiagram

class Subject Component

class Section Component

class Attribute Component

class Classe Component

Subject ||--|{ Subject : contains

Subject ||--|{ Classe : contains



Classe ||--|{ Section : contains

Classe ||--|{ Attribute : contains

Section ||--|{ Attribute : contains

</code></pre>

and Starting codeblock grandparent for
div
creating png  for mermaid in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\mermaid_img7.png
Generating single mermaid chart
Generating single mermaid chart
...contenth for prose html is...
<div>
 <pre><code class="language-mermaid mermaid">erDiagram

class Subject Component

class Section Component

class Attribute Component

class Classe Component

Subject ||--|{ Subject : contains

Subject ||--|{ Classe : contains



Classe ||--|{ Section : contains

Classe ||--|{ Attribute : contains

Section ||--|{ Attribute : contains

</code></pre>
 <div class="diagram png puml" string="PNG Diagram for Mermaid">
  Mermaid PNG - mermaid_img7.png
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\mermaid_img7.png" width="500px"/>
 </div>
 <div class="diagram svg puml" string="SVG Diagram for Mermaid">
  Mermaid SVG - mermaid_img7.svg
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\mermaid_img7.svg" width="500px"/>
 </div>
</div>

...end of contenth for prose html .
Adding simple: Paragraph 
...obj is  <figure>
 
+ <img src="../ldm_assets/FMKNYIDFrontIMG_1141.jpg" alt="Trulli" style="width:30%">
 
+ <figcaption>Fig.1 - Trulli, Puglia, Italy.</figcaption>
 
+ </figure>

Found codeblocks  0
...contenth for prose html is...
<div>
 <figure>
  +
  <img alt="Trulli" src="../ldm_assets/FMKNYIDFrontIMG_1141.jpg" style="width:30%"/>
  +
  <figcaption>
   Fig.1 - Trulli, Puglia, Italy.
  </figcaption>
  +
 </figure>
</div>

...end of contenth for prose html .
Adding simple: Paragraph 
...obj is  And the same figure with figure/caption markup

Found codeblocks  0
...contenth for prose html is...
<div>
 <p>
  And the same figure with figure/caption markup
 </p>
</div>

...end of contenth for prose html .
Adding simple: Paragraph 
...obj is  <figure title="A Drivers License">
 
+ <img src="../FMKNYIDFrontIMG_1141.jpg" style="width:20%">
 
+ <figcaption>My Non-Drivers License</figcaption>
 
+ </figure>

Found codeblocks  0
...contenth for prose html is...
<div>
 <figure title="A Drivers License">
  +
  <img src="../FMKNYIDFrontIMG_1141.jpg" style="width:20%"/>
  +
  <figcaption>
   My Non-Drivers License
  </figcaption>
  +
 </figure>
</div>

...end of contenth for prose html .
Adding simple: CodeBlock 
...obj is  CodeBlock(content="```csv\neFormat, Description\nE-Book, 'Kindle or Apple books - etc'\nPDF, formatted for printing and direct delivery\n\n```")
Found codeblocks  1
 and the soup is 
<div>
 <pre><code class="language-csv">eFormat, Description
E-Book, 'Kindle or Apple books - etc'
PDF, formatted for printing and direct delivery

</code></pre>
</div>

Starting codeblock
code
and Starting codeblock parent for
<pre><code class="language-csv">eFormat, Description
E-Book, 'Kindle or Apple books - etc'
PDF, formatted for printing and direct delivery

</code></pre>

and Starting codeblock grandparent for
div
...contenth for prose html is...
<div>
 <pre><code class="language-csv">eFormat, Description
E-Book, 'Kindle or Apple books - etc'
PDF, formatted for printing and direct delivery

<div class="codes-table"><table border="1" class="dataframe">
<thead>
<tr style="text-align: right;">
<th></th>
<th>eFormat</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<th>0</th>
<td>E-Book</td>
<td>'Kindle or Apple books - etc'</td>
</tr>
<tr>
<th>1</th>
<td>PDF</td>
<td>formatted for printing and direct delivery</td>
</tr>
</tbody>
</table></div></code></pre>
</div>

...end of contenth for prose html .
Adding simple: CodeBlock 
...obj is  CodeBlock(content='``` puml\n\n@startuml\n\nnwdiag {\n\nnetwork {\n\nComponent;\n\nLiterate;\n\nSubject;\n\nAttribute;\n\nAttributeSection;\n\nClass;\n\nComponent -- Literate;\n\nComponent -- Subject;\n\nComponent -- Class;\n\nComponent -- AttributeSection;\n\nComponent -- Attribute;\n\n\n\nSubject [description = "Domain entity"];\n\nLiterate [description = "Core implementation"];\n\nAttributeSection [description = "Property group"];\n\nAttribute [description = "Individual property"];\n\nClass [description = "Schema definition"];\n\n\n\n\n}\n\n}\n\n@enduml\n```')
Found codeblocks  1
 and the soup is 
<div>
 <pre><code class="language-puml">
@startuml

nwdiag {

network {

Component;

Literate;

Subject;

Attribute;

AttributeSection;

Class;

Component -- Literate;

Component -- Subject;

Component -- Class;

Component -- AttributeSection;

Component -- Attribute;



Subject [description = "Domain entity"];

Literate [description = "Core implementation"];

AttributeSection [description = "Property group"];

Attribute [description = "Individual property"];

Class [description = "Schema definition"];




}

}

@enduml
</code></pre>
</div>

Starting codeblock
code
and Starting codeblock parent for
<pre><code class="language-puml">
@startuml

nwdiag {

network {

Component;

Literate;

Subject;

Attribute;

AttributeSection;

Class;

Component -- Literate;

Component -- Subject;

Component -- Class;

Component -- AttributeSection;

Component -- Attribute;



Subject [description = "Domain entity"];

Literate [description = "Core implementation"];

AttributeSection [description = "Property group"];

Attribute [description = "Individual property"];

Class [description = "Schema definition"];




}

}

@enduml
</code></pre>

and Starting codeblock grandparent for
div
creating png in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img8.png
PUML png file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img8.png
PUML svg file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img8.svg
...contenth for prose html is...
<div>
 <pre><code class="language-puml">
@startuml

nwdiag {

network {

Component;

Literate;

Subject;

Attribute;

AttributeSection;

Class;

Component -- Literate;

Component -- Subject;

Component -- Class;

Component -- AttributeSection;

Component -- Attribute;



Subject [description = "Domain entity"];

Literate [description = "Core implementation"];

AttributeSection [description = "Property group"];

Attribute [description = "Individual property"];

Class [description = "Schema definition"];




}

}

@enduml
</code></pre>
 <div class="diagram png puml" string="PNG Diagram plant_img8.png">
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img8.png" width="500px"/>
 </div>
 <div class="diagram svg puml" string="SVG Diagramplant_img8.svg">
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img8.svg" width="500px"/>
 </div>
</div>

...end of contenth for prose html .
Adding simple: CodeBlock 
...obj is  CodeBlock(content='``` puml\n@startuml\n\'hide empty description\n\'!pragma layout elk\nskinparam rectangleBorderThickness 1\nskinparam defaultTextAlignment center\nskinparam lifelineStrategy solid\nskinparam monochrome false\nskinparam style strictuml\nhide empty members\nskinparam Linetype ortho\n\nrectangle "Базовые модули" as base {\n\nclass "Базовые объекты" as baseobjects\nclass "Делопроизводство\\n4.5" as takeoffice\nclass "Управление\\nпроцессами" as workflow\nclass "Windows-клиент" as windowsclient\n\nclass "Управление\\nдокументами" as documentmanagement\nclass "Конструктор\\nсогласований" as approvaldesigner\n\nclass "Платформа" as platform\nclass "Служба\\n фоновых операций" as worker\n\n}\n\nplatform <-- baseobjects\nplatform <-- workflow\nplatform <-- takeoffice\nplatform <-- windowsclient\nplatform <-- documentmanagement\nplatform <-- approvaldesigner\n\nwindowsclient -up-> approvaldesigner\nwindowsclient -up-> documentmanagement\nwindowsclient -up-> baseobjects\nwindowsclient -up-> takeoffice\nwindowsclient -up-> workflow\n\nworker <-- approvaldesigner\nworker <-- baseobjects\n@enduml\n\n```')
Found codeblocks  1
 and the soup is 
<div>
 <pre><code class="language-puml">@startuml
'hide empty description
'!pragma layout elk
skinparam rectangleBorderThickness 1
skinparam defaultTextAlignment center
skinparam lifelineStrategy solid
skinparam monochrome false
skinparam style strictuml
hide empty members
skinparam Linetype ortho

rectangle "Базовые модули" as base {

class "Базовые объекты" as baseobjects
class "Делопроизводство\n4.5" as takeoffice
class "Управление\nпроцессами" as workflow
class "Windows-клиент" as windowsclient

class "Управление\nдокументами" as documentmanagement
class "Конструктор\nсогласований" as approvaldesigner

class "Платформа" as platform
class "Служба\n фоновых операций" as worker

}

platform &lt;-- baseobjects
platform &lt;-- workflow
platform &lt;-- takeoffice
platform &lt;-- windowsclient
platform &lt;-- documentmanagement
platform &lt;-- approvaldesigner

windowsclient -up-&gt; approvaldesigner
windowsclient -up-&gt; documentmanagement
windowsclient -up-&gt; baseobjects
windowsclient -up-&gt; takeoffice
windowsclient -up-&gt; workflow

worker &lt;-- approvaldesigner
worker &lt;-- baseobjects
@enduml

</code></pre>
</div>

Starting codeblock
code
and Starting codeblock parent for
<pre><code class="language-puml">@startuml
'hide empty description
'!pragma layout elk
skinparam rectangleBorderThickness 1
skinparam defaultTextAlignment center
skinparam lifelineStrategy solid
skinparam monochrome false
skinparam style strictuml
hide empty members
skinparam Linetype ortho

rectangle "Базовые модули" as base {

class "Базовые объекты" as baseobjects
class "Делопроизводство\n4.5" as takeoffice
class "Управление\nпроцессами" as workflow
class "Windows-клиент" as windowsclient

class "Управление\nдокументами" as documentmanagement
class "Конструктор\nсогласований" as approvaldesigner

class "Платформа" as platform
class "Служба\n фоновых операций" as worker

}

platform &lt;-- baseobjects
platform &lt;-- workflow
platform &lt;-- takeoffice
platform &lt;-- windowsclient
platform &lt;-- documentmanagement
platform &lt;-- approvaldesigner

windowsclient -up-&gt; approvaldesigner
windowsclient -up-&gt; documentmanagement
windowsclient -up-&gt; baseobjects
windowsclient -up-&gt; takeoffice
windowsclient -up-&gt; workflow

worker &lt;-- approvaldesigner
worker &lt;-- baseobjects
@enduml

</code></pre>

and Starting codeblock grandparent for
div
creating png in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img9.png
PUML png file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img9.png
PUML svg file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img9.svg
...contenth for prose html is...
<div>
 <pre><code class="language-puml">@startuml
'hide empty description
'!pragma layout elk
skinparam rectangleBorderThickness 1
skinparam defaultTextAlignment center
skinparam lifelineStrategy solid
skinparam monochrome false
skinparam style strictuml
hide empty members
skinparam Linetype ortho

rectangle "Базовые модули" as base {

class "Базовые объекты" as baseobjects
class "Делопроизводство\n4.5" as takeoffice
class "Управление\nпроцессами" as workflow
class "Windows-клиент" as windowsclient

class "Управление\nдокументами" as documentmanagement
class "Конструктор\nсогласований" as approvaldesigner

class "Платформа" as platform
class "Служба\n фоновых операций" as worker

}

platform &lt;-- baseobjects
platform &lt;-- workflow
platform &lt;-- takeoffice
platform &lt;-- windowsclient
platform &lt;-- documentmanagement
platform &lt;-- approvaldesigner

windowsclient -up-&gt; approvaldesigner
windowsclient -up-&gt; documentmanagement
windowsclient -up-&gt; baseobjects
windowsclient -up-&gt; takeoffice
windowsclient -up-&gt; workflow

worker &lt;-- approvaldesigner
worker &lt;-- baseobjects
@enduml

</code></pre>
 <div class="diagram png puml" string="PNG Diagram plant_img9.png">
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img9.png" width="500px"/>
 </div>
 <div class="diagram svg puml" string="SVG Diagramplant_img9.svg">
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img9.svg" width="500px"/>
 </div>
</div>

...end of contenth for prose html .
Adding simple: CodeBlock 
...obj is  CodeBlock(content='``` puml\n@startuml\nclass Car\n\nDriver - Car : drives >\nCar *- Wheel : have 4 >\nCar -- Person : < owns\n@enduml\n```')
Found codeblocks  1
 and the soup is 
<div>
 <pre><code class="language-puml">@startuml
class Car

Driver - Car : drives &gt;
Car *- Wheel : have 4 &gt;
Car -- Person : &lt; owns
@enduml
</code></pre>
</div>

Starting codeblock
code
and Starting codeblock parent for
<pre><code class="language-puml">@startuml
class Car

Driver - Car : drives &gt;
Car *- Wheel : have 4 &gt;
Car -- Person : &lt; owns
@enduml
</code></pre>

and Starting codeblock grandparent for
div
creating png in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img10.png
PUML png file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img10.png
PUML svg file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img10.svg
...contenth for prose html is...
<div>
 <pre><code class="language-puml">@startuml
class Car

Driver - Car : drives &gt;
Car *- Wheel : have 4 &gt;
Car -- Person : &lt; owns
@enduml
</code></pre>
 <div class="diagram png puml" string="PNG Diagram plant_img10.png">
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img10.png" width="500px"/>
 </div>
 <div class="diagram svg puml" string="SVG Diagramplant_img10.svg">
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img10.svg" width="500px"/>
 </div>
</div>

...end of contenth for prose html .
Adding simple: CodeBlock 
...obj is  CodeBlock(content='```puml\n@startuml\n\' Configure the modern style approach with CSS\n\' Try polyline instead of ortho\nskinparam linetype polyline\n\n<style>\n/* Global settings */\ndiagram {\nbackgroundColor: white;\n}\n\n/* Class styling */\nclass {\nBackgroundColor: #FFFFEE;\nBorderColor: #333333;\nBorderThickness: 1;\nBorderRadius: 8;\nFontColor: #333333;\nFontSize: 12;\n}\n\n/* Arrow styling */\narrow {\nColor: #333333;\nThickness: 1.5;\n}\n\n/* Package styling */\npackage {\nBackgroundColor: #E6F2FF;\nBorderColor: #336699;\nBorderThickness: 3;\nFontColor: #333333;\n}\n\n/* Custom style for Component */\n.container {\nBackgroundColor: #E6F2FF;\nBorderColor: #336699;\nBorderThickness: 3;\nBorderRadius: 10;\n}\n</style>\n\npackage "Component" <<container>> {\nclass Literate {\nCore implementation\n}\n\nclass Subject {\nDomain entity\n}\nclass Class {\nSchema definition\n}\nclass AttributeSection {\nProperty group\n}\nclass Attribute {\nIndividual property\n}\n\n\' Relationships\nSubject -> Literate\nClass -> Literate\nAttributeSection -> Literate\nAttribute -> Literate\n}\n\n@enduml\n```')
Found codeblocks  1
 and the soup is 
<div>
 <pre><code class="language-puml">@startuml
' Configure the modern style approach with CSS
' Try polyline instead of ortho
skinparam linetype polyline

&lt;style&gt;
/* Global settings */
diagram {
backgroundColor: white;
}

/* Class styling */
class {
BackgroundColor: #FFFFEE;
BorderColor: #333333;
BorderThickness: 1;
BorderRadius: 8;
FontColor: #333333;
FontSize: 12;
}

/* Arrow styling */
arrow {
Color: #333333;
Thickness: 1.5;
}

/* Package styling */
package {
BackgroundColor: #E6F2FF;
BorderColor: #336699;
BorderThickness: 3;
FontColor: #333333;
}

/* Custom style for Component */
.container {
BackgroundColor: #E6F2FF;
BorderColor: #336699;
BorderThickness: 3;
BorderRadius: 10;
}
&lt;/style&gt;

package "Component" &lt;&lt;container&gt;&gt; {
class Literate {
Core implementation
}

class Subject {
Domain entity
}
class Class {
Schema definition
}
class AttributeSection {
Property group
}
class Attribute {
Individual property
}

' Relationships
Subject -&gt; Literate
Class -&gt; Literate
AttributeSection -&gt; Literate
Attribute -&gt; Literate
}

@enduml
</code></pre>
</div>

Starting codeblock
code
and Starting codeblock parent for
<pre><code class="language-puml">@startuml
' Configure the modern style approach with CSS
' Try polyline instead of ortho
skinparam linetype polyline

&lt;style&gt;
/* Global settings */
diagram {
backgroundColor: white;
}

/* Class styling */
class {
BackgroundColor: #FFFFEE;
BorderColor: #333333;
BorderThickness: 1;
BorderRadius: 8;
FontColor: #333333;
FontSize: 12;
}

/* Arrow styling */
arrow {
Color: #333333;
Thickness: 1.5;
}

/* Package styling */
package {
BackgroundColor: #E6F2FF;
BorderColor: #336699;
BorderThickness: 3;
FontColor: #333333;
}

/* Custom style for Component */
.container {
BackgroundColor: #E6F2FF;
BorderColor: #336699;
BorderThickness: 3;
BorderRadius: 10;
}
&lt;/style&gt;

package "Component" &lt;&lt;container&gt;&gt; {
class Literate {
Core implementation
}

class Subject {
Domain entity
}
class Class {
Schema definition
}
class AttributeSection {
Property group
}
class Attribute {
Individual property
}

' Relationships
Subject -&gt; Literate
Class -&gt; Literate
AttributeSection -&gt; Literate
Attribute -&gt; Literate
}

@enduml
</code></pre>

and Starting codeblock grandparent for
div
creating png in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img11.png
PUML png file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img11.png
PUML svg file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img11.svg
...contenth for prose html is...
<div>
 <pre><code class="language-puml">@startuml
' Configure the modern style approach with CSS
' Try polyline instead of ortho
skinparam linetype polyline

&lt;style&gt;
/* Global settings */
diagram {
backgroundColor: white;
}

/* Class styling */
class {
BackgroundColor: #FFFFEE;
BorderColor: #333333;
BorderThickness: 1;
BorderRadius: 8;
FontColor: #333333;
FontSize: 12;
}

/* Arrow styling */
arrow {
Color: #333333;
Thickness: 1.5;
}

/* Package styling */
package {
BackgroundColor: #E6F2FF;
BorderColor: #336699;
BorderThickness: 3;
FontColor: #333333;
}

/* Custom style for Component */
.container {
BackgroundColor: #E6F2FF;
BorderColor: #336699;
BorderThickness: 3;
BorderRadius: 10;
}
&lt;/style&gt;

package "Component" &lt;&lt;container&gt;&gt; {
class Literate {
Core implementation
}

class Subject {
Domain entity
}
class Class {
Schema definition
}
class AttributeSection {
Property group
}
class Attribute {
Individual property
}

' Relationships
Subject -&gt; Literate
Class -&gt; Literate
AttributeSection -&gt; Literate
Attribute -&gt; Literate
}

@enduml
</code></pre>
 <div class="diagram png puml" string="PNG Diagram plant_img11.png">
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img11.png" width="500px"/>
 </div>
 <div class="diagram svg puml" string="SVG Diagramplant_img11.svg">
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img11.svg" width="500px"/>
 </div>
</div>

...end of contenth for prose html .
Adding simple: OneLiner 
...obj is  PlanUML
Found codeblocks  0
...contenth for prose html is...
<div>
 <p>
  PlanUML
 </p>
</div>

...end of contenth for prose html .
Adding simple: CodeBlock 
...obj is  CodeBlock(content='```puml\n\n@startmindmap\n* Component\n** Literate\n*** Subject\n*** Class\n*** AttributeSection\n*** Attribute\n@endmindmap\n@startuml\n!include <C4/C4_Component>\n\nPerson(user, "User")\nContainer_Boundary(component, "Component") {\nComponent(literate, "Literate", "Core implementation")\nComponent(subject, "Subject", "Domain entity")\nComponent(class, "Class", "Schema definition")\nComponent(attributeSection, "AttributeSection", "Property group")\nComponent(attribute, "Attribute", "Individual property")\n}\n\nRel(subject, literate, "extends")\nRel(class, literate, "extends")\nRel(attributeSection, literate, "extends")\nRel(attribute, literate, "extends")\n@enduml\n\n@startjson\n{\n"Component": {\n"Literate": {"description": "Core implementation"},\n"Subject": {"description": "Domain entity", "extends": "Literate"},\n"Class": {"description": "Schema definition", "extends": "Literate"},\n"AttributeSection": {"description": "Property group", "extends": "Literate"},\n"Attribute": {"description": "Individual property", "extends": "Literate"}\n}\n}\n@endjson\n```')
Found codeblocks  1
 and the soup is 
<div>
 <pre><code class="language-puml">
@startmindmap
* Component
** Literate
*** Subject
*** Class
*** AttributeSection
*** Attribute
@endmindmap
@startuml
!include &lt;C4/C4_Component&gt;

Person(user, "User")
Container_Boundary(component, "Component") {
Component(literate, "Literate", "Core implementation")
Component(subject, "Subject", "Domain entity")
Component(class, "Class", "Schema definition")
Component(attributeSection, "AttributeSection", "Property group")
Component(attribute, "Attribute", "Individual property")
}

Rel(subject, literate, "extends")
Rel(class, literate, "extends")
Rel(attributeSection, literate, "extends")
Rel(attribute, literate, "extends")
@enduml

@startjson
{
"Component": {
"Literate": {"description": "Core implementation"},
"Subject": {"description": "Domain entity", "extends": "Literate"},
"Class": {"description": "Schema definition", "extends": "Literate"},
"AttributeSection": {"description": "Property group", "extends": "Literate"},
"Attribute": {"description": "Individual property", "extends": "Literate"}
}
}
@endjson
</code></pre>
</div>

Starting codeblock
code
and Starting codeblock parent for
<pre><code class="language-puml">
@startmindmap
* Component
** Literate
*** Subject
*** Class
*** AttributeSection
*** Attribute
@endmindmap
@startuml
!include &lt;C4/C4_Component&gt;

Person(user, "User")
Container_Boundary(component, "Component") {
Component(literate, "Literate", "Core implementation")
Component(subject, "Subject", "Domain entity")
Component(class, "Class", "Schema definition")
Component(attributeSection, "AttributeSection", "Property group")
Component(attribute, "Attribute", "Individual property")
}

Rel(subject, literate, "extends")
Rel(class, literate, "extends")
Rel(attributeSection, literate, "extends")
Rel(attribute, literate, "extends")
@enduml

@startjson
{
"Component": {
"Literate": {"description": "Core implementation"},
"Subject": {"description": "Domain entity", "extends": "Literate"},
"Class": {"description": "Schema definition", "extends": "Literate"},
"AttributeSection": {"description": "Property group", "extends": "Literate"},
"Attribute": {"description": "Individual property", "extends": "Literate"}
}
}
@endjson
</code></pre>

and Starting codeblock grandparent for
div
creating png in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img12.png
PUML png file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img12.png
PUML svg file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img12.svg
...contenth for prose html is...
<div>
 <pre><code class="language-puml">
@startmindmap
* Component
** Literate
*** Subject
*** Class
*** AttributeSection
*** Attribute
@endmindmap
@startuml
!include &lt;C4/C4_Component&gt;

Person(user, "User")
Container_Boundary(component, "Component") {
Component(literate, "Literate", "Core implementation")
Component(subject, "Subject", "Domain entity")
Component(class, "Class", "Schema definition")
Component(attributeSection, "AttributeSection", "Property group")
Component(attribute, "Attribute", "Individual property")
}

Rel(subject, literate, "extends")
Rel(class, literate, "extends")
Rel(attributeSection, literate, "extends")
Rel(attribute, literate, "extends")
@enduml

@startjson
{
"Component": {
"Literate": {"description": "Core implementation"},
"Subject": {"description": "Domain entity", "extends": "Literate"},
"Class": {"description": "Schema definition", "extends": "Literate"},
"AttributeSection": {"description": "Property group", "extends": "Literate"},
"Attribute": {"description": "Individual property", "extends": "Literate"}
}
}
@endjson
</code></pre>
 <div class="diagram png puml" string="PNG Diagram plant_img12.png">
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img12.png" width="500px"/>
 </div>
 <div class="diagram svg puml" string="SVG Diagramplant_img12.svg">
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img12.svg" width="500px"/>
 </div>
</div>

...end of contenth for prose html .
Adding simple: CodeBlock 
...obj is  CodeBlock(content='``` puml\n@startjson\n{\n"Component": {\n"Literate": ["description", "Core implementation"],\n"Subject": {"description": "Domain entity", "extends": "Literate"},\n"Class": {"description": "Schema definition", "extends": "Literate"},\n"AttributeSection": {"description": "Property group", "extends": "Literate"},\n"Attribute": {"description": "Individual property", "extends": "Literate"}\n}\n}\n@endjson\n```')
Found codeblocks  1
 and the soup is 
<div>
 <pre><code class="language-puml">@startjson
{
"Component": {
"Literate": ["description", "Core implementation"],
"Subject": {"description": "Domain entity", "extends": "Literate"},
"Class": {"description": "Schema definition", "extends": "Literate"},
"AttributeSection": {"description": "Property group", "extends": "Literate"},
"Attribute": {"description": "Individual property", "extends": "Literate"}
}
}
@endjson
</code></pre>
</div>

Starting codeblock
code
and Starting codeblock parent for
<pre><code class="language-puml">@startjson
{
"Component": {
"Literate": ["description", "Core implementation"],
"Subject": {"description": "Domain entity", "extends": "Literate"},
"Class": {"description": "Schema definition", "extends": "Literate"},
"AttributeSection": {"description": "Property group", "extends": "Literate"},
"Attribute": {"description": "Individual property", "extends": "Literate"}
}
}
@endjson
</code></pre>

and Starting codeblock grandparent for
div
creating png in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img13.png
PUML png file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img13.png
PUML svg file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img13.svg
...contenth for prose html is...
<div>
 <pre><code class="language-puml">@startjson
{
"Component": {
"Literate": ["description", "Core implementation"],
"Subject": {"description": "Domain entity", "extends": "Literate"},
"Class": {"description": "Schema definition", "extends": "Literate"},
"AttributeSection": {"description": "Property group", "extends": "Literate"},
"Attribute": {"description": "Individual property", "extends": "Literate"}
}
}
@endjson
</code></pre>
 <div class="diagram png puml" string="PNG Diagram plant_img13.png">
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img13.png" width="500px"/>
 </div>
 <div class="diagram svg puml" string="SVG Diagramplant_img13.svg">
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img13.svg" width="500px"/>
 </div>
</div>

...end of contenth for prose html .
Body classes are None
Saved styled dictionary to ldm/ldm_models/Diagrams/Diagrams_results/Diagrams_PD_07_as.html
Body classes are ['reviewing']
Saved styled dictionary (for review) to ldm/ldm_models/Diagrams/Diagrams_results/Diagrams_PD_07_as.review.html

Phase: Creating HTML for PDF using the Faculty
Adding simple: CodeBlock 
...obj is  CodeBlock(content='```mermaid\n\n\nclassDiagram\nclass Component\nclass Literate\nclass Subject\nclass Class\nclass Attrribute Section\nclass Attribute\n\nComponent  <|-- Literate\nSubject  <|-- Literate\nClass  <|-- Literate\nAttributeSection  <|-- Literate\nAttribute  <|-- Literate\n\nclassDef default fill:yellow,stroke:#000, color:black, stroke-width:4px\n```')
Found codeblocks  1
 and the soup is 
<div>
 <pre><code class="language-mermaid">

classDiagram
class Component
class Literate
class Subject
class Class
class Attrribute Section
class Attribute

Component  &lt;|-- Literate
Subject  &lt;|-- Literate
Class  &lt;|-- Literate
AttributeSection  &lt;|-- Literate
Attribute  &lt;|-- Literate

classDef default fill:yellow,stroke:#000, color:black, stroke-width:4px
</code></pre>
</div>

Starting codeblock
code
and Starting codeblock parent for
<pre><code class="language-mermaid">

classDiagram
class Component
class Literate
class Subject
class Class
class Attrribute Section
class Attribute

Component  &lt;|-- Literate
Subject  &lt;|-- Literate
Class  &lt;|-- Literate
AttributeSection  &lt;|-- Literate
Attribute  &lt;|-- Literate

classDef default fill:yellow,stroke:#000, color:black, stroke-width:4px
</code></pre>

and Starting codeblock grandparent for
div
creating png  for mermaid in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\mermaid_img14.png
Generating single mermaid chart
Generating single mermaid chart
...contenth for prose html is...
<div>
 <pre><code class="language-mermaid mermaid">

classDiagram
class Component
class Literate
class Subject
class Class
class Attrribute Section
class Attribute

Component  &lt;|-- Literate
Subject  &lt;|-- Literate
Class  &lt;|-- Literate
AttributeSection  &lt;|-- Literate
Attribute  &lt;|-- Literate

classDef default fill:yellow,stroke:#000, color:black, stroke-width:4px
</code></pre>
 <div class="diagram png puml" string="PNG Diagram for Mermaid">
  Mermaid PNG - mermaid_img14.png
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\mermaid_img14.png" width="500px"/>
 </div>
 <div class="diagram svg puml" string="SVG Diagram for Mermaid">
  Mermaid SVG - mermaid_img14.svg
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\mermaid_img14.svg" width="500px"/>
 </div>
</div>

...end of contenth for prose html .
Adding simple: CodeBlock 
...obj is  CodeBlock(content='``` mermaid\n%%{init: {\n"flowchart": {\n"curve": "stepAfter",\n"useMaxWidth": true\n}\n}}%%\n\nflowchart TB\nsubgraph Component["Component - Base class"]\ndirection TB\n\nLiterate["Literate<br>Core implementation"]\n\nsubgraph Subtypes["Component Subtypes"]\ndirection LR\nSubject["Subject<br>Domain entity"]\nClass["Class<br>Schema definition"]\nAttributeSection["AttributeSection<br>Property group"]\nAttribute["Attribute<br>Individual property"]\nend\n\nSubject ==> Literate\nClass ==> Literate\nAttributeSection ==> Literate\nAttribute ==> Literate\nend\n\n%% Styling with border-radius only\nclassDef container fill:#e3f2fd,stroke:#1565c0,stroke-width:3px,color:#0d47a1,border-radius:10px\nclassDef subcontainer fill:#f5f5f5,stroke:#78909c,stroke-width:2px,color:#37474f,border-radius:8px\nclassDef default fill:white,stroke:#90a4ae,stroke-width:1px,color:#455a64,border-radius:5px\n\nclass Component container\nclass Subtypes subcontainer\n\n%% Edge styling\nlinkStyle default stroke:#546e7a,stroke-width:2px, border-radius: 20px\n```')
Found codeblocks  1
 and the soup is 
<div>
 <pre><code class="language-mermaid">%%{init: {
"flowchart": {
"curve": "stepAfter",
"useMaxWidth": true
}
}}%%

flowchart TB
subgraph Component["Component - Base class"]
direction TB

Literate["Literate&lt;br&gt;Core implementation"]

subgraph Subtypes["Component Subtypes"]
direction LR
Subject["Subject&lt;br&gt;Domain entity"]
Class["Class&lt;br&gt;Schema definition"]
AttributeSection["AttributeSection&lt;br&gt;Property group"]
Attribute["Attribute&lt;br&gt;Individual property"]
end

Subject ==&gt; Literate
Class ==&gt; Literate
AttributeSection ==&gt; Literate
Attribute ==&gt; Literate
end

%% Styling with border-radius only
classDef container fill:#e3f2fd,stroke:#1565c0,stroke-width:3px,color:#0d47a1,border-radius:10px
classDef subcontainer fill:#f5f5f5,stroke:#78909c,stroke-width:2px,color:#37474f,border-radius:8px
classDef default fill:white,stroke:#90a4ae,stroke-width:1px,color:#455a64,border-radius:5px

class Component container
class Subtypes subcontainer

%% Edge styling
linkStyle default stroke:#546e7a,stroke-width:2px, border-radius: 20px
</code></pre>
</div>

Starting codeblock
code
and Starting codeblock parent for
<pre><code class="language-mermaid">%%{init: {
"flowchart": {
"curve": "stepAfter",
"useMaxWidth": true
}
}}%%

flowchart TB
subgraph Component["Component - Base class"]
direction TB

Literate["Literate&lt;br&gt;Core implementation"]

subgraph Subtypes["Component Subtypes"]
direction LR
Subject["Subject&lt;br&gt;Domain entity"]
Class["Class&lt;br&gt;Schema definition"]
AttributeSection["AttributeSection&lt;br&gt;Property group"]
Attribute["Attribute&lt;br&gt;Individual property"]
end

Subject ==&gt; Literate
Class ==&gt; Literate
AttributeSection ==&gt; Literate
Attribute ==&gt; Literate
end

%% Styling with border-radius only
classDef container fill:#e3f2fd,stroke:#1565c0,stroke-width:3px,color:#0d47a1,border-radius:10px
classDef subcontainer fill:#f5f5f5,stroke:#78909c,stroke-width:2px,color:#37474f,border-radius:8px
classDef default fill:white,stroke:#90a4ae,stroke-width:1px,color:#455a64,border-radius:5px

class Component container
class Subtypes subcontainer

%% Edge styling
linkStyle default stroke:#546e7a,stroke-width:2px, border-radius: 20px
</code></pre>

and Starting codeblock grandparent for
div
creating png  for mermaid in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\mermaid_img15.png
Generating single mermaid chart
Generating single mermaid chart
...contenth for prose html is...
<div>
 <pre><code class="language-mermaid mermaid">%%{init: {
"flowchart": {
"curve": "stepAfter",
"useMaxWidth": true
}
}}%%

flowchart TB
subgraph Component["Component - Base class"]
direction TB

Literate["Literate&lt;br&gt;Core implementation"]

subgraph Subtypes["Component Subtypes"]
direction LR
Subject["Subject&lt;br&gt;Domain entity"]
Class["Class&lt;br&gt;Schema definition"]
AttributeSection["AttributeSection&lt;br&gt;Property group"]
Attribute["Attribute&lt;br&gt;Individual property"]
end

Subject ==&gt; Literate
Class ==&gt; Literate
AttributeSection ==&gt; Literate
Attribute ==&gt; Literate
end

%% Styling with border-radius only
classDef container fill:#e3f2fd,stroke:#1565c0,stroke-width:3px,color:#0d47a1,border-radius:10px
classDef subcontainer fill:#f5f5f5,stroke:#78909c,stroke-width:2px,color:#37474f,border-radius:8px
classDef default fill:white,stroke:#90a4ae,stroke-width:1px,color:#455a64,border-radius:5px

class Component container
class Subtypes subcontainer

%% Edge styling
linkStyle default stroke:#546e7a,stroke-width:2px, border-radius: 20px
</code></pre>
 <div class="diagram png puml" string="PNG Diagram for Mermaid">
  Mermaid PNG - mermaid_img15.png
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\mermaid_img15.png" width="500px"/>
 </div>
 <div class="diagram svg puml" string="SVG Diagram for Mermaid">
  Mermaid SVG - mermaid_img15.svg
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\mermaid_img15.svg" width="500px"/>
 </div>
</div>

...end of contenth for prose html .
Adding simple: CodeBlock 
...obj is  CodeBlock(content='``` puml\n@startjson\n<style>\n.h1 {\nBackGroundColor green\nFontColor white\nFontStyle italic\n}\n.h2 {\nBackGroundColor red\nFontColor white\nFontStyle bold\n}\n</style>\n#highlight "lastName"\n#highlight "address" / "city" <<h1>>\n#highlight "phoneNumbers" / "0" / "number" <<h2>>\n{\n"firstName": "John",\n"lastName": "Smith",\n"isAlive": true,\n"age": 28,\n"address": {\n"streetAddress": "21 2nd Street",\n"city": "New York",\n"state": "NY",\n"postalCode": "10021-3100"\n},\n"phoneNumbers": [\n{\n"type": "home",\n"number": "212 555-1234"\n},\n{\n"type": "office",\n"number": "646 555-4567"\n}\n],\n"children": [],\n"spouse": null\n}\n@endjson\n```')
Found codeblocks  1
 and the soup is 
<div>
 <pre><code class="language-puml">@startjson
&lt;style&gt;
.h1 {
BackGroundColor green
FontColor white
FontStyle italic
}
.h2 {
BackGroundColor red
FontColor white
FontStyle bold
}
&lt;/style&gt;
#highlight "lastName"
#highlight "address" / "city" &lt;&lt;h1&gt;&gt;
#highlight "phoneNumbers" / "0" / "number" &lt;&lt;h2&gt;&gt;
{
"firstName": "John",
"lastName": "Smith",
"isAlive": true,
"age": 28,
"address": {
"streetAddress": "21 2nd Street",
"city": "New York",
"state": "NY",
"postalCode": "10021-3100"
},
"phoneNumbers": [
{
"type": "home",
"number": "212 555-1234"
},
{
"type": "office",
"number": "646 555-4567"
}
],
"children": [],
"spouse": null
}
@endjson
</code></pre>
</div>

Starting codeblock
code
and Starting codeblock parent for
<pre><code class="language-puml">@startjson
&lt;style&gt;
.h1 {
BackGroundColor green
FontColor white
FontStyle italic
}
.h2 {
BackGroundColor red
FontColor white
FontStyle bold
}
&lt;/style&gt;
#highlight "lastName"
#highlight "address" / "city" &lt;&lt;h1&gt;&gt;
#highlight "phoneNumbers" / "0" / "number" &lt;&lt;h2&gt;&gt;
{
"firstName": "John",
"lastName": "Smith",
"isAlive": true,
"age": 28,
"address": {
"streetAddress": "21 2nd Street",
"city": "New York",
"state": "NY",
"postalCode": "10021-3100"
},
"phoneNumbers": [
{
"type": "home",
"number": "212 555-1234"
},
{
"type": "office",
"number": "646 555-4567"
}
],
"children": [],
"spouse": null
}
@endjson
</code></pre>

and Starting codeblock grandparent for
div
creating png in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img16.png
PUML png file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img16.png
PUML svg file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img16.svg
...contenth for prose html is...
<div>
 <pre><code class="language-puml">@startjson
&lt;style&gt;
.h1 {
BackGroundColor green
FontColor white
FontStyle italic
}
.h2 {
BackGroundColor red
FontColor white
FontStyle bold
}
&lt;/style&gt;
#highlight "lastName"
#highlight "address" / "city" &lt;&lt;h1&gt;&gt;
#highlight "phoneNumbers" / "0" / "number" &lt;&lt;h2&gt;&gt;
{
"firstName": "John",
"lastName": "Smith",
"isAlive": true,
"age": 28,
"address": {
"streetAddress": "21 2nd Street",
"city": "New York",
"state": "NY",
"postalCode": "10021-3100"
},
"phoneNumbers": [
{
"type": "home",
"number": "212 555-1234"
},
{
"type": "office",
"number": "646 555-4567"
}
],
"children": [],
"spouse": null
}
@endjson
</code></pre>
 <div class="diagram png puml" string="PNG Diagram plant_img16.png">
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img16.png" width="500px"/>
 </div>
 <div class="diagram svg puml" string="SVG Diagramplant_img16.svg">
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img16.svg" width="500px"/>
 </div>
</div>

...end of contenth for prose html .
Adding simple: CodeBlock 
...obj is  CodeBlock(content='``` puml\n\n@startuml\n\nrectangle Component\nrectangle Literate\nrectangle Subject\nrectangle Class\nrectangle Attribute\nrectangle a\n\nLiterate -u->  a\nSubject -u-> a\nClass -u-> a\nAttribute -u-> a\na -u-> Component\nskinparam linetype ortho\n@enduml\n```')
Found codeblocks  1
 and the soup is 
<div>
 <pre><code class="language-puml">
@startuml

rectangle Component
rectangle Literate
rectangle Subject
rectangle Class
rectangle Attribute
rectangle a

Literate -u-&gt;  a
Subject -u-&gt; a
Class -u-&gt; a
Attribute -u-&gt; a
a -u-&gt; Component
skinparam linetype ortho
@enduml
</code></pre>
</div>

Starting codeblock
code
and Starting codeblock parent for
<pre><code class="language-puml">
@startuml

rectangle Component
rectangle Literate
rectangle Subject
rectangle Class
rectangle Attribute
rectangle a

Literate -u-&gt;  a
Subject -u-&gt; a
Class -u-&gt; a
Attribute -u-&gt; a
a -u-&gt; Component
skinparam linetype ortho
@enduml
</code></pre>

and Starting codeblock grandparent for
div
creating png in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img17.png
PUML png file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img17.png
PUML svg file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img17.svg
...contenth for prose html is...
<div>
 <pre><code class="language-puml">
@startuml

rectangle Component
rectangle Literate
rectangle Subject
rectangle Class
rectangle Attribute
rectangle a

Literate -u-&gt;  a
Subject -u-&gt; a
Class -u-&gt; a
Attribute -u-&gt; a
a -u-&gt; Component
skinparam linetype ortho
@enduml
</code></pre>
 <div class="diagram png puml" string="PNG Diagram plant_img17.png">
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img17.png" width="500px"/>
 </div>
 <div class="diagram svg puml" string="SVG Diagramplant_img17.svg">
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img17.svg" width="500px"/>
 </div>
</div>

...end of contenth for prose html .
Adding simple: CodeBlock 
...obj is  CodeBlock(content='```mermaid\nblock-beta\ncolumns 3\na:3\nblock:group1:2\ncolumns 2\nh i j k\nend\ng\nblock:group2:3\n%% columns auto (default)\nl m n o p q r\nend\n```')
Found codeblocks  1
 and the soup is 
<div>
 <pre><code class="language-mermaid">block-beta
columns 3
a:3
block:group1:2
columns 2
h i j k
end
g
block:group2:3
%% columns auto (default)
l m n o p q r
end
</code></pre>
</div>

Starting codeblock
code
and Starting codeblock parent for
<pre><code class="language-mermaid">block-beta
columns 3
a:3
block:group1:2
columns 2
h i j k
end
g
block:group2:3
%% columns auto (default)
l m n o p q r
end
</code></pre>

and Starting codeblock grandparent for
div
creating png  for mermaid in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\mermaid_img18.png
Generating single mermaid chart
Browser console: . 

Browser console: COLUMNS (LEX) 3
Browser console: . 

Browser console: Lex: NODE_ID a
Browser console: APA123 {$: 3, _$: Object}
Browser console: COLUMNS:  3
Browser console: Lex: COLON :3
Browser console: Rule: node (NODE_ID separator):  a
Browser console: . 

Browser console: Found space-block
Browser console: Rule: nodeStatement (abc88 node size)  {id: a} 3
Browser console: Lex: NODE_ID group1
Browser console: Lex: COLON :2
Browser console: Rule: node (NODE_ID separator):  group1
Browser console: . 

Browser console: COLUMNS (LEX) 2
Browser console: Rule: nodeStatement (abc88 node size)  {id: group1} 2
Browser console: . 

Browser console: Lex: NODE_ID h
Browser console: APA123 {$: 2, _$: Object}
Browser console: COLUMNS:  2
Browser console: .  
Browser console: Lex: NODE_ID i
Browser console: Rule: node (NODE_ID separator):  h
Browser console: Rule: nodeStatement (node)  {id: h}
Browser console: .  
Browser console: Lex: NODE_ID j
Browser console: Rule: node (NODE_ID separator):  i
Browser console: Rule: nodeStatement (node)  {id: i}
Browser console: .  
Browser console: Lex: NODE_ID k
Browser console: Rule: node (NODE_ID separator):  j
Browser console: Rule: nodeStatement (node)  {id: j}
Browser console: . 

Browser console: Rule: node (NODE_ID separator):  k
Browser console: Rule: nodeStatement (node)  {id: k}
Browser console: Rule: statement:  {id: k, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: j, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: i, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: h, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {type: column-setting, columns: 2}
Browser console: Lex: NODE_ID g
Browser console: Rule: id-block statement :  {id: group1, label: undefined, type: na, directions: undefined, widthInColumns: 2} [Object, Object, Object, Object, Object]
Browser console: . 

Browser console: Found space-block
Browser console: Rule: node (NODE_ID separator):  g
Browser console: Rule: nodeStatement (node)  {id: g}
Browser console: Lex: NODE_ID group2
Browser console: Lex: COLON :3
Browser console: Rule: node (NODE_ID separator):  group2
Browser console: . 

Browser console: Lex: NODE_ID l
Browser console: Rule: nodeStatement (abc88 node size)  {id: group2} 3
Browser console: .  
Browser console: Lex: NODE_ID m
Browser console: Rule: node (NODE_ID separator):  l
Browser console: Rule: nodeStatement (node)  {id: l}
Browser console: .  
Browser console: Lex: NODE_ID n
Browser console: Rule: node (NODE_ID separator):  m
Browser console: Rule: nodeStatement (node)  {id: m}
Browser console: .  
Browser console: Lex: NODE_ID o
Browser console: Rule: node (NODE_ID separator):  n
Browser console: Rule: nodeStatement (node)  {id: n}
Browser console: .  
Browser console: Lex: NODE_ID p
Browser console: Rule: node (NODE_ID separator):  o
Browser console: Rule: nodeStatement (node)  {id: o}
Browser console: .  
Browser console: Lex: NODE_ID q
Browser console: Rule: node (NODE_ID separator):  p
Browser console: Rule: nodeStatement (node)  {id: p}
Browser console: .  
Browser console: Lex: NODE_ID r
Browser console: Rule: node (NODE_ID separator):  q
Browser console: Rule: nodeStatement (node)  {id: q}
Browser console: . 

Browser console: Rule: node (NODE_ID separator):  r
Browser console: Rule: nodeStatement (node)  {id: r}
Browser console: Rule: statement:  {id: r, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: q, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: p, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: o, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: n, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: m, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: l, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Lex: EOF 
Browser console: Rule: id-block statement :  {id: group2, label: undefined, type: na, directions: undefined, widthInColumns: 3} [Object, Object, Object, Object, Object, Object, Object]
Browser console: Rule: statement:  {id: group2, label: undefined, type: composite, directions: undefined, widthInColumns: 3}
Browser console: Rule: statement #2:  {id: g, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: group1, label: undefined, type: composite, directions: undefined, widthInColumns: 2}
Browser console: Rule: statement #2:  {id: a, label: undefined, type: na, directions: undefined, widthInColumns: 3}
Browser console: Rule: statement #2:  {type: column-setting, columns: 3}
Browser console: Rule: hierarchy:  [Object, Object, Object, Object, Object]
Generating single mermaid chart
Browser console: . 

Browser console: COLUMNS (LEX) 3
Browser console: . 

Browser console: Lex: NODE_ID a
Browser console: APA123 {$: 3, _$: Object}
Browser console: COLUMNS:  3
Browser console: Lex: COLON :3
Browser console: Rule: node (NODE_ID separator):  a
Browser console: . 

Browser console: Found space-block
Browser console: Rule: nodeStatement (abc88 node size)  {id: a} 3
Browser console: Lex: NODE_ID group1
Browser console: Lex: COLON :2
Browser console: Rule: node (NODE_ID separator):  group1
Browser console: . 

Browser console: COLUMNS (LEX) 2
Browser console: Rule: nodeStatement (abc88 node size)  {id: group1} 2
Browser console: . 

Browser console: Lex: NODE_ID h
Browser console: APA123 {$: 2, _$: Object}
Browser console: COLUMNS:  2
Browser console: .  
Browser console: Lex: NODE_ID i
Browser console: Rule: node (NODE_ID separator):  h
Browser console: Rule: nodeStatement (node)  {id: h}
Browser console: .  
Browser console: Lex: NODE_ID j
Browser console: Rule: node (NODE_ID separator):  i
Browser console: Rule: nodeStatement (node)  {id: i}
Browser console: .  
Browser console: Lex: NODE_ID k
Browser console: Rule: node (NODE_ID separator):  j
Browser console: Rule: nodeStatement (node)  {id: j}
Browser console: . 

Browser console: Rule: node (NODE_ID separator):  k
Browser console: Rule: nodeStatement (node)  {id: k}
Browser console: Rule: statement:  {id: k, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: j, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: i, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: h, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {type: column-setting, columns: 2}
Browser console: Lex: NODE_ID g
Browser console: Rule: id-block statement :  {id: group1, label: undefined, type: na, directions: undefined, widthInColumns: 2} [Object, Object, Object, Object, Object]
Browser console: . 

Browser console: Found space-block
Browser console: Rule: node (NODE_ID separator):  g
Browser console: Rule: nodeStatement (node)  {id: g}
Browser console: Lex: NODE_ID group2
Browser console: Lex: COLON :3
Browser console: Rule: node (NODE_ID separator):  group2
Browser console: . 

Browser console: Lex: NODE_ID l
Browser console: Rule: nodeStatement (abc88 node size)  {id: group2} 3
Browser console: .  
Browser console: Lex: NODE_ID m
Browser console: Rule: node (NODE_ID separator):  l
Browser console: Rule: nodeStatement (node)  {id: l}
Browser console: .  
Browser console: Lex: NODE_ID n
Browser console: Rule: node (NODE_ID separator):  m
Browser console: Rule: nodeStatement (node)  {id: m}
Browser console: .  
Browser console: Lex: NODE_ID o
Browser console: Rule: node (NODE_ID separator):  n
Browser console: Rule: nodeStatement (node)  {id: n}
Browser console: .  
Browser console: Lex: NODE_ID p
Browser console: Rule: node (NODE_ID separator):  o
Browser console: Rule: nodeStatement (node)  {id: o}
Browser console: .  
Browser console: Lex: NODE_ID q
Browser console: Rule: node (NODE_ID separator):  p
Browser console: Rule: nodeStatement (node)  {id: p}
Browser console: .  
Browser console: Lex: NODE_ID r
Browser console: Rule: node (NODE_ID separator):  q
Browser console: Rule: nodeStatement (node)  {id: q}
Browser console: . 

Browser console: Rule: node (NODE_ID separator):  r
Browser console: Rule: nodeStatement (node)  {id: r}
Browser console: Rule: statement:  {id: r, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: q, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: p, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: o, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: n, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: m, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: l, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Lex: EOF 
Browser console: Rule: id-block statement :  {id: group2, label: undefined, type: na, directions: undefined, widthInColumns: 3} [Object, Object, Object, Object, Object, Object, Object]
Browser console: Rule: statement:  {id: group2, label: undefined, type: composite, directions: undefined, widthInColumns: 3}
Browser console: Rule: statement #2:  {id: g, label: undefined, type: na, directions: undefined, widthInColumns: 1}
Browser console: Rule: statement #2:  {id: group1, label: undefined, type: composite, directions: undefined, widthInColumns: 2}
Browser console: Rule: statement #2:  {id: a, label: undefined, type: na, directions: undefined, widthInColumns: 3}
Browser console: Rule: statement #2:  {type: column-setting, columns: 3}
Browser console: Rule: hierarchy:  [Object, Object, Object, Object, Object]
...contenth for prose html is...
<div>
 <pre><code class="language-mermaid mermaid">block-beta
columns 3
a:3
block:group1:2
columns 2
h i j k
end
g
block:group2:3
%% columns auto (default)
l m n o p q r
end
</code></pre>
 <div class="diagram png puml" string="PNG Diagram for Mermaid">
  Mermaid PNG - mermaid_img18.png
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\mermaid_img18.png" width="500px"/>
 </div>
 <div class="diagram svg puml" string="SVG Diagram for Mermaid">
  Mermaid SVG - mermaid_img18.svg
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\mermaid_img18.svg" width="500px"/>
 </div>
</div>

...end of contenth for prose html .
Adding simple: CodeBlock 
...obj is  CodeBlock(content='``` mermaid\n\nerDiagram\n\nCAR {\n\nstring registrationNumber\n\nstring make\n\nstring model\n\n}\n\nPERSON {\n\nstring firstName\n\nstring lastName\n\nint age\n\n}\n\nstyle CAR fill: red,stroke:navy,stroke-width:3px\n\nstyle PERSON color: white, fill: navy,stroke:yellow ,stroke-width:2px\n\n```')
Found codeblocks  1
 and the soup is 
<div>
 <pre><code class="language-mermaid">
erDiagram

CAR {

string registrationNumber

string make

string model

}

PERSON {

string firstName

string lastName

int age

}

style CAR fill: red,stroke:navy,stroke-width:3px

style PERSON color: white, fill: navy,stroke:yellow ,stroke-width:2px

</code></pre>
</div>

Starting codeblock
code
and Starting codeblock parent for
<pre><code class="language-mermaid">
erDiagram

CAR {

string registrationNumber

string make

string model

}

PERSON {

string firstName

string lastName

int age

}

style CAR fill: red,stroke:navy,stroke-width:3px

style PERSON color: white, fill: navy,stroke:yellow ,stroke-width:2px

</code></pre>

and Starting codeblock grandparent for
div
creating png  for mermaid in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\mermaid_img19.png
Generating single mermaid chart
Generating single mermaid chart
...contenth for prose html is...
<div>
 <pre><code class="language-mermaid mermaid">
erDiagram

CAR {

string registrationNumber

string make

string model

}

PERSON {

string firstName

string lastName

int age

}

style CAR fill: red,stroke:navy,stroke-width:3px

style PERSON color: white, fill: navy,stroke:yellow ,stroke-width:2px

</code></pre>
 <div class="diagram png puml" string="PNG Diagram for Mermaid">
  Mermaid PNG - mermaid_img19.png
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\mermaid_img19.png" width="500px"/>
 </div>
 <div class="diagram svg puml" string="SVG Diagram for Mermaid">
  Mermaid SVG - mermaid_img19.svg
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\mermaid_img19.svg" width="500px"/>
 </div>
</div>

...end of contenth for prose html .
Adding simple: CodeBlock 
...obj is  CodeBlock(content='``` mermaid\nerDiagram\n\nclass Subject Component\n\nclass Section Component\n\nclass Attribute Component\n\nclass Classe Component\n\nSubject ||--|{ Subject : contains\n\nSubject ||--|{ Classe : contains\n\n\n\nClasse ||--|{ Section : contains\n\nClasse ||--|{ Attribute : contains\n\nSection ||--|{ Attribute : contains\n\n```')
Found codeblocks  1
 and the soup is 
<div>
 <pre><code class="language-mermaid">erDiagram

class Subject Component

class Section Component

class Attribute Component

class Classe Component

Subject ||--|{ Subject : contains

Subject ||--|{ Classe : contains



Classe ||--|{ Section : contains

Classe ||--|{ Attribute : contains

Section ||--|{ Attribute : contains

</code></pre>
</div>

Starting codeblock
code
and Starting codeblock parent for
<pre><code class="language-mermaid">erDiagram

class Subject Component

class Section Component

class Attribute Component

class Classe Component

Subject ||--|{ Subject : contains

Subject ||--|{ Classe : contains



Classe ||--|{ Section : contains

Classe ||--|{ Attribute : contains

Section ||--|{ Attribute : contains

</code></pre>

and Starting codeblock grandparent for
div
creating png  for mermaid in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\mermaid_img20.png
Generating single mermaid chart
Generating single mermaid chart
...contenth for prose html is...
<div>
 <pre><code class="language-mermaid mermaid">erDiagram

class Subject Component

class Section Component

class Attribute Component

class Classe Component

Subject ||--|{ Subject : contains

Subject ||--|{ Classe : contains



Classe ||--|{ Section : contains

Classe ||--|{ Attribute : contains

Section ||--|{ Attribute : contains

</code></pre>
 <div class="diagram png puml" string="PNG Diagram for Mermaid">
  Mermaid PNG - mermaid_img20.png
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\mermaid_img20.png" width="500px"/>
 </div>
 <div class="diagram svg puml" string="SVG Diagram for Mermaid">
  Mermaid SVG - mermaid_img20.svg
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\mermaid_img20.svg" width="500px"/>
 </div>
</div>

...end of contenth for prose html .
Adding simple: Paragraph 
...obj is  <figure>
 
+ <img src="../ldm_assets/FMKNYIDFrontIMG_1141.jpg" alt="Trulli" style="width:30%">
 
+ <figcaption>Fig.1 - Trulli, Puglia, Italy.</figcaption>
 
+ </figure>

Found codeblocks  0
...contenth for prose html is...
<div>
 <figure>
  +
  <img alt="Trulli" src="../ldm_assets/FMKNYIDFrontIMG_1141.jpg" style="width:30%"/>
  +
  <figcaption>
   Fig.1 - Trulli, Puglia, Italy.
  </figcaption>
  +
 </figure>
</div>

...end of contenth for prose html .
Adding simple: Paragraph 
...obj is  And the same figure with figure/caption markup

Found codeblocks  0
...contenth for prose html is...
<div>
 <p>
  And the same figure with figure/caption markup
 </p>
</div>

...end of contenth for prose html .
Adding simple: Paragraph 
...obj is  <figure title="A Drivers License">
 
+ <img src="../FMKNYIDFrontIMG_1141.jpg" style="width:20%">
 
+ <figcaption>My Non-Drivers License</figcaption>
 
+ </figure>

Found codeblocks  0
...contenth for prose html is...
<div>
 <figure title="A Drivers License">
  +
  <img src="../FMKNYIDFrontIMG_1141.jpg" style="width:20%"/>
  +
  <figcaption>
   My Non-Drivers License
  </figcaption>
  +
 </figure>
</div>

...end of contenth for prose html .
Adding simple: CodeBlock 
...obj is  CodeBlock(content="```csv\neFormat, Description\nE-Book, 'Kindle or Apple books - etc'\nPDF, formatted for printing and direct delivery\n\n```")
Found codeblocks  1
 and the soup is 
<div>
 <pre><code class="language-csv">eFormat, Description
E-Book, 'Kindle or Apple books - etc'
PDF, formatted for printing and direct delivery

</code></pre>
</div>

Starting codeblock
code
and Starting codeblock parent for
<pre><code class="language-csv">eFormat, Description
E-Book, 'Kindle or Apple books - etc'
PDF, formatted for printing and direct delivery

</code></pre>

and Starting codeblock grandparent for
div
...contenth for prose html is...
<div>
 <pre><code class="language-csv">eFormat, Description
E-Book, 'Kindle or Apple books - etc'
PDF, formatted for printing and direct delivery

<div class="codes-table"><table border="1" class="dataframe">
<thead>
<tr style="text-align: right;">
<th></th>
<th>eFormat</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<th>0</th>
<td>E-Book</td>
<td>'Kindle or Apple books - etc'</td>
</tr>
<tr>
<th>1</th>
<td>PDF</td>
<td>formatted for printing and direct delivery</td>
</tr>
</tbody>
</table></div></code></pre>
</div>

...end of contenth for prose html .
Adding simple: CodeBlock 
...obj is  CodeBlock(content='``` puml\n\n@startuml\n\nnwdiag {\n\nnetwork {\n\nComponent;\n\nLiterate;\n\nSubject;\n\nAttribute;\n\nAttributeSection;\n\nClass;\n\nComponent -- Literate;\n\nComponent -- Subject;\n\nComponent -- Class;\n\nComponent -- AttributeSection;\n\nComponent -- Attribute;\n\n\n\nSubject [description = "Domain entity"];\n\nLiterate [description = "Core implementation"];\n\nAttributeSection [description = "Property group"];\n\nAttribute [description = "Individual property"];\n\nClass [description = "Schema definition"];\n\n\n\n\n}\n\n}\n\n@enduml\n```')
Found codeblocks  1
 and the soup is 
<div>
 <pre><code class="language-puml">
@startuml

nwdiag {

network {

Component;

Literate;

Subject;

Attribute;

AttributeSection;

Class;

Component -- Literate;

Component -- Subject;

Component -- Class;

Component -- AttributeSection;

Component -- Attribute;



Subject [description = "Domain entity"];

Literate [description = "Core implementation"];

AttributeSection [description = "Property group"];

Attribute [description = "Individual property"];

Class [description = "Schema definition"];




}

}

@enduml
</code></pre>
</div>

Starting codeblock
code
and Starting codeblock parent for
<pre><code class="language-puml">
@startuml

nwdiag {

network {

Component;

Literate;

Subject;

Attribute;

AttributeSection;

Class;

Component -- Literate;

Component -- Subject;

Component -- Class;

Component -- AttributeSection;

Component -- Attribute;



Subject [description = "Domain entity"];

Literate [description = "Core implementation"];

AttributeSection [description = "Property group"];

Attribute [description = "Individual property"];

Class [description = "Schema definition"];




}

}

@enduml
</code></pre>

and Starting codeblock grandparent for
div
creating png in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img21.png
PUML png file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img21.png
PUML svg file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img21.svg
...contenth for prose html is...
<div>
 <pre><code class="language-puml">
@startuml

nwdiag {

network {

Component;

Literate;

Subject;

Attribute;

AttributeSection;

Class;

Component -- Literate;

Component -- Subject;

Component -- Class;

Component -- AttributeSection;

Component -- Attribute;



Subject [description = "Domain entity"];

Literate [description = "Core implementation"];

AttributeSection [description = "Property group"];

Attribute [description = "Individual property"];

Class [description = "Schema definition"];




}

}

@enduml
</code></pre>
 <div class="diagram png puml" string="PNG Diagram plant_img21.png">
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img21.png" width="500px"/>
 </div>
 <div class="diagram svg puml" string="SVG Diagramplant_img21.svg">
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img21.svg" width="500px"/>
 </div>
</div>

...end of contenth for prose html .
Adding simple: CodeBlock 
...obj is  CodeBlock(content='``` puml\n@startuml\n\'hide empty description\n\'!pragma layout elk\nskinparam rectangleBorderThickness 1\nskinparam defaultTextAlignment center\nskinparam lifelineStrategy solid\nskinparam monochrome false\nskinparam style strictuml\nhide empty members\nskinparam Linetype ortho\n\nrectangle "Базовые модули" as base {\n\nclass "Базовые объекты" as baseobjects\nclass "Делопроизводство\\n4.5" as takeoffice\nclass "Управление\\nпроцессами" as workflow\nclass "Windows-клиент" as windowsclient\n\nclass "Управление\\nдокументами" as documentmanagement\nclass "Конструктор\\nсогласований" as approvaldesigner\n\nclass "Платформа" as platform\nclass "Служба\\n фоновых операций" as worker\n\n}\n\nplatform <-- baseobjects\nplatform <-- workflow\nplatform <-- takeoffice\nplatform <-- windowsclient\nplatform <-- documentmanagement\nplatform <-- approvaldesigner\n\nwindowsclient -up-> approvaldesigner\nwindowsclient -up-> documentmanagement\nwindowsclient -up-> baseobjects\nwindowsclient -up-> takeoffice\nwindowsclient -up-> workflow\n\nworker <-- approvaldesigner\nworker <-- baseobjects\n@enduml\n\n```')
Found codeblocks  1
 and the soup is 
<div>
 <pre><code class="language-puml">@startuml
'hide empty description
'!pragma layout elk
skinparam rectangleBorderThickness 1
skinparam defaultTextAlignment center
skinparam lifelineStrategy solid
skinparam monochrome false
skinparam style strictuml
hide empty members
skinparam Linetype ortho

rectangle "Базовые модули" as base {

class "Базовые объекты" as baseobjects
class "Делопроизводство\n4.5" as takeoffice
class "Управление\nпроцессами" as workflow
class "Windows-клиент" as windowsclient

class "Управление\nдокументами" as documentmanagement
class "Конструктор\nсогласований" as approvaldesigner

class "Платформа" as platform
class "Служба\n фоновых операций" as worker

}

platform &lt;-- baseobjects
platform &lt;-- workflow
platform &lt;-- takeoffice
platform &lt;-- windowsclient
platform &lt;-- documentmanagement
platform &lt;-- approvaldesigner

windowsclient -up-&gt; approvaldesigner
windowsclient -up-&gt; documentmanagement
windowsclient -up-&gt; baseobjects
windowsclient -up-&gt; takeoffice
windowsclient -up-&gt; workflow

worker &lt;-- approvaldesigner
worker &lt;-- baseobjects
@enduml

</code></pre>
</div>

Starting codeblock
code
and Starting codeblock parent for
<pre><code class="language-puml">@startuml
'hide empty description
'!pragma layout elk
skinparam rectangleBorderThickness 1
skinparam defaultTextAlignment center
skinparam lifelineStrategy solid
skinparam monochrome false
skinparam style strictuml
hide empty members
skinparam Linetype ortho

rectangle "Базовые модули" as base {

class "Базовые объекты" as baseobjects
class "Делопроизводство\n4.5" as takeoffice
class "Управление\nпроцессами" as workflow
class "Windows-клиент" as windowsclient

class "Управление\nдокументами" as documentmanagement
class "Конструктор\nсогласований" as approvaldesigner

class "Платформа" as platform
class "Служба\n фоновых операций" as worker

}

platform &lt;-- baseobjects
platform &lt;-- workflow
platform &lt;-- takeoffice
platform &lt;-- windowsclient
platform &lt;-- documentmanagement
platform &lt;-- approvaldesigner

windowsclient -up-&gt; approvaldesigner
windowsclient -up-&gt; documentmanagement
windowsclient -up-&gt; baseobjects
windowsclient -up-&gt; takeoffice
windowsclient -up-&gt; workflow

worker &lt;-- approvaldesigner
worker &lt;-- baseobjects
@enduml

</code></pre>

and Starting codeblock grandparent for
div
creating png in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img22.png
PUML png file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img22.png
PUML svg file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img22.svg
...contenth for prose html is...
<div>
 <pre><code class="language-puml">@startuml
'hide empty description
'!pragma layout elk
skinparam rectangleBorderThickness 1
skinparam defaultTextAlignment center
skinparam lifelineStrategy solid
skinparam monochrome false
skinparam style strictuml
hide empty members
skinparam Linetype ortho

rectangle "Базовые модули" as base {

class "Базовые объекты" as baseobjects
class "Делопроизводство\n4.5" as takeoffice
class "Управление\nпроцессами" as workflow
class "Windows-клиент" as windowsclient

class "Управление\nдокументами" as documentmanagement
class "Конструктор\nсогласований" as approvaldesigner

class "Платформа" as platform
class "Служба\n фоновых операций" as worker

}

platform &lt;-- baseobjects
platform &lt;-- workflow
platform &lt;-- takeoffice
platform &lt;-- windowsclient
platform &lt;-- documentmanagement
platform &lt;-- approvaldesigner

windowsclient -up-&gt; approvaldesigner
windowsclient -up-&gt; documentmanagement
windowsclient -up-&gt; baseobjects
windowsclient -up-&gt; takeoffice
windowsclient -up-&gt; workflow

worker &lt;-- approvaldesigner
worker &lt;-- baseobjects
@enduml

</code></pre>
 <div class="diagram png puml" string="PNG Diagram plant_img22.png">
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img22.png" width="500px"/>
 </div>
 <div class="diagram svg puml" string="SVG Diagramplant_img22.svg">
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img22.svg" width="500px"/>
 </div>
</div>

...end of contenth for prose html .
Adding simple: CodeBlock 
...obj is  CodeBlock(content='``` puml\n@startuml\nclass Car\n\nDriver - Car : drives >\nCar *- Wheel : have 4 >\nCar -- Person : < owns\n@enduml\n```')
Found codeblocks  1
 and the soup is 
<div>
 <pre><code class="language-puml">@startuml
class Car

Driver - Car : drives &gt;
Car *- Wheel : have 4 &gt;
Car -- Person : &lt; owns
@enduml
</code></pre>
</div>

Starting codeblock
code
and Starting codeblock parent for
<pre><code class="language-puml">@startuml
class Car

Driver - Car : drives &gt;
Car *- Wheel : have 4 &gt;
Car -- Person : &lt; owns
@enduml
</code></pre>

and Starting codeblock grandparent for
div
creating png in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img23.png
PUML png file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img23.png
PUML svg file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img23.svg
...contenth for prose html is...
<div>
 <pre><code class="language-puml">@startuml
class Car

Driver - Car : drives &gt;
Car *- Wheel : have 4 &gt;
Car -- Person : &lt; owns
@enduml
</code></pre>
 <div class="diagram png puml" string="PNG Diagram plant_img23.png">
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img23.png" width="500px"/>
 </div>
 <div class="diagram svg puml" string="SVG Diagramplant_img23.svg">
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img23.svg" width="500px"/>
 </div>
</div>

...end of contenth for prose html .
Adding simple: CodeBlock 
...obj is  CodeBlock(content='```puml\n@startuml\n\' Configure the modern style approach with CSS\n\' Try polyline instead of ortho\nskinparam linetype polyline\n\n<style>\n/* Global settings */\ndiagram {\nbackgroundColor: white;\n}\n\n/* Class styling */\nclass {\nBackgroundColor: #FFFFEE;\nBorderColor: #333333;\nBorderThickness: 1;\nBorderRadius: 8;\nFontColor: #333333;\nFontSize: 12;\n}\n\n/* Arrow styling */\narrow {\nColor: #333333;\nThickness: 1.5;\n}\n\n/* Package styling */\npackage {\nBackgroundColor: #E6F2FF;\nBorderColor: #336699;\nBorderThickness: 3;\nFontColor: #333333;\n}\n\n/* Custom style for Component */\n.container {\nBackgroundColor: #E6F2FF;\nBorderColor: #336699;\nBorderThickness: 3;\nBorderRadius: 10;\n}\n</style>\n\npackage "Component" <<container>> {\nclass Literate {\nCore implementation\n}\n\nclass Subject {\nDomain entity\n}\nclass Class {\nSchema definition\n}\nclass AttributeSection {\nProperty group\n}\nclass Attribute {\nIndividual property\n}\n\n\' Relationships\nSubject -> Literate\nClass -> Literate\nAttributeSection -> Literate\nAttribute -> Literate\n}\n\n@enduml\n```')
Found codeblocks  1
 and the soup is 
<div>
 <pre><code class="language-puml">@startuml
' Configure the modern style approach with CSS
' Try polyline instead of ortho
skinparam linetype polyline

&lt;style&gt;
/* Global settings */
diagram {
backgroundColor: white;
}

/* Class styling */
class {
BackgroundColor: #FFFFEE;
BorderColor: #333333;
BorderThickness: 1;
BorderRadius: 8;
FontColor: #333333;
FontSize: 12;
}

/* Arrow styling */
arrow {
Color: #333333;
Thickness: 1.5;
}

/* Package styling */
package {
BackgroundColor: #E6F2FF;
BorderColor: #336699;
BorderThickness: 3;
FontColor: #333333;
}

/* Custom style for Component */
.container {
BackgroundColor: #E6F2FF;
BorderColor: #336699;
BorderThickness: 3;
BorderRadius: 10;
}
&lt;/style&gt;

package "Component" &lt;&lt;container&gt;&gt; {
class Literate {
Core implementation
}

class Subject {
Domain entity
}
class Class {
Schema definition
}
class AttributeSection {
Property group
}
class Attribute {
Individual property
}

' Relationships
Subject -&gt; Literate
Class -&gt; Literate
AttributeSection -&gt; Literate
Attribute -&gt; Literate
}

@enduml
</code></pre>
</div>

Starting codeblock
code
and Starting codeblock parent for
<pre><code class="language-puml">@startuml
' Configure the modern style approach with CSS
' Try polyline instead of ortho
skinparam linetype polyline

&lt;style&gt;
/* Global settings */
diagram {
backgroundColor: white;
}

/* Class styling */
class {
BackgroundColor: #FFFFEE;
BorderColor: #333333;
BorderThickness: 1;
BorderRadius: 8;
FontColor: #333333;
FontSize: 12;
}

/* Arrow styling */
arrow {
Color: #333333;
Thickness: 1.5;
}

/* Package styling */
package {
BackgroundColor: #E6F2FF;
BorderColor: #336699;
BorderThickness: 3;
FontColor: #333333;
}

/* Custom style for Component */
.container {
BackgroundColor: #E6F2FF;
BorderColor: #336699;
BorderThickness: 3;
BorderRadius: 10;
}
&lt;/style&gt;

package "Component" &lt;&lt;container&gt;&gt; {
class Literate {
Core implementation
}

class Subject {
Domain entity
}
class Class {
Schema definition
}
class AttributeSection {
Property group
}
class Attribute {
Individual property
}

' Relationships
Subject -&gt; Literate
Class -&gt; Literate
AttributeSection -&gt; Literate
Attribute -&gt; Literate
}

@enduml
</code></pre>

and Starting codeblock grandparent for
div
creating png in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img24.png
PUML png file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img24.png
PUML svg file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img24.svg
...contenth for prose html is...
<div>
 <pre><code class="language-puml">@startuml
' Configure the modern style approach with CSS
' Try polyline instead of ortho
skinparam linetype polyline

&lt;style&gt;
/* Global settings */
diagram {
backgroundColor: white;
}

/* Class styling */
class {
BackgroundColor: #FFFFEE;
BorderColor: #333333;
BorderThickness: 1;
BorderRadius: 8;
FontColor: #333333;
FontSize: 12;
}

/* Arrow styling */
arrow {
Color: #333333;
Thickness: 1.5;
}

/* Package styling */
package {
BackgroundColor: #E6F2FF;
BorderColor: #336699;
BorderThickness: 3;
FontColor: #333333;
}

/* Custom style for Component */
.container {
BackgroundColor: #E6F2FF;
BorderColor: #336699;
BorderThickness: 3;
BorderRadius: 10;
}
&lt;/style&gt;

package "Component" &lt;&lt;container&gt;&gt; {
class Literate {
Core implementation
}

class Subject {
Domain entity
}
class Class {
Schema definition
}
class AttributeSection {
Property group
}
class Attribute {
Individual property
}

' Relationships
Subject -&gt; Literate
Class -&gt; Literate
AttributeSection -&gt; Literate
Attribute -&gt; Literate
}

@enduml
</code></pre>
 <div class="diagram png puml" string="PNG Diagram plant_img24.png">
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img24.png" width="500px"/>
 </div>
 <div class="diagram svg puml" string="SVG Diagramplant_img24.svg">
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img24.svg" width="500px"/>
 </div>
</div>

...end of contenth for prose html .
Adding simple: OneLiner 
...obj is  PlanUML
Found codeblocks  0
...contenth for prose html is...
<div>
 <p>
  PlanUML
 </p>
</div>

...end of contenth for prose html .
Adding simple: CodeBlock 
...obj is  CodeBlock(content='```puml\n\n@startmindmap\n* Component\n** Literate\n*** Subject\n*** Class\n*** AttributeSection\n*** Attribute\n@endmindmap\n@startuml\n!include <C4/C4_Component>\n\nPerson(user, "User")\nContainer_Boundary(component, "Component") {\nComponent(literate, "Literate", "Core implementation")\nComponent(subject, "Subject", "Domain entity")\nComponent(class, "Class", "Schema definition")\nComponent(attributeSection, "AttributeSection", "Property group")\nComponent(attribute, "Attribute", "Individual property")\n}\n\nRel(subject, literate, "extends")\nRel(class, literate, "extends")\nRel(attributeSection, literate, "extends")\nRel(attribute, literate, "extends")\n@enduml\n\n@startjson\n{\n"Component": {\n"Literate": {"description": "Core implementation"},\n"Subject": {"description": "Domain entity", "extends": "Literate"},\n"Class": {"description": "Schema definition", "extends": "Literate"},\n"AttributeSection": {"description": "Property group", "extends": "Literate"},\n"Attribute": {"description": "Individual property", "extends": "Literate"}\n}\n}\n@endjson\n```')
Found codeblocks  1
 and the soup is 
<div>
 <pre><code class="language-puml">
@startmindmap
* Component
** Literate
*** Subject
*** Class
*** AttributeSection
*** Attribute
@endmindmap
@startuml
!include &lt;C4/C4_Component&gt;

Person(user, "User")
Container_Boundary(component, "Component") {
Component(literate, "Literate", "Core implementation")
Component(subject, "Subject", "Domain entity")
Component(class, "Class", "Schema definition")
Component(attributeSection, "AttributeSection", "Property group")
Component(attribute, "Attribute", "Individual property")
}

Rel(subject, literate, "extends")
Rel(class, literate, "extends")
Rel(attributeSection, literate, "extends")
Rel(attribute, literate, "extends")
@enduml

@startjson
{
"Component": {
"Literate": {"description": "Core implementation"},
"Subject": {"description": "Domain entity", "extends": "Literate"},
"Class": {"description": "Schema definition", "extends": "Literate"},
"AttributeSection": {"description": "Property group", "extends": "Literate"},
"Attribute": {"description": "Individual property", "extends": "Literate"}
}
}
@endjson
</code></pre>
</div>

Starting codeblock
code
and Starting codeblock parent for
<pre><code class="language-puml">
@startmindmap
* Component
** Literate
*** Subject
*** Class
*** AttributeSection
*** Attribute
@endmindmap
@startuml
!include &lt;C4/C4_Component&gt;

Person(user, "User")
Container_Boundary(component, "Component") {
Component(literate, "Literate", "Core implementation")
Component(subject, "Subject", "Domain entity")
Component(class, "Class", "Schema definition")
Component(attributeSection, "AttributeSection", "Property group")
Component(attribute, "Attribute", "Individual property")
}

Rel(subject, literate, "extends")
Rel(class, literate, "extends")
Rel(attributeSection, literate, "extends")
Rel(attribute, literate, "extends")
@enduml

@startjson
{
"Component": {
"Literate": {"description": "Core implementation"},
"Subject": {"description": "Domain entity", "extends": "Literate"},
"Class": {"description": "Schema definition", "extends": "Literate"},
"AttributeSection": {"description": "Property group", "extends": "Literate"},
"Attribute": {"description": "Individual property", "extends": "Literate"}
}
}
@endjson
</code></pre>

and Starting codeblock grandparent for
div
creating png in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img25.png
PUML png file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img25.png
PUML svg file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img25.svg
...contenth for prose html is...
<div>
 <pre><code class="language-puml">
@startmindmap
* Component
** Literate
*** Subject
*** Class
*** AttributeSection
*** Attribute
@endmindmap
@startuml
!include &lt;C4/C4_Component&gt;

Person(user, "User")
Container_Boundary(component, "Component") {
Component(literate, "Literate", "Core implementation")
Component(subject, "Subject", "Domain entity")
Component(class, "Class", "Schema definition")
Component(attributeSection, "AttributeSection", "Property group")
Component(attribute, "Attribute", "Individual property")
}

Rel(subject, literate, "extends")
Rel(class, literate, "extends")
Rel(attributeSection, literate, "extends")
Rel(attribute, literate, "extends")
@enduml

@startjson
{
"Component": {
"Literate": {"description": "Core implementation"},
"Subject": {"description": "Domain entity", "extends": "Literate"},
"Class": {"description": "Schema definition", "extends": "Literate"},
"AttributeSection": {"description": "Property group", "extends": "Literate"},
"Attribute": {"description": "Individual property", "extends": "Literate"}
}
}
@endjson
</code></pre>
 <div class="diagram png puml" string="PNG Diagram plant_img25.png">
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img25.png" width="500px"/>
 </div>
 <div class="diagram svg puml" string="SVG Diagramplant_img25.svg">
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img25.svg" width="500px"/>
 </div>
</div>

...end of contenth for prose html .
Adding simple: CodeBlock 
...obj is  CodeBlock(content='``` puml\n@startjson\n{\n"Component": {\n"Literate": ["description", "Core implementation"],\n"Subject": {"description": "Domain entity", "extends": "Literate"},\n"Class": {"description": "Schema definition", "extends": "Literate"},\n"AttributeSection": {"description": "Property group", "extends": "Literate"},\n"Attribute": {"description": "Individual property", "extends": "Literate"}\n}\n}\n@endjson\n```')
Found codeblocks  1
 and the soup is 
<div>
 <pre><code class="language-puml">@startjson
{
"Component": {
"Literate": ["description", "Core implementation"],
"Subject": {"description": "Domain entity", "extends": "Literate"},
"Class": {"description": "Schema definition", "extends": "Literate"},
"AttributeSection": {"description": "Property group", "extends": "Literate"},
"Attribute": {"description": "Individual property", "extends": "Literate"}
}
}
@endjson
</code></pre>
</div>

Starting codeblock
code
and Starting codeblock parent for
<pre><code class="language-puml">@startjson
{
"Component": {
"Literate": ["description", "Core implementation"],
"Subject": {"description": "Domain entity", "extends": "Literate"},
"Class": {"description": "Schema definition", "extends": "Literate"},
"AttributeSection": {"description": "Property group", "extends": "Literate"},
"Attribute": {"description": "Individual property", "extends": "Literate"}
}
}
@endjson
</code></pre>

and Starting codeblock grandparent for
div
creating png in C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img26.png
PUML png file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img26.png
PUML svg file saved to: C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img26.svg
...contenth for prose html is...
<div>
 <pre><code class="language-puml">@startjson
{
"Component": {
"Literate": ["description", "Core implementation"],
"Subject": {"description": "Domain entity", "extends": "Literate"},
"Class": {"description": "Schema definition", "extends": "Literate"},
"AttributeSection": {"description": "Property group", "extends": "Literate"},
"Attribute": {"description": "Individual property", "extends": "Literate"}
}
}
@endjson
</code></pre>
 <div class="diagram png puml" string="PNG Diagram plant_img26.png">
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img26.png" width="500px"/>
 </div>
 <div class="diagram svg puml" string="SVG Diagramplant_img26.svg">
  <img src="C:\Users\fmkat\Dropbox\AllFMKFIles\AllVSCode\FMKProjects\Presentable\ldm\ldm_models\Diagrams\Diagrams_results\assets\plant_img26.svg" width="500px"/>
 </div>
</div>

...end of contenth for prose html .
Body classes are None
Saved styled dictionary to ldm/ldm_models/Diagrams/Diagrams_results/Diagrams_PD_08_as_pdf.html
Body classes are ['reviewing']
Saved styled dictionary (for review) to ldm/ldm_models/Diagrams/Diagrams_results/Diagrams_PD_08_as_pdf.review.html

Phase: Creating PDF from html and css - using Prince
