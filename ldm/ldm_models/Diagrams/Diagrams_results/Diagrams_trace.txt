
Phase: Parsing model: ldm/ldm_models/Diagrams/Diagrams.md
PARSING ldm/ldm_models/Diagrams/Diagrams.md

Phase: Deriving dict for model
.. full dict saved  in ldm/ldm_models/Diagrams/Diagrams_results/Diagrams.dict.yaml and ldm/ldm_models/Diagrams/Diagrams_results/Diagrams.dict.json
Building class map for module: ldm.Literate_01
Class map is
{   'Annotation': <class 'ldm.Literate_01.Annotation'>,
    'AsValue': <class 'utils.class_pom_token.AsValue'>,
    'Attribute': <class 'ldm.Literate_01.Attribute'>,
    'AttributeName': <class 'ldm.Literate_01.AttributeName'>,
    'AttributeReference': <class 'ldm.Literate_01.AttributeReference'>,
    'AttributeSection': <class 'ldm.Literate_01.AttributeSection'>,
    'AttributeSectionName': <class 'ldm.Literate_01.AttributeSectionName'>,
    'BaseDataType': <class 'ldm.Literate_01.BaseDataType'>,
    'CamelCase': <class 'utils.class_casing.CamelCase'>,
    'Class': <class 'ldm.Literate_01.Class'>,
    'ClassName': <class 'ldm.Literate_01.ClassName'>,
    'Class_': <class 'ldm.Literate_01.Class'>,
    'CodeBlock': <class 'ldm.Literate_01.CodeBlock'>,
    'CodeType': <class 'ldm.Literate_01.CodeType'>,
    'Component': <class 'ldm.Literate_01.Component'>,
    'Constraint': <class 'ldm.Literate_01.Constraint'>,
    'DataType': <class 'ldm.Literate_01.SetDataType'>,
    'DataTypeClause': <class 'ldm.Literate_01.DataTypeClause'>,
    'Default': <class 'ldm.Literate_01.Default'>,
    'Derivation': <class 'ldm.Literate_01.Derivation'>,
    'Diagnostic': <class 'ldm.Literate_01.Diagnostic'>,
    'Emoji': <class 'utils.class_pom_token.Emoji'>,
    'Formula': <class 'ldm.Literate_01.Formula'>,
    'FormulaCoding': <class 'ldm.Literate_01.FormulaCoding'>,
    'IsExclusive': <class 'utils.class_pom_token.IsExclusive'>,
    'IsExhaustive': <class 'utils.class_pom_token.IsExhaustive'>,
    'IsOptional': <class 'utils.class_pom_token.IsOptional'>,
    'Label': <class 'ldm.Literate_01.Label'>,
    'ListDataType': <class 'ldm.Literate_01.ListDataType'>,
    'LiterateModel': <class 'ldm.Literate_01.LiterateModel'>,
    'LowerCamel': <class 'utils.class_casing.LowerCamel'>,
    'MappingDataType': <class 'ldm.Literate_01.MappingDataType'>,
    'MinorComponent': <class 'ldm.Literate_01.MinorComponent'>,
    'ModelName': <class 'ldm.Literate_01.ModelName'>,
    'Natural': <class 'ldm.Literate_01.OneLiner'>,
    'NormalCase': <class 'utils.class_casing.NormalCase'>,
    'OneLiner': <class 'ldm.Literate_01.OneLiner'>,
    'Paragraph': <class 'ldm.Literate_01.Paragraph'>,
    'PresentableBoolean': <class 'utils.class_pom_token.PresentableBoolean'>,
    'ReferenceType': <class 'ldm.Literate_01.ReferenceType'>,
    'SetDataType': <class 'ldm.Literate_01.SetDataType'>,
    'Subject': <class 'ldm.Literate_01.SubjectB'>,
    'SubjectB': <class 'ldm.Literate_01.SubjectB'>,
    'SubjectC': <class 'ldm.Literate_01.SubjectC'>,
    'SubjectD': <class 'ldm.Literate_01.SubjectD'>,
    'SubjectE': <class 'ldm.Literate_01.SubjectE'>,
    'SubjectName': <class 'ldm.Literate_01.SubjectName'>,
    'Subtyping': <class 'ldm.Literate_01.Subtyping'>,
    'SubtypingName': <class 'ldm.Literate_01.SubtypingName'>,
    'UpperCamel': <class 'utils.class_casing.UpperCamel'>,
    'ValueType': <class 'ldm.Literate_01.ValueType'>}

Phase: Creating model from dictionary: ldm/ldm_models/Diagrams/Diagrams_results/Diagrams.dict.yaml
Created model: <class 'ldm.Literate_01.LiterateModel'>

Phase: Validating model
Validating references...
Validation errors: 58

Phase: counting errors
{"Validation Error in Attribute: Required field 'data_type_clause' is missing": 16, "Validation Error in Class: For field 'based_on' - expected typing.Optional[typing.List[ldm.Literate_01.ClassName]], but got <class 'list'>": 6, "Validation Error in SubjectB: For field 'name' - expected <class 'utils.class_casing.CamelCase'>, but got <class 'ldm.Literate_01.SubjectName'>": 29, "Validation Error in Constraint: For field 'one_liner' - expected typing.Optional[ldm.Literate_01.OneLiner], but got <class 'list'>": 5, "Validation Error in Class: For field 'abbreviation' - expected typing.Optional[utils.class_casing.CamelCase], but got <class 'str'>": 1, "Validation Error in Class: For field 'subtype_of' - expected typing.Optional[typing.Dict[ldm.Literate_01.ClassName, ldm.Literate_01.SubtypingName]], but got <class 'list'>": 17, "Validation Error in Class: For field 'dependent_of' - expected typing.Optional[typing.List[ldm.Literate_01.ClassName]], but got <class 'list'>": 1, "Validation Error in Class: For field 'where' - expected typing.Optional[ldm.Literate_01.OneLiner], but got <class 'str'>": 3, "Validation Error in SubjectC: For field 'name' - expected <class 'utils.class_casing.CamelCase'>, but got <class 'ldm.Literate_01.SubjectName'>": 28, "Validation Error in Attribute: Required field 'name' is missing": 7}
16 	 Validation Error in Attribute: Required field 'data_type_clause' is missing
6 	 Validation Error in Class: For field 'based_on' - expected typing.Optional[typing.List[ldm.Literate_01.ClassName]], but got <class 'list'>
29 	 Validation Error in SubjectB: For field 'name' - expected <class 'utils.class_casing.CamelCase'>, but got <class 'ldm.Literate_01.SubjectName'>
5 	 Validation Error in Constraint: For field 'one_liner' - expected typing.Optional[ldm.Literate_01.OneLiner], but got <class 'list'>
1 	 Validation Error in Class: For field 'abbreviation' - expected typing.Optional[utils.class_casing.CamelCase], but got <class 'str'>
17 	 Validation Error in Class: For field 'subtype_of' - expected typing.Optional[typing.Dict[ldm.Literate_01.ClassName, ldm.Literate_01.SubtypingName]], but got <class 'list'>
1 	 Validation Error in Class: For field 'dependent_of' - expected typing.Optional[typing.List[ldm.Literate_01.ClassName]], but got <class 'list'>
3 	 Validation Error in Class: For field 'where' - expected typing.Optional[ldm.Literate_01.OneLiner], but got <class 'str'>
28 	 Validation Error in SubjectC: For field 'name' - expected <class 'utils.class_casing.CamelCase'>, but got <class 'ldm.Literate_01.SubjectName'>
7 	 Validation Error in Attribute: Required field 'name' is missing

Phase: Serialing model ...
Model serialized to ldm/ldm_models/Diagrams/Diagrams_results/Diagrams.model.json
Model serialized to ldm/ldm_models/Diagrams/Diagrams_results/Diagrams.model.yaml
..Created model files: ldm/ldm_models/Diagrams/Diagrams_results/Diagrams.model.json and ldm/ldm_models/Diagrams/Diagrams_results/Diagrams.model.yaml

Phase: Rendering back to markdown
15  subjects coming in model

Phase: Creating HTML from model dict
All keys are: 
	 elaboration
	 _type
	 content
	 prefix
	 subjects
	 one_liner
	 parenthetical
	 name
Starting codeblock
<code class="language-mermaid">
 classDiagram
class Component
class Literate
class Subject
class Class
class Attrribute Section
class Attribute

Component  &lt;|-- Literate
Subject  &lt;|-- Literate
Class  &lt;|-- Literate
AttributeSection  &lt;|-- Literate
Attribute  &lt;|-- Literate

classDef default fill:yellow,stroke:#000, color:black, stroke-width:4px
</code>

and Starting codeblock parent for
<function FluentTag.__getattr__.<locals>.wrapped at 0x0000016BD058E020>
Starting codeblock
<code class="language-mermaid">
 %%{init: {
"flowchart": {
"curve": "stepAfter",
"useMaxWidth": true
}
}}%%

flowchart TB
subgraph Component["Component - Base class"]
direction TB

Literate["Literate&lt;br&gt;Core implementation"]

subgraph Subtypes["Component Subtypes"]
direction LR
Subject["Subject&lt;br&gt;Domain entity"]
Class["Class&lt;br&gt;Schema definition"]
AttributeSection["AttributeSection&lt;br&gt;Property group"]
Attribute["Attribute&lt;br&gt;Individual property"]
end

Subject ==&gt; Literate
Class ==&gt; Literate
AttributeSection ==&gt; Literate
Attribute ==&gt; Literate
end

%% Styling with border-radius only
classDef container fill:#e3f2fd,stroke:#1565c0,stroke-width:3px,color:#0d47a1,border-radius:10px
classDef subcontainer fill:#f5f5f5,stroke:#78909c,stroke-width:2px,color:#37474f,border-radius:8px
classDef default fill:white,stroke:#90a4ae,stroke-width:1px,color:#455a64,border-radius:5px

class Component container
class Subtypes subcontainer

%% Edge styling
linkStyle default stroke:#546e7a,stroke-width:2px, border-radius: 20px
</code>

and Starting codeblock parent for
<function FluentTag.__getattr__.<locals>.wrapped at 0x0000016BD058D1C0>
Starting codeblock
<code class="language-puml">
 @startjson
&lt;style&gt;
.h1 {
BackGroundColor green
FontColor white
FontStyle italic
}
.h2 {
BackGroundColor red
FontColor white
FontStyle bold
}
&lt;/style&gt;
#highlight "lastName"
#highlight "address" / "city" &lt;&lt;h1&gt;&gt;
#highlight "phoneNumbers" / "0" / "number" &lt;&lt;h2&gt;&gt;
{
"firstName": "John",
"lastName": "Smith",
"isAlive": true,
"age": 28,
"address": {
"streetAddress": "21 2nd Street",
"city": "New York",
"state": "NY",
"postalCode": "10021-3100"
},
"phoneNumbers": [
{
"type": "home",
"number": "212 555-1234"
},
{
"type": "office",
"number": "646 555-4567"
}
],
"children": [],
"spouse": null
}
@endjson
</code>

and Starting codeblock parent for
<function FluentTag.__getattr__.<locals>.wrapped at 0x0000016BD052CC20>
creating png in ldm/ldm_models/Literate/Literate_results/assets/diagram1.png
PUML png file saved to: ldm/ldm_models/Literate/Literate_results/assets/diagram1.png
creating svg in ldm/ldm_models/Literate/Literate_results/assets/diagram1.svg
PUML svg file saved to: ldm/ldm_models/Literate/Literate_results/assets/diagram1.svg
SVG div for PUML
<div class="diagram svg puml" string="SVG Diagram">
 <img src="assets/diagram1.svg"/>
</div>

Finished codeblock for PUML
<code class="language-puml">
 @startjson
&lt;style&gt;
.h1 {
BackGroundColor green
FontColor white
FontStyle italic
}
.h2 {
BackGroundColor red
FontColor white
FontStyle bold
}
&lt;/style&gt;
#highlight "lastName"
#highlight "address" / "city" &lt;&lt;h1&gt;&gt;
#highlight "phoneNumbers" / "0" / "number" &lt;&lt;h2&gt;&gt;
{
"firstName": "John",
"lastName": "Smith",
"isAlive": true,
"age": 28,
"address": {
"streetAddress": "21 2nd Street",
"city": "New York",
"state": "NY",
"postalCode": "10021-3100"
},
"phoneNumbers": [
{
"type": "home",
"number": "212 555-1234"
},
{
"type": "office",
"number": "646 555-4567"
}
],
"children": [],
"spouse": null
}
@endjson
 <div class="diagram svg puml" string="SVG Diagram">
  <img src="assets/diagram1.svg"/>
 </div>
 <div class="diagram png puml" string="PNG Diagram">
  <img src="assets/diagram1.png"/>
 </div>
</code>

and Finished codeblock parent for PUML
<function FluentTag.__getattr__.<locals>.wrapped at 0x0000016BD052F100>
Starting codeblock
<code class="language-puml">
 @startuml

rectangle Component
rectangle Literate
rectangle Subject
rectangle Class
rectangle Attribute
rectangle a

Literate -u-&gt;  a
Subject -u-&gt; a
Class -u-&gt; a
Attribute -u-&gt; a
a -u-&gt; Component
skinparam linetype ortho
@enduml
</code>

and Starting codeblock parent for
<function FluentTag.__getattr__.<locals>.wrapped at 0x0000016BD052F920>
creating png in ldm/ldm_models/Literate/Literate_results/assets/diagram2.png
PUML png file saved to: ldm/ldm_models/Literate/Literate_results/assets/diagram2.png
creating svg in ldm/ldm_models/Literate/Literate_results/assets/diagram2.svg
PUML svg file saved to: ldm/ldm_models/Literate/Literate_results/assets/diagram2.svg
SVG div for PUML
<div class="diagram svg puml" string="SVG Diagram">
 <img src="assets/diagram2.svg"/>
</div>

Finished codeblock for PUML
<code class="language-puml">
 @startuml

rectangle Component
rectangle Literate
rectangle Subject
rectangle Class
rectangle Attribute
rectangle a

Literate -u-&gt;  a
Subject -u-&gt; a
Class -u-&gt; a
Attribute -u-&gt; a
a -u-&gt; Component
skinparam linetype ortho
@enduml
 <div class="diagram svg puml" string="SVG Diagram">
  <img src="assets/diagram2.svg"/>
 </div>
 <div class="diagram png puml" string="PNG Diagram">
  <img src="assets/diagram2.png"/>
 </div>
</code>

and Finished codeblock parent for PUML
<function FluentTag.__getattr__.<locals>.wrapped at 0x0000016BD052F920>
Starting codeblock
<code class="language-mermaid">
 block-beta
columns 3
a:3
block:group1:2
columns 2
h i j k
end
g
block:group2:3
%% columns auto (default)
l m n o p q r
end
</code>

and Starting codeblock parent for
<function FluentTag.__getattr__.<locals>.wrapped at 0x0000016BD052FD80>
Starting codeblock
<code class="language-mermaid">
 erDiagram

CAR {

string registrationNumber

string make

string model

}

PERSON {

string firstName

string lastName

int age

}

style CAR fill: red,stroke:navy,stroke-width:3px

style PERSON color: white, fill: navy,stroke:yellow ,stroke-width:2px
</code>

and Starting codeblock parent for
<function FluentTag.__getattr__.<locals>.wrapped at 0x0000016BD052FBA0>
Starting codeblock
<code class="language-mermaid">
 erDiagram

class Subject Component

class Section Component

class Attribute Component

class Classe Component

Subject ||--|{ Subject : contains

Subject ||--|{ Classe : contains



Classe ||--|{ Section : contains

Classe ||--|{ Attribute : contains

Section ||--|{ Attribute : contains
</code>

and Starting codeblock parent for
<function FluentTag.__getattr__.<locals>.wrapped at 0x0000016BD058C7C0>
Starting codeblock
<code class="language-csv">
 eFormat, Description
E-Book, 'Kindle or Apple books - etc'
PDF, formatted for printing and direct delivery
</code>

and Starting codeblock parent for
<function FluentTag.__getattr__.<locals>.wrapped at 0x0000016BD058E980>
failed on simple content: obj type is CodeBlock, content is...
```csv
eFormat, Description
E-Book, 'Kindle or Apple books - etc'
PDF, formatted for printing and direct delivery

```
Traceback (most recent call last):
  File "C:\Users\fmkat\Dropbox\AllFMKFiles\AllVSCode\FMKProjects\Presentable\ldm\ldm_to_html.py", line 478, in add_html_simple_content
    content_h = as_prose_html(content)
  File "C:\Users\fmkat\Dropbox\AllFMKFiles\AllVSCode\FMKProjects\Presentable\ldm\do_md_parse.py", line 42, in as_prose_html
    codeblock.parent.insert_after(table_soup)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'function' object has no attribute 'insert_after'
Starting codeblock
<code class="language-puml">
 @startuml

nwdiag {

network {

Component;

Literate;

Subject;

Attribute;

AttributeSection;

Class;

Component -- Literate;

Component -- Subject;

Component -- Class;

Component -- AttributeSection;

Component -- Attribute;



Subject [description = "Domain entity"];

Literate [description = "Core implementation"];

AttributeSection [description = "Property group"];

Attribute [description = "Individual property"];

Class [description = "Schema definition"];




}

}

@enduml
</code>

and Starting codeblock parent for
<function FluentTag.__getattr__.<locals>.wrapped at 0x0000016BD058D8A0>
creating png in ldm/ldm_models/Literate/Literate_results/assets/diagram3.png
PUML png file saved to: ldm/ldm_models/Literate/Literate_results/assets/diagram3.png
creating svg in ldm/ldm_models/Literate/Literate_results/assets/diagram3.svg
PUML svg file saved to: ldm/ldm_models/Literate/Literate_results/assets/diagram3.svg
SVG div for PUML
<div class="diagram svg puml" string="SVG Diagram">
 <img src="assets/diagram3.svg"/>
</div>

Finished codeblock for PUML
<code class="language-puml">
 @startuml

nwdiag {

network {

Component;

Literate;

Subject;

Attribute;

AttributeSection;

Class;

Component -- Literate;

Component -- Subject;

Component -- Class;

Component -- AttributeSection;

Component -- Attribute;



Subject [description = "Domain entity"];

Literate [description = "Core implementation"];

AttributeSection [description = "Property group"];

Attribute [description = "Individual property"];

Class [description = "Schema definition"];




}

}

@enduml
 <div class="diagram svg puml" string="SVG Diagram">
  <img src="assets/diagram3.svg"/>
 </div>
 <div class="diagram png puml" string="PNG Diagram">
  <img src="assets/diagram3.png"/>
 </div>
</code>

and Finished codeblock parent for PUML
<function FluentTag.__getattr__.<locals>.wrapped at 0x0000016BD058D8A0>
Starting codeblock
<code class="language-puml">
 @startuml
'hide empty description
'!pragma layout elk
skinparam rectangleBorderThickness 1
skinparam defaultTextAlignment center
skinparam lifelineStrategy solid
skinparam monochrome false
skinparam style strictuml
hide empty members
skinparam Linetype ortho

rectangle "Базовые модули" as base {

class "Базовые объекты" as baseobjects
class "Делопроизводство\n4.5" as takeoffice
class "Управление\nпроцессами" as workflow
class "Windows-клиент" as windowsclient

class "Управление\nдокументами" as documentmanagement
class "Конструктор\nсогласований" as approvaldesigner

class "Платформа" as platform
class "Служба\n фоновых операций" as worker

}

platform &lt;-- baseobjects
platform &lt;-- workflow
platform &lt;-- takeoffice
platform &lt;-- windowsclient
platform &lt;-- documentmanagement
platform &lt;-- approvaldesigner

windowsclient -up-&gt; approvaldesigner
windowsclient -up-&gt; documentmanagement
windowsclient -up-&gt; baseobjects
windowsclient -up-&gt; takeoffice
windowsclient -up-&gt; workflow

worker &lt;-- approvaldesigner
worker &lt;-- baseobjects
@enduml
</code>

and Starting codeblock parent for
<function FluentTag.__getattr__.<locals>.wrapped at 0x0000016BD058F1A0>
creating png in ldm/ldm_models/Literate/Literate_results/assets/diagram4.png
PUML png file saved to: ldm/ldm_models/Literate/Literate_results/assets/diagram4.png
creating svg in ldm/ldm_models/Literate/Literate_results/assets/diagram4.svg
PUML svg file saved to: ldm/ldm_models/Literate/Literate_results/assets/diagram4.svg
SVG div for PUML
<div class="diagram svg puml" string="SVG Diagram">
 <img src="assets/diagram4.svg"/>
</div>

Finished codeblock for PUML
<code class="language-puml">
 @startuml
'hide empty description
'!pragma layout elk
skinparam rectangleBorderThickness 1
skinparam defaultTextAlignment center
skinparam lifelineStrategy solid
skinparam monochrome false
skinparam style strictuml
hide empty members
skinparam Linetype ortho

rectangle "Базовые модули" as base {

class "Базовые объекты" as baseobjects
class "Делопроизводство\n4.5" as takeoffice
class "Управление\nпроцессами" as workflow
class "Windows-клиент" as windowsclient

class "Управление\nдокументами" as documentmanagement
class "Конструктор\nсогласований" as approvaldesigner

class "Платформа" as platform
class "Служба\n фоновых операций" as worker

}

platform &lt;-- baseobjects
platform &lt;-- workflow
platform &lt;-- takeoffice
platform &lt;-- windowsclient
platform &lt;-- documentmanagement
platform &lt;-- approvaldesigner

windowsclient -up-&gt; approvaldesigner
windowsclient -up-&gt; documentmanagement
windowsclient -up-&gt; baseobjects
windowsclient -up-&gt; takeoffice
windowsclient -up-&gt; workflow

worker &lt;-- approvaldesigner
worker &lt;-- baseobjects
@enduml
 <div class="diagram svg puml" string="SVG Diagram">
  <img src="assets/diagram4.svg"/>
 </div>
 <div class="diagram png puml" string="PNG Diagram">
  <img src="assets/diagram4.png"/>
 </div>
</code>

and Finished codeblock parent for PUML
<function FluentTag.__getattr__.<locals>.wrapped at 0x0000016BD058F1A0>
Starting codeblock
<code class="language-puml">
 @startuml
class Car

Driver - Car : drives &gt;
Car *- Wheel : have 4 &gt;
Car -- Person : &lt; owns
@enduml
</code>

and Starting codeblock parent for
<function FluentTag.__getattr__.<locals>.wrapped at 0x0000016BD058D580>
creating png in ldm/ldm_models/Literate/Literate_results/assets/diagram5.png
PUML png file saved to: ldm/ldm_models/Literate/Literate_results/assets/diagram5.png
creating svg in ldm/ldm_models/Literate/Literate_results/assets/diagram5.svg
PUML svg file saved to: ldm/ldm_models/Literate/Literate_results/assets/diagram5.svg
SVG div for PUML
<div class="diagram svg puml" string="SVG Diagram">
 <img src="assets/diagram5.svg"/>
</div>

Finished codeblock for PUML
<code class="language-puml">
 @startuml
class Car

Driver - Car : drives &gt;
Car *- Wheel : have 4 &gt;
Car -- Person : &lt; owns
@enduml
 <div class="diagram svg puml" string="SVG Diagram">
  <img src="assets/diagram5.svg"/>
 </div>
 <div class="diagram png puml" string="PNG Diagram">
  <img src="assets/diagram5.png"/>
 </div>
</code>

and Finished codeblock parent for PUML
<function FluentTag.__getattr__.<locals>.wrapped at 0x0000016BD058F600>
Starting codeblock
<code class="language-puml">
 @startuml
' Configure the modern style approach with CSS
' Try polyline instead of ortho
skinparam linetype polyline

&lt;style&gt;
/* Global settings */
diagram {
backgroundColor: white;
}

/* Class styling */
class {
BackgroundColor: #FFFFEE;
BorderColor: #333333;
BorderThickness: 1;
BorderRadius: 8;
FontColor: #333333;
FontSize: 12;
}

/* Arrow styling */
arrow {
Color: #333333;
Thickness: 1.5;
}

/* Package styling */
package {
BackgroundColor: #E6F2FF;
BorderColor: #336699;
BorderThickness: 3;
FontColor: #333333;
}

/* Custom style for Component */
.container {
BackgroundColor: #E6F2FF;
BorderColor: #336699;
BorderThickness: 3;
BorderRadius: 10;
}
&lt;/style&gt;

package "Component" &lt;&lt;container&gt;&gt; {
class Literate {
Core implementation
}

class Subject {
Domain entity
}
class Class {
Schema definition
}
class AttributeSection {
Property group
}
class Attribute {
Individual property
}

' Relationships
Subject -&gt; Literate
Class -&gt; Literate
AttributeSection -&gt; Literate
Attribute -&gt; Literate
}

@enduml
</code>

and Starting codeblock parent for
<function FluentTag.__getattr__.<locals>.wrapped at 0x0000016BD058C180>
creating png in ldm/ldm_models/Literate/Literate_results/assets/diagram6.png
PUML png file saved to: ldm/ldm_models/Literate/Literate_results/assets/diagram6.png
creating svg in ldm/ldm_models/Literate/Literate_results/assets/diagram6.svg
PUML svg file saved to: ldm/ldm_models/Literate/Literate_results/assets/diagram6.svg
SVG div for PUML
<div class="diagram svg puml" string="SVG Diagram">
 <img src="assets/diagram6.svg"/>
</div>

Finished codeblock for PUML
<code class="language-puml">
 @startuml
' Configure the modern style approach with CSS
' Try polyline instead of ortho
skinparam linetype polyline

&lt;style&gt;
/* Global settings */
diagram {
backgroundColor: white;
}

/* Class styling */
class {
BackgroundColor: #FFFFEE;
BorderColor: #333333;
BorderThickness: 1;
BorderRadius: 8;
FontColor: #333333;
FontSize: 12;
}

/* Arrow styling */
arrow {
Color: #333333;
Thickness: 1.5;
}

/* Package styling */
package {
BackgroundColor: #E6F2FF;
BorderColor: #336699;
BorderThickness: 3;
FontColor: #333333;
}

/* Custom style for Component */
.container {
BackgroundColor: #E6F2FF;
BorderColor: #336699;
BorderThickness: 3;
BorderRadius: 10;
}
&lt;/style&gt;

package "Component" &lt;&lt;container&gt;&gt; {
class Literate {
Core implementation
}

class Subject {
Domain entity
}
class Class {
Schema definition
}
class AttributeSection {
Property group
}
class Attribute {
Individual property
}

' Relationships
Subject -&gt; Literate
Class -&gt; Literate
AttributeSection -&gt; Literate
Attribute -&gt; Literate
}

@enduml
 <div class="diagram svg puml" string="SVG Diagram">
  <img src="assets/diagram6.svg"/>
 </div>
 <div class="diagram png puml" string="PNG Diagram">
  <img src="assets/diagram6.png"/>
 </div>
</code>

and Finished codeblock parent for PUML
<function FluentTag.__getattr__.<locals>.wrapped at 0x0000016BD058C180>
Starting codeblock
<code class="language-puml">
 @startmindmap
* Component
** Literate
*** Subject
*** Class
*** AttributeSection
*** Attribute
@endmindmap
@startuml
!include &lt;C4/C4_Component&gt;

Person(user, "User")
Container_Boundary(component, "Component") {
Component(literate, "Literate", "Core implementation")
Component(subject, "Subject", "Domain entity")
Component(class, "Class", "Schema definition")
Component(attributeSection, "AttributeSection", "Property group")
Component(attribute, "Attribute", "Individual property")
}

Rel(subject, literate, "extends")
Rel(class, literate, "extends")
Rel(attributeSection, literate, "extends")
Rel(attribute, literate, "extends")
@enduml

@startjson
{
"Component": {
"Literate": {"description": "Core implementation"},
"Subject": {"description": "Domain entity", "extends": "Literate"},
"Class": {"description": "Schema definition", "extends": "Literate"},
"AttributeSection": {"description": "Property group", "extends": "Literate"},
"Attribute": {"description": "Individual property", "extends": "Literate"}
}
}
@endjson
</code>

and Starting codeblock parent for
<function FluentTag.__getattr__.<locals>.wrapped at 0x0000016BD058EDE0>
creating png in ldm/ldm_models/Literate/Literate_results/assets/diagram7.png
PUML png file saved to: ldm/ldm_models/Literate/Literate_results/assets/diagram7.png
creating svg in ldm/ldm_models/Literate/Literate_results/assets/diagram7.svg
PUML svg file saved to: ldm/ldm_models/Literate/Literate_results/assets/diagram7.svg
SVG div for PUML
<div class="diagram svg puml" string="SVG Diagram">
 <img src="assets/diagram7.svg"/>
</div>

Finished codeblock for PUML
<code class="language-puml">
 @startmindmap
* Component
** Literate
*** Subject
*** Class
*** AttributeSection
*** Attribute
@endmindmap
@startuml
!include &lt;C4/C4_Component&gt;

Person(user, "User")
Container_Boundary(component, "Component") {
Component(literate, "Literate", "Core implementation")
Component(subject, "Subject", "Domain entity")
Component(class, "Class", "Schema definition")
Component(attributeSection, "AttributeSection", "Property group")
Component(attribute, "Attribute", "Individual property")
}

Rel(subject, literate, "extends")
Rel(class, literate, "extends")
Rel(attributeSection, literate, "extends")
Rel(attribute, literate, "extends")
@enduml

@startjson
{
"Component": {
"Literate": {"description": "Core implementation"},
"Subject": {"description": "Domain entity", "extends": "Literate"},
"Class": {"description": "Schema definition", "extends": "Literate"},
"AttributeSection": {"description": "Property group", "extends": "Literate"},
"Attribute": {"description": "Individual property", "extends": "Literate"}
}
}
@endjson
 <div class="diagram svg puml" string="SVG Diagram">
  <img src="assets/diagram7.svg"/>
 </div>
 <div class="diagram png puml" string="PNG Diagram">
  <img src="assets/diagram7.png"/>
 </div>
</code>

and Finished codeblock parent for PUML
<function FluentTag.__getattr__.<locals>.wrapped at 0x0000016BD058EDE0>
Starting codeblock
<code class="language-puml">
 @startjson
{
"Component": {
"Literate": ["description", "Core implementation"],
"Subject": {"description": "Domain entity", "extends": "Literate"},
"Class": {"description": "Schema definition", "extends": "Literate"},
"AttributeSection": {"description": "Property group", "extends": "Literate"},
"Attribute": {"description": "Individual property", "extends": "Literate"}
}
}
@endjson
</code>

and Starting codeblock parent for
<function FluentTag.__getattr__.<locals>.wrapped at 0x0000016BD058E840>
creating png in ldm/ldm_models/Literate/Literate_results/assets/diagram8.png
PUML png file saved to: ldm/ldm_models/Literate/Literate_results/assets/diagram8.png
creating svg in ldm/ldm_models/Literate/Literate_results/assets/diagram8.svg
PUML svg file saved to: ldm/ldm_models/Literate/Literate_results/assets/diagram8.svg
SVG div for PUML
<div class="diagram svg puml" string="SVG Diagram">
 <img src="assets/diagram8.svg"/>
</div>

Finished codeblock for PUML
<code class="language-puml">
 @startjson
{
"Component": {
"Literate": ["description", "Core implementation"],
"Subject": {"description": "Domain entity", "extends": "Literate"},
"Class": {"description": "Schema definition", "extends": "Literate"},
"AttributeSection": {"description": "Property group", "extends": "Literate"},
"Attribute": {"description": "Individual property", "extends": "Literate"}
}
}
@endjson
 <div class="diagram svg puml" string="SVG Diagram">
  <img src="assets/diagram8.svg"/>
 </div>
 <div class="diagram png puml" string="PNG Diagram">
  <img src="assets/diagram8.png"/>
 </div>
</code>

and Finished codeblock parent for PUML
<function FluentTag.__getattr__.<locals>.wrapped at 0x0000016BD058E840>
Body classes are None
Saved styled dictionary to ldm/ldm_models/Diagrams/Diagrams_results/Diagrams.html
Body classes are ['reviewing']
Saved styled dictionary (for review) to ldm/ldm_models/Diagrams/Diagrams_results/Diagrams.review.html

Phase: Skipping PDF creation
Directory 'ldm/ldm_models/Biblio/Biblio_results' and its contents have been removed.

Phase: Warming up
Model dir:  ldm/ldm_models/Biblio
Model name:  Biblio
Model doc:  Biblio.md
Model name:  Biblio
Model doc path:  ldm/ldm_models/Biblio/Biblio.md
Results dir:  ldm/ldm_models/Biblio/Biblio_results
Trace path:  ldm/ldm_models/Biblio/Biblio_results/Biblio_trace.txt
Rediirecting to:  ldm/ldm_models/Biblio/Biblio_results/Biblio_trace.txt
