_type: LiterateModel
one_liner: ''
elaboration: ''
diagnostics:
- _type: Diagnostic
  object_type: LiterateModel
  message: Name is missing
  severity: Error
  constraint_name: ''
is_embellishment: false
prefix: '#'
parenthetical: ''
abbreviation: ''
subjects:
- _type: SubjectB
  one_liner:
    _type: OneLiner
    content: the basic structure of the model
  elaboration:
  - _type: Paragraph
    content: 'In Literate Data Modeling, the main components of interest are typically
      Classes, Attributes, Models, and Subjects. However, to streamline the model
      and promote reusability, we introduce a supertype called Component. By defining
      common attributes and behaviors in the Component class, we can inherit them
      in the subclasses, ensuring consistency and reducing duplication throughout
      the model.

      '
  - _type: Paragraph
    content: 'We present the Component class first because it is a best practice in
      modeling to introduce supertypes before their subtypes. This approach allows
      readers to understand the general concepts and shared properties before delving
      into the specifics of each specialized component.

      '
  is_embellishment: false
  prefix: '##'
  name:
    _type: SubjectName
    content: Preliminaries
  parenthetical: ''
  classes:
  - _type: Class
    one_liner:
      _type: OneLiner
      content: An element or building block of the literate data model
    is_embellishment: false
    prefix: _
    name:
      _type: ClassName
      content: Component
    parenthetical: ''
    is_value_type: false
    attributes:
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: the name of the component, not in camel case
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: normalName
      parenthetical: '*String*'
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: String
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: The name of the component
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: name
      parenthetical: CamelName
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: CamelName
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
    - _type: Attribute
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: qualifiedName
      parenthetical: '*QualifiedCamel*'
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: QualifiedCamel
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: a short form of the component's name, used for cross references and
          improved readability.
      annotations:
      - _type: Annotation
        label: Example
        content: '"LDM" is the short form of "Literate Data Model".'
        emoji: ''
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: abbreviatedName
      parenthetical: '*CamelName*'
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: CamelName
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
      default:
        _type: Default
        one_liner:
          _type: OneLiner
          content: ' name

            '
        diagnostics:
        - _type: Diagnostic
          object_type: Default
          object_name: anon
          message: No value for code
          severity: Error
          constraint_name: ''
        is_embellishment: false
        english:
          _type: Paragraph
          content: ''
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: A brief, one-line definition or description of the component, suitable
          for use in a descriptive table of contents. _
      diagnostics:
      - _type: Diagnostic
        object_type: Attribute
        object_name:
          _type: AttributeName
          content: oneLiner
        message: oneLiner is too long. (116 chars).
        severity: Warning
        constraint_name: ''
      is_embellishment: false
      prefix: '-'
      name: '[circular reference to AttributeName]'
      parenthetical: RichLine
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: RichLine
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: A more detailed explanation or discussion of the component _
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: elaboration
      parenthetical: RichText
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: RichText
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
    attribute_sections:
    - _type: AttributeSection
      one_liner:
        _type: OneLiner
        content: mechanical attributes
      is_embellishment: false
      prefix: __
      name:
        _type: AttributeSectionName
        content: For Machinery
      parenthetical: ''
      is_optional:
        _type: IsOptional
        t_value: false
      attributes:
      - _type: Attribute
        one_liner:
          _type: OneLiner
          content: Indicates whether this component is an embellishment added during
            post-parsing processing _
        annotations:
        - _type: Annotation
          label: Note
          content: This attribute is set to true for components that are automatically
            generated or added during the fleshing out, review, or rendering processes,
            such as implied attributes or suggested model elements. It helps distinguish
            embellishments from the core model elements defined in the original LDM
            source.
          emoji: ''
        diagnostics:
        - _type: Diagnostic
          object_type: Attribute
          object_name:
            _type: AttributeName
            content: isEmbellishment
          message: oneLiner is too long. (91 chars).
          severity: Warning
          constraint_name: ''
        is_embellishment: false
        prefix: '-'
        name: '[circular reference to AttributeName]'
        parenthetical: Boolean
        data_type_clause:
          _type: DataTypeClause
          data_type:
            _type: BaseDataType
            class_name:
              _type: ClassName
              content: Boolean
            as_value_type:
              _type: AsValue
              t_value: false
          is_optional_lit:
            _type: IsOptional
            t_value: false
        default:
          _type: Default
          one_liner:
            _type: OneLiner
            content: ' false

              '
          diagnostics:
          - _type: Diagnostic
            object_type: Default
            object_name: anon
            message: No value for code
            severity: Error
            constraint_name: ''
          is_embellishment: false
          english:
            _type: Paragraph
            content: ''
  - _type: Class
    one_liner:
      _type: OneLiner
      content: a kind of note, or aside, used to call attention to additional information
        about some Component.
    annotations:
    - _type: Annotation
      label: Note
      content: Each LDM declares a set of Annotation Types, with defined labels, emojis,
        and clearly documented purposes. These are *recognized* or *registered* Annotation
        Types.
      emoji: ''
    diagnostics:
    - _type: Diagnostic
      object_type: Class
      object_name:
        _type: ClassName
        content: AnnotationType
      message: oneLiner is too long. (96 chars).
      severity: Warning
      constraint_name: ''
    is_embellishment: false
    prefix: _
    name: '[circular reference to ClassName]'
    parenthetical: ''
    based_on:
    - _type: ClassName
      content: LiterateDataModel
    is_value_type: false
    attributes:
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: an emoji
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: emoji
      parenthetical: Emoji
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: Emoji
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: an emoji
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: emojiName
      parenthetical: String
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: String
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: the Unicode for the emoji
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: emojiUnicode
      parenthetical: Unicode
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: Unicode
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: A short label to indicate the purpose of the annotation _
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: label
      parenthetical: CamelName
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: CamelName
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: the plural form of the label
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: plural
      parenthetical: '*UpperCamel*'
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: UpperCamel
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
      default:
        _type: Default
        one_liner:
          _type: OneLiner
          content: ' based on label

            '
        diagnostics:
        - _type: Diagnostic
          object_type: Default
          object_name: anon
          message: No value for code
          severity: Error
          constraint_name: ''
        is_embellishment: false
        english:
          _type: Paragraph
          content: ''
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: the intended reason for the annotation.
      diagnostics:
      - _type: Diagnostic
        object_type: Attribute
        object_name:
          _type: AttributeName
          content: purpose
        message: No value for data_type_clause
        severity: Error
        constraint_name: ''
      is_embellishment: false
      prefix: '-'
      name: '[circular reference to AttributeName]'
      parenthetical: ''
  - _type: Class
    is_embellishment: false
    prefix: _
    name:
      _type: ClassName
      content: ValueTypeAnnotationANoteOrCommentAssociatedWithAModelElement
    parenthetical: ''
    based_on:
    - _type: ClassName
      content: Component
    is_value_type: false
    attributes:
    - _type: Attribute
      annotations:
      - _type: Annotation
        label: Note
        content: An Annotation is considered to *recognized* if the label is associated
          with an Annotation Type. otherwise it is *ad hoc*.
        emoji: ''
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: annotationType
      parenthetical: optional Annotation Type
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: AnnotationType
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: A short label to indicate the purpose of the annotation _
      elaboration:
      - _type: Paragraph
        content: 'But any short label is valid.

          '
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: label
      parenthetical: CamelName
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: CamelName
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
      default:
        _type: Default
        one_liner:
          _type: OneLiner
          content: ' from annotationType

            '
        diagnostics:
        - _type: Diagnostic
          object_type: Default
          object_name: anon
          message: No value for code
          severity: Error
          constraint_name: ''
        is_embellishment: false
        english:
          _type: Paragraph
          content: ''
    - _type: Attribute
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: emoji
      parenthetical: optional Emoji
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: Emoji
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
      default:
        _type: Default
        one_liner:
          _type: OneLiner
          content: ' from annotation type

            '
        diagnostics:
        - _type: Diagnostic
          object_type: Default
          object_name: anon
          message: No value for code
          severity: Error
          constraint_name: ''
        is_embellishment: false
        english:
          _type: Paragraph
          content: ''
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: The content or body of the annotation
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: content
      parenthetical: '*RichText*'
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: RichText
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
    attribute_sections:
    - _type: AttributeSection
      is_embellishment: false
      prefix: __
      name:
        _type: AttributeSectionName
        content: For Machinery
      parenthetical: ''
      is_optional:
        _type: IsOptional
        t_value: false
      attributes:
      - _type: Attribute
        one_liner:
          _type: OneLiner
          content: Indicates whether this annotation is an embellishment added during
            post-parsing processing _
        annotations:
        - _type: Annotation
          label: Note
          content: This attribute is set to true for annotations that are automatically
            generated or added during the fleshing out, review, or rendering processes,
            such as suggestions, issues, or diagnostic messages. It helps distinguish
            embellishment annotations from the annotations defined in the original
            LDM source.
          emoji: ''
        diagnostics:
        - _type: Diagnostic
          object_type: Attribute
          object_name:
            _type: AttributeName
            content: isEmbellishment
          message: oneLiner is too long. (92 chars).
          severity: Warning
          constraint_name: ''
        is_embellishment: false
        prefix: '-'
        name: '[circular reference to AttributeName]'
        parenthetical: Boolean
        data_type_clause:
          _type: DataTypeClause
          data_type:
            _type: BaseDataType
            class_name:
              _type: ClassName
              content: Boolean
            as_value_type:
              _type: AsValue
              t_value: false
          is_optional_lit:
            _type: IsOptional
            t_value: false
        default:
          _type: Default
          one_liner:
            _type: OneLiner
            content: ' false

              '
          diagnostics:
          - _type: Diagnostic
            object_type: Default
            object_name: anon
            message: No value for code
            severity: Error
            constraint_name: ''
          is_embellishment: false
          english:
            _type: Paragraph
            content: ''
- _type: SubjectB
  is_embellishment: false
  prefix: '##'
  name:
    _type: SubjectName
    content: The Model and its Subjects
  parenthetical: ''
  classes:
  - _type: Class
    one_liner:
      _type: OneLiner
      content: 'A representation of a domain''s entities, attributes, and relationships,

        along with explanatory text and examples'
    diagnostics:
    - _type: Diagnostic
      object_type: Class
      object_name:
        _type: ClassName
        content: LiterateDataModel
      message: oneLiner is too long. (112 chars).
      severity: Warning
      constraint_name: ''
    is_embellishment: false
    prefix: _
    name: '[circular reference to ClassName]'
    parenthetical: ''
    abbreviation: LDM
    plural: ' LiterateDataModels

      '
    subtype_of:
    - (ClassName(content='Component', _type='ClassName'), SubtypingName(content='subtypes',
      _type='SubtypingName'))
    is_value_type: false
    attributes:
    - _type: Attribute
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: name
      parenthetical: UpperCamel
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: UpperCamel
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: 'list of all classes in the model, as ordered in the

          definition of the model.'
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: allSubjects
      parenthetical: List of Classes
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: ListDataType
          element_type:
            _type: BaseDataType
            class_name:
              _type: ClassName
              content: Classes
            as_value_type:
              _type: AsValue
              t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
      derivation:
        _type: Derivation
        one_liner:
          _type: OneLiner
          content: ' gathering s.allSubjects over s in subjectAreas

            '
        diagnostics:
        - _type: Diagnostic
          object_type: Derivation
          object_name: anon
          message: No value for code
          severity: Error
          constraint_name: ''
        is_embellishment: false
        english:
          _type: Paragraph
          content: ''
      constraints:
      - _type: Constraint
        one_liner:
        - _type: OneLiner
          content: ' Subject names must be unique across the model.

            '
        diagnostics:
        - _type: Diagnostic
          object_type: Constraint
          object_name: anon
          message: No value for code
          severity: Error
          constraint_name: ''
        is_embellishment: false
        english:
          _type: Paragraph
          content: ''
        message:
          _type: Paragraph
          content: ''
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: list of all classes in the model, as ordered in the definition of
          the model.
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: allClasses
      parenthetical: List of Classes
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: ListDataType
          element_type:
            _type: BaseDataType
            class_name:
              _type: ClassName
              content: Classes
            as_value_type:
              _type: AsValue
              t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
      derivation:
        _type: Derivation
        one_liner:
          _type: OneLiner
          content: ' gathering s.allClasses over s in allSubjects.

            '
        diagnostics:
        - _type: Diagnostic
          object_type: Derivation
          object_name: anon
          message: No value for code
          severity: Error
          constraint_name: ''
        is_embellishment: false
        english:
          _type: Paragraph
          content: ''
      constraints:
      - _type: Constraint
        one_liner:
        - _type: OneLiner
          content: ' Class names must be unique across the model.

            '
        diagnostics:
        - _type: Diagnostic
          object_type: Constraint
          object_name: anon
          message: No value for code
          severity: Error
          constraint_name: ''
        is_embellishment: false
        english:
          _type: Paragraph
          content: ''
        message:
          _type: Paragraph
          content: ''
    attribute_sections:
    - _type: AttributeSection
      is_embellishment: false
      prefix: __
      name:
        _type: AttributeSectionName
        content: Modeling Configuration
      parenthetical: ''
      is_optional:
        _type: IsOptional
        t_value: false
      attributes:
      - _type: Attribute
        is_embellishment: false
        prefix: '-'
        name:
          _type: AttributeName
          content: annotationTypes
        parenthetical: List of AnnotationTypes
        data_type_clause:
          _type: DataTypeClause
          data_type:
            _type: ListDataType
            element_type:
              _type: BaseDataType
              class_name:
                _type: ClassName
                content: AnnotationTypes
              as_value_type:
                _type: AsValue
                t_value: false
          is_optional_lit:
            _type: IsOptional
            t_value: false
      - _type: Attribute
        one_liner:
          _type: OneLiner
          content: the recommended lanquage  for expressing derivation, defaults,
            and constraints
        is_embellishment: false
        prefix: '-'
        name:
          _type: AttributeName
          content: preferredCodingLanguage
        parenthetical: Coding Language
        data_type_clause:
          _type: DataTypeClause
          data_type:
            _type: BaseDataType
            class_name:
              _type: ClassName
              content: CodingLanguage
            as_value_type:
              _type: AsValue
              t_value: false
          is_optional_lit:
            _type: IsOptional
            t_value: false
        default:
          _type: Default
          one_liner:
            _type: OneLiner
            content: ' OCL

              '
          diagnostics:
          - _type: Diagnostic
            object_type: Default
            object_name: anon
            message: No value for code
            severity: Error
            constraint_name: ''
          is_embellishment: false
          english:
            _type: Paragraph
            content: ''
      - _type: Attribute
        is_embellishment: false
        prefix: '-'
        name:
          _type: AttributeName
          content: alternateCodingLanguages
        parenthetical: optional List of Coding Languages
        data_type_clause:
          _type: DataTypeClause
          data_type:
            _type: ListDataType
            element_type:
              _type: BaseDataType
              class_name:
                _type: ClassName
                content: CodingLanguages
              as_value_type:
                _type: AsValue
                t_value: false
          is_optional_lit:
            _type: IsOptional
            t_value: false
      - _type: Attribute
        one_liner:
          _type: OneLiner
          content: the recommended lanquage  for expressing derivation, defaults,
            and constraints
        is_embellishment: false
        prefix: '-'
        name:
          _type: AttributeName
          content: preferredTemplateLanguage
        parenthetical: Template Language
        data_type_clause:
          _type: DataTypeClause
          data_type:
            _type: BaseDataType
            class_name:
              _type: ClassName
              content: TemplateLanguage
            as_value_type:
              _type: AsValue
              t_value: false
          is_optional_lit:
            _type: IsOptional
            t_value: false
        default:
          _type: Default
          one_liner:
            _type: OneLiner
            content: ' Handlebars

              '
          diagnostics:
          - _type: Diagnostic
            object_type: Default
            object_name: anon
            message: No value for code
            severity: Error
            constraint_name: ''
          is_embellishment: false
          english:
            _type: Paragraph
            content: ''
      - _type: Attribute
        is_embellishment: false
        prefix: '-'
        name:
          _type: AttributeName
          content: alternateTemplateLanguages
        parenthetical: optional List of Template Languages
        data_type_clause:
          _type: DataTypeClause
          data_type:
            _type: ListDataType
            element_type:
              _type: BaseDataType
              class_name:
                _type: ClassName
                content: TemplateLanguages
              as_value_type:
                _type: AsValue
                t_value: false
          is_optional_lit:
            _type: IsOptional
            t_value: false
      - _type: Attribute
        one_liner:
          _type: OneLiner
          content: A list of functions that require sophisticated AI-powered implementation
            *
        is_embellishment: false
        prefix: '-'
        name:
          _type: AttributeName
          content: aiFunctions
        parenthetical: List of String
        data_type_clause:
          _type: DataTypeClause
          data_type:
            _type: ListDataType
            element_type:
              _type: BaseDataType
              class_name:
                _type: ClassName
                content: String
              as_value_type:
                _type: AsValue
                t_value: false
          is_optional_lit:
            _type: IsOptional
            t_value: false
        derivation:
          _type: Derivation
          one_liner:
            _type: OneLiner
            content: ' [''aiEnglishPlural()'']

              '
          diagnostics:
          - _type: Diagnostic
            object_type: Derivation
            object_name: anon
            message: No value for code
            severity: Error
            constraint_name: ''
          is_embellishment: false
          english:
            _type: Paragraph
            content: ''
  - _type: Class
    elaboration:
    - _type: Paragraph
      content: "Subjects are the chapters an sections of the model.\n \n+ A subject\
        \ need not contain any Classes if it\u2019s just expository.\n"
    is_embellishment: false
    prefix: _
    name:
      _type: ClassName
      content: SubjectASpecificTopicOrThemeWithinTheModel
    parenthetical: ''
    plural: ' Subjects

      '
    subtype_of:
    - (ClassName(content='Component', _type='ClassName'), SubtypingName(content='subtypes',
      _type='SubtypingName'))
    dependent_of:
    - _type: ClassName
      content: LiterateDataModel
    is_value_type: false
    attributes:
    - _type: Attribute
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: name
      parenthetical: UpperCamel
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: UpperCamel
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: The parent subject, if any, under which this subject is nested _
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: parentSubject
      parenthetical: optional Subject
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: Subject
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: The major classes related to this subject, in the order in which
          they should be presented _
      annotations:
      - _type: Annotation
        label: Issue
        content: define chapter, section, subsection as levels?
        emoji: ''
      diagnostics:
      - _type: Diagnostic
        object_type: Attribute
        object_name:
          _type: AttributeName
          content: classes
        message: oneLiner is too long. (91 chars).
        severity: Warning
        constraint_name: ''
      is_embellishment: false
      prefix: '-'
      name: '[circular reference to AttributeName]'
      parenthetical: ListOf Classes
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: ListDataType
          element_type:
            _type: BaseDataType
            class_name:
              _type: ClassName
              content: Classes
            as_value_type:
              _type: AsValue
              t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
    - _type: Attribute
      diagnostics:
      - _type: Diagnostic
        object_type: Attribute
        object_name:
          _type: AttributeName
          content: eachClassShouldBeFollowedFirstByTheClassesThatAreDependentOnItAndThen
        message: No value for data_type_clause
        severity: Error
        constraint_name: ''
      is_embellishment: false
      prefix: '-'
      name: '[circular reference to AttributeName]'
      parenthetical: ''
    - _type: Attribute
      diagnostics:
      - _type: Diagnostic
        object_type: Attribute
        object_name:
          _type: AttributeName
          content: byItsSubtypeClasses
        message: No value for data_type_clause
        severity: Error
        constraint_name: ''
      is_embellishment: false
      prefix: '-'
      name: '[circular reference to AttributeName]'
      parenthetical: ''
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: Any child subjects nested under this subject, in the order in which
          they should be presented _
      elaboration:
      - _type: Paragraph
        content: '***DSL***:  the Classes within a Subject are always displayed before
          the childSubjects.

          '
      diagnostics:
      - _type: Diagnostic
        object_type: Attribute
        object_name:
          _type: AttributeName
          content: childSubjects
        message: oneLiner is too long. (94 chars).
        severity: Warning
        constraint_name: ''
      is_embellishment: false
      prefix: '-'
      name: '[circular reference to AttributeName]'
      parenthetical: ListOf Subjects
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: ListDataType
          element_type:
            _type: BaseDataType
            class_name:
              _type: ClassName
              content: Subjects
            as_value_type:
              _type: AsValue
              t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
      inverse:
        _type: AttributeReference
        class_name:
          _type: ClassName
          content: Subject
        attribute_name:
          _type: AttributeName
          content: parentSubject
  - _type: Class
    is_embellishment: false
    prefix: _
    name:
      _type: ClassName
      content: SubjectAreaAMainTopicOrAreaOfFocusWithinTheModelContainingRelatedSubjectsAndClasses
    parenthetical: ''
    plural: ' SubjectAreas

      '
    subtype_of:
    - (ClassName(content='Subject', _type='ClassName'), SubtypingName(content='subtypes',
      _type='SubtypingName'))
    is_value_type: false
    where: ' parentSubject is absent

      '
  subjects:
  - _type: SubjectC
    is_embellishment: false
    prefix: '###'
    name:
      _type: SubjectName
      content: Classes
    parenthetical: ''
    classes:
    - _type: Class
      one_liner:
        _type: OneLiner
        content: A key entity or object type in the model, often corresponding to
          a real-world concept
      is_embellishment: false
      prefix: _
      name:
        _type: ClassName
        content: Class
      parenthetical: ''
      plural: ' Classes

        '
      subtype_of:
      - (ClassName(content='Component', _type='ClassName'), SubtypingName(content='subtypes',
        _type='SubtypingName'))
      is_value_type: false
      constraints:
      - _type: Constraint
        one_liner:
        - _type: OneLiner
          content: ' Within each Class, attribute names must be unique.

            '
        is_embellishment: false
        english:
          _type: Paragraph
          content: ''
        message:
          _type: Paragraph
          content: ''
      attributes:
      - _type: Attribute
        one_liner:
          _type: OneLiner
          content: the normal English plural form of the name of the Class
        elaboration:
        - _type: Paragraph
          content: "Might be Books for the Book class or other regular plurals.\n\
            \ \n+ But also might be People for Person.\n"
        annotations:
        - _type: Annotation
          label: Note
          content: When inputting a model, you will rarely need to specify the plural
            form. The input program will just look it up.
          emoji: ''
          elaboration:
          - _type: Paragraph
            content: 'The exception is when a common noun has two plural forms, like
              People and Persons. But this is unusual.

              '
        is_embellishment: false
        prefix: '-'
        name:
          _type: AttributeName
          content: pluralForm
        parenthetical: UpperName
        data_type_clause:
          _type: DataTypeClause
          data_type:
            _type: BaseDataType
            class_name:
              _type: ClassName
              content: UpperName
            as_value_type:
              _type: AsValue
              t_value: false
          is_optional_lit:
            _type: IsOptional
            t_value: false
        default:
          _type: Default
          one_liner:
            _type: OneLiner
            content: ' the regular plural, formed by adding "s" or "es".

              '
          is_embellishment: false
          english:
            _type: Paragraph
            content: ''
      - _type: Attribute
        one_liner:
          _type: OneLiner
          content: the Class or Classes on which this class is dependent
        elaboration:
        - _type: Paragraph
          content: 'This is solely based on **Existence Dependency**. A true dependent
            entity cannot logically exist without the related parent entity. For instance,
            an Order Item cannot exist without an Order. If removing the parent entity
            logically implies removing the dependent entity, then it is a dependent
            entity.

            '
        annotations:
        - _type: Annotation
          label: Note
          content: that basedOn and dependentOf are being used synonymousle in this
            metamodel.
          emoji: ''
        is_embellishment: false
        prefix: '-'
        name:
          _type: AttributeName
          content: basedOn
        parenthetical: SetOf Classes
        data_type_clause:
          _type: DataTypeClause
          data_type:
            _type: SetDataType
            element_type:
              _type: BaseDataType
              class_name:
                _type: ClassName
                content: Classes
              as_value_type:
                _type: AsValue
                t_value: false
          is_optional_lit:
            _type: IsOptional
            t_value: false
      - _type: Attribute
        one_liner:
          _type: OneLiner
          content: The parent class
        is_embellishment: false
        prefix: '-'
        name:
          _type: AttributeName
          content: supertypes
        parenthetical: es
        data_type_clause:
          _type: DataTypeClause
          data_type:
            _type: BaseDataType
            class_name:
              _type: ClassName
              content: Es
            as_value_type:
              _type: AsValue
              t_value: false
          is_optional_lit:
            _type: IsOptional
            t_value: false
      - _type: Attribute
        one_liner:
          _type: OneLiner
          content: the criteria, or dimensions, by which the class can be divided
            into subtypes
        annotations:
        - _type: Annotation
          label: Example
          content: in a library model, the `Book` class could have subtypings based
            on genre (e.g., Fiction, Non-fiction), format (e.g., Hardcover, Paperback),
            or subject (e.g., Science, History).
          emoji: ''
        is_embellishment: false
        prefix: '-'
        name:
          _type: AttributeName
          content: subtypings
        parenthetical: list of Subtypings
        data_type_clause:
          _type: DataTypeClause
          data_type:
            _type: ListDataType
            element_type:
              _type: BaseDataType
              class_name:
                _type: ClassName
                content: Subtypings
              as_value_type:
                _type: AsValue
                t_value: false
          is_optional_lit:
            _type: IsOptional
            t_value: false
      - _type: Attribute
        one_liner:
          _type: OneLiner
          content: "Any subtypes or specializations of this class based on it\u2019\
            s subtypings. _"
        annotations:
        - _type: Annotation
          label: Example
          content: For instance, using the `Book` example, the subtypes could include
            `FictionBook`, `Non-fictionBook`, `HardcoverBook`, `PaperbackBook`, `ScienceBook`,
            and `HistoryBook`.
          emoji: ''
        is_embellishment: false
        prefix: '-'
        name:
          _type: AttributeName
          content: subtypes
        parenthetical: ListOf Classes
        data_type_clause:
          _type: DataTypeClause
          data_type:
            _type: ListDataType
            element_type:
              _type: BaseDataType
              class_name:
                _type: ClassName
                content: Classes
              as_value_type:
                _type: AsValue
                t_value: false
          is_optional_lit:
            _type: IsOptional
            t_value: false
      - _type: Attribute
        one_liner:
          _type: OneLiner
          content: The attributes or properties of the class, in the order in which
            they should be presented _
        is_embellishment: false
        prefix: '-'
        name:
          _type: AttributeName
          content: attributes
        parenthetical: ListOf Attributes
        data_type_clause:
          _type: DataTypeClause
          data_type:
            _type: ListDataType
            element_type:
              _type: BaseDataType
              class_name:
                _type: ClassName
                content: Attributes
              as_value_type:
                _type: AsValue
                t_value: false
          is_optional_lit:
            _type: IsOptional
            t_value: false
      - _type: Attribute
        one_liner:
          _type: OneLiner
          content: additional attributes or properties of the class, grouped for clarity
            and elaboration.  _
        is_embellishment: false
        prefix: '-'
        name:
          _type: AttributeName
          content: attributeSections
        parenthetical: ListOf AttributeSections
        data_type_clause:
          _type: DataTypeClause
          data_type:
            _type: ListDataType
            element_type:
              _type: BaseDataType
              class_name:
                _type: ClassName
                content: AttributeSections
              as_value_type:
                _type: AsValue
                t_value: false
          is_optional_lit:
            _type: IsOptional
            t_value: false
      - _type: Attribute
        one_liner:
          _type: OneLiner
          content: Any constraints, rules, or validations specific to this class _
        annotations:
        - _type: Annotation
          label: Note
          content: Constraints may be expressed on either the Class or the Attribute.
            Always?
          emoji: ''
        is_embellishment: false
        prefix: '-'
        name:
          _type: AttributeName
          content: constraints
        parenthetical: ListOf Constraints
        data_type_clause:
          _type: DataTypeClause
          data_type:
            _type: ListDataType
            element_type:
              _type: BaseDataType
              class_name:
                _type: ClassName
                content: Constraints
              as_value_type:
                _type: AsValue
                t_value: false
          is_optional_lit:
            _type: IsOptional
            t_value: false
      - _type: Attribute
        one_liner:
          _type: OneLiner
          content: Any behaviors or operations associated with this class _
        is_embellishment: false
        prefix: '-'
        name:
          _type: AttributeName
          content: methods
        parenthetical: ListOf Methods
        data_type_clause:
          _type: DataTypeClause
          data_type:
            _type: ListDataType
            element_type:
              _type: BaseDataType
              class_name:
                _type: ClassName
                content: Methods
              as_value_type:
                _type: AsValue
                t_value: false
          is_optional_lit:
            _type: IsOptional
            t_value: false
      attribute_sections:
      - _type: AttributeSection
        is_embellishment: false
        prefix: __
        name:
          _type: AttributeSectionName
          content: Implied Attributes
        parenthetical: ''
        is_optional:
          _type: IsOptional
          t_value: false
        attributes:
        - _type: Attribute
          one_liner:
            _type: OneLiner
            content: the Classes which are basedOn this Class
          is_embellishment: false
          prefix: '-'
          name:
            _type: AttributeName
            content: dependents
          parenthetical: optional SetOf Classes
          data_type_clause:
            _type: DataTypeClause
            data_type:
              _type: SetDataType
              element_type:
                _type: BaseDataType
                class_name:
                  _type: ClassName
                  content: Classes
                as_value_type:
                  _type: AsValue
                  t_value: false
            is_optional_lit:
              _type: IsOptional
              t_value: false
          inverse:
            _type: AttributeReference
            class_name:
              _type: ClassName
              content: Class
            attribute_name:
              _type: AttributeName
              content: basedOn
        - _type: Attribute
          is_embellishment: false
          prefix: '-'
          name:
            _type: AttributeName
            content: uniqueKeys
          parenthetical: optional Set of UniqueKeys
          data_type_clause:
            _type: DataTypeClause
            data_type:
              _type: SetDataType
              element_type:
                _type: BaseDataType
                class_name:
                  _type: ClassName
                  content: UniqueKeys
                as_value_type:
                  _type: AsValue
                  t_value: false
            is_optional_lit:
              _type: IsOptional
              t_value: false
          inverse:
            _type: AttributeReference
            class_name:
              _type: ClassName
              content: UniqueKey
            attribute_name:
              _type: AttributeName
              content: basedOn
    - _type: Class
      one_liner:
        _type: OneLiner
        content: a way in which subtypes of a Class may be classified
      is_embellishment: false
      prefix: _
      name:
        _type: ClassName
        content: Subtyping
      parenthetical: Subtype of Component
      dependent_of:
      - _type: ClassName
        content: Class
      is_value_type: false
      attributes:
      - _type: Attribute
        is_embellishment: false
        prefix: '-'
        name:
          _type: AttributeName
          content: name
        parenthetical: Upper Name
        data_type_clause:
          _type: DataTypeClause
          data_type:
            _type: BaseDataType
            class_name:
              _type: ClassName
              content: UpperName
            as_value_type:
              _type: AsValue
              t_value: false
          is_optional_lit:
            _type: IsOptional
            t_value: false
      - _type: Attribute
        is_embellishment: false
        prefix: '-'
        name:
          _type: AttributeName
          content: isExclusive
        parenthetical: Boolean
        data_type_clause:
          _type: DataTypeClause
          data_type:
            _type: BaseDataType
            class_name:
              _type: ClassName
              content: Boolean
            as_value_type:
              _type: AsValue
              t_value: false
          is_optional_lit:
            _type: IsOptional
            t_value: false
        default:
          _type: Default
          one_liner:
            _type: OneLiner
            content: ' true

              '
          is_embellishment: false
          english:
            _type: Paragraph
            content: ''
      - _type: Attribute
        is_embellishment: false
        prefix: '-'
        name:
          _type: AttributeName
          content: isExhaustive
        parenthetical: Boolean
        data_type_clause:
          _type: DataTypeClause
          data_type:
            _type: BaseDataType
            class_name:
              _type: ClassName
              content: Boolean
            as_value_type:
              _type: AsValue
              t_value: false
          is_optional_lit:
            _type: IsOptional
            t_value: false
        default:
          _type: Default
          one_liner:
            _type: OneLiner
            content: ' true

              '
          is_embellishment: false
          english:
            _type: Paragraph
            content: ''
      - _type: Attribute
        elaboration:
        - _type: Paragraph
          content: "***DSL***:  Shown in the DSL as\n \n+ > Subbtypes: byBrand - Brand1,\
            \ Brand2,... (non exclusive, exhaustive)\n \n+ on the super class. And\
            \ as\n \n+ > Subtype of: SuperClass byBrand\n \n+ on the subclass.\n"
        annotations:
        - _type: Annotation
          label: Note
          content: every class can have an unnamed subtyping.
          emoji: ''
        is_embellishment: false
        prefix: '-'
        name:
          _type: AttributeName
          content: classes
        parenthetical: List of Classes
        data_type_clause:
          _type: DataTypeClause
          data_type:
            _type: ListDataType
            element_type:
              _type: BaseDataType
              class_name:
                _type: ClassName
                content: Classes
              as_value_type:
                _type: AsValue
                t_value: false
          is_optional_lit:
            _type: IsOptional
            t_value: false
    - _type: Class
      is_embellishment: false
      prefix: _
      name:
        _type: ClassName
        content: ValueType
      parenthetical: ''
      subtype_of:
      - (ClassName(content='Class', _type='ClassName'), SubtypingName(content='subtypes',
        _type='SubtypingName'))
      is_value_type: false
    - _type: Class
      is_embellishment: false
      prefix: _
      name:
        _type: ClassName
        content: ReferenceType
      parenthetical: ''
      subtype_of:
      - (ClassName(content='Class', _type='ClassName'), SubtypingName(content='subtypes',
        _type='SubtypingName'))
      is_value_type: false
    - _type: Class
      annotations:
      - _type: Annotation
        label: Note
        content: 'Often, a CodeType will be assigned to just one attribute in the
          model.  In such cases, there''s no need to declare a new Code Type and invent
          a name for it.  Instead:'
        emoji: ''
      is_embellishment: false
      prefix: _
      name:
        _type: ClassName
        content: CodeTypeADataTypeOrEnumerationUsedInTheModel
      parenthetical: ''
      subtype_of:
      - (ClassName(content='ValueType', _type='ClassName'), SubtypingName(content='subtypes',
        _type='SubtypingName'))
      is_value_type: false
      attributes:
      - _type: Attribute
        is_embellishment: false
        prefix: '-'
        name:
          _type: AttributeName
          content: listTheCodeValuesAsABullettedListInsideTheDescriptionOfTheAttributeInTheFormCodeDescription
        parenthetical: ''
      - _type: Attribute
        is_embellishment: false
        prefix: '-'
        name:
          _type: AttributeName
          content: aCodeTypeWillBeCreatedWithTheNameClassAttributeCodeAndTheCodeValuesListedThatCodeTypeWillBeMarkedAsIsCaptive
        parenthetical: ''
      - _type: Attribute
        one_liner:
          _type: OneLiner
          content: the code type was implied by use in an attribute and is only used
            for that attribute
        is_embellishment: false
        prefix: '-'
        name:
          _type: AttributeName
          content: isCaptive
        parenthetical: Boolean
        data_type_clause:
          _type: DataTypeClause
          data_type:
            _type: BaseDataType
            class_name:
              _type: ClassName
              content: Boolean
            as_value_type:
              _type: AsValue
              t_value: false
          is_optional_lit:
            _type: IsOptional
            t_value: false
    - _type: Class
      annotations:
      - _type: Annotation
        label: A possible value for an enumerated data class  DependentOf
        content: CodeType
        emoji: ''
      is_embellishment: false
      prefix: _
      name:
        _type: ClassName
        content: CodeValue
      parenthetical: ''
      is_value_type: false
      attributes:
      - _type: Attribute
        one_liner:
          _type: OneLiner
          content: A short code or abbreviationi for the value _
        is_embellishment: false
        prefix: '-'
        name:
          _type: AttributeName
          content: code
        parenthetical: NameString
        data_type_clause:
          _type: DataTypeClause
          data_type:
            _type: BaseDataType
            class_name:
              _type: ClassName
              content: NameString
            as_value_type:
              _type: AsValue
              t_value: false
          is_optional_lit:
            _type: IsOptional
            t_value: false
      - _type: Attribute
        one_liner:
          _type: OneLiner
          content: an explanation of what the code means
        is_embellishment: false
        prefix: '-'
        name:
          _type: AttributeName
          content: description
        parenthetical: '*RichText*'
        data_type_clause:
          _type: DataTypeClause
          data_type:
            _type: BaseDataType
            class_name:
              _type: ClassName
              content: RichText
            as_value_type:
              _type: AsValue
              t_value: false
          is_optional_lit:
            _type: IsOptional
            t_value: false
    - _type: Class
      one_liner:
        _type: OneLiner
        content: a list of attributes of a class
      is_embellishment: false
      prefix: _
      name:
        _type: ClassName
        content: Key
      parenthetical: ''
      subtype_of:
      - (ClassName(content='Component', _type='ClassName'), SubtypingName(content='subtypes',
        _type='SubtypingName'))
      dependent_of:
      - _type: ClassName
        content: Class
      is_value_type: false
      attributes:
      - _type: Attribute
        one_liner:
          _type: OneLiner
          content: the attributes of the base Class.
        annotations:
        - _type: Annotation
          label: Issue
          content: need ascending descending to support index keys or ordering keys.
          emoji: ''
        is_embellishment: false
        prefix: '-'
        name:
          _type: AttributeName
          content: keyAttributes
        parenthetical: List of Attributes
        data_type_clause:
          _type: DataTypeClause
          data_type:
            _type: ListDataType
            element_type:
              _type: BaseDataType
              class_name:
                _type: ClassName
                content: Attributes
              as_value_type:
                _type: AsValue
                t_value: false
          is_optional_lit:
            _type: IsOptional
            t_value: false
        constraints:
        - _type: Constraint
          one_liner:
          - _type: OneLiner
            content: ' each attribute must be a direct or inherited of the base class.

              '
          is_embellishment: false
          english:
            _type: Paragraph
            content: ''
          message:
            _type: Paragraph
            content: ''
        - _type: Constraint
          one_liner:
          - _type: OneLiner
            content: " no repetitions allowed in keyAttributes\n> \U0001F44D **Issue**:\
              \ introduce PureLists?"
          is_embellishment: false
          english:
            _type: Paragraph
            content: ''
          message:
            _type: Paragraph
            content: ''
    - _type: Class
      one_liner:
        _type: OneLiner
        content: a list of attributes on which instances of the base class may be
          keyed.
      annotations:
      - _type: Annotation
        label: Note
        content: order unimportant for Unique Keys.
        emoji: ''
      is_embellishment: false
      prefix: _
      name:
        _type: ClassName
        content: UniqueKey
      parenthetical: ''
      subtype_of:
      - (ClassName(content='Key', _type='ClassName'), SubtypingName(content='subtypes',
        _type='SubtypingName'))
      is_value_type: false
- _type: SubjectB
  is_embellishment: false
  prefix: '##'
  name:
    _type: SubjectName
    content: Attributes
  parenthetical: ''
  classes:
  - _type: Class
    one_liner:
      _type: OneLiner
      content: a group of attributes for a class that merit a shared explanation.
    is_embellishment: false
    prefix: _
    name:
      _type: ClassName
      content: AttributeSection
    parenthetical: ''
    subtype_of:
    - (ClassName(content='Component', _type='ClassName'), SubtypingName(content='subtypes',
      _type='SubtypingName'))
    based_on:
    - _type: ClassName
      content: Class
    is_value_type: false
    attributes:
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: whether the attributes in this section, taken together, are optional.
      elaboration:
      - _type: Paragraph
        content: "If the Attribute Section is required,then each Attribute within\
          \ the sectional is optional ot required, depending on how it is marked.\n\
          \ \n+ &nbsp;\n \n+ But if the Arrribute Section is optional each attribute\
          \ in the section is only required if any attribute in the section is ptresent.\n"
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: isOptional
      parenthetical: Boolean
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: Boolean
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
  - _type: Class
    is_embellishment: false
    prefix: _
    name:
      _type: ClassName
      content: AttributeAPropertyOrCharacteristicOfAClass
    parenthetical: ''
    plural: ' Attributes

      '
    subtype_of:
    - (ClassName(content='Component', _type='ClassName'), SubtypingName(content='subtypes',
      _type='SubtypingName'))
    based_on:
    - _type: ClassName
      content: AttributeSection
    is_value_type: false
    attributes:
    - _type: Attribute
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: name
      parenthetical: Lower Camel
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: LowerCamel
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
      overrides:
        _type: AttributeReference
        class_name:
          _type: ClassName
          content: CamelName
        attribute_name:
          _type: AttributeName
          content: ''
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: The kind of object to which the attribute refers.  _
      elaboration:
      - _type: Paragraph
        content: 'But,

          '
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: dataType
      parenthetical: DataType
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: DataType
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
    - _type: Attribute
      diagnostics:
      - _type: Diagnostic
        object_type: Attribute
        object_name:
          _type: AttributeName
          content: listOfEditions
        message: No value for data_type_clause
        severity: Error
        constraint_name: ''
      is_embellishment: false
      prefix: '-'
      name: '[circular reference to AttributeName]'
      parenthetical: ''
    - _type: Attribute
      diagnostics:
      - _type: Diagnostic
        object_type: Attribute
        object_name:
          _type: AttributeName
          content: setOfEdition
        message: No value for data_type_clause
        severity: Error
        constraint_name: ''
      is_embellishment: false
      prefix: '-'
      name: '[circular reference to AttributeName]'
      parenthetical: ''
    - _type: Attribute
      annotations:
      - _type: Annotation
        label: See
        content: the section below on Data Type Specifiers.
        emoji: ''
      diagnostics:
      - _type: Diagnostic
        object_type: Attribute
        object_name:
          _type: AttributeName
          content: andMoreComplicatedCases
        message: No value for data_type_clause
        severity: Error
        constraint_name: ''
      is_embellishment: false
      prefix: '-'
      name: '[circular reference to AttributeName]'
      parenthetical: ''
    attribute_sections:
    - _type: AttributeSection
      is_embellishment: false
      prefix: __
      name:
        _type: AttributeSectionName
        content: Cardinalities
      parenthetical: ''
      is_optional:
        _type: IsOptional
        t_value: false
      attributes:
      - _type: Attribute
        one_liner:
          _type: OneLiner
          content: Indicates whether the attribute must have a value for every instance
            of the class _
        is_embellishment: false
        prefix: '-'
        name:
          _type: AttributeName
          content: isOptional
        parenthetical: Boolean
        data_type_clause:
          _type: DataTypeClause
          data_type:
            _type: BaseDataType
            class_name:
              _type: ClassName
              content: Boolean
            as_value_type:
              _type: AsValue
              t_value: false
          is_optional_lit:
            _type: IsOptional
            t_value: false
        default:
          _type: Default
          one_liner:
            _type: OneLiner
            content: '*** False

              '
          diagnostics:
          - _type: Diagnostic
            object_type: Default
            object_name: anon
            message: No value for code
            severity: Error
            constraint_name: ''
          is_embellishment: false
          english:
            _type: Paragraph
            content: ''
      - _type: Attribute
        one_liner:
          _type: OneLiner
          content: The cardinality of the relationship represented by the attribute
            _
        annotations:
        - _type: Annotation
          label: For example
          content: ''
          emoji: ''
        is_embellishment: false
        prefix: '-'
        name:
          _type: AttributeName
          content: cardinality
        parenthetical: CardinalityCode
        data_type_clause:
          _type: DataTypeClause
          data_type:
            _type: BaseDataType
            class_name:
              _type: ClassName
              content: CardinalityCode
            as_value_type:
              _type: AsValue
              t_value: false
          is_optional_lit:
            _type: IsOptional
            t_value: false
        default:
          _type: Default
          one_liner:
            _type: OneLiner
            content: '***  For a singular attribute, the default cardinality is N:1.
              If the attribute is 1:1, it must be stated explicitly.

              For a collective attribute, the default is 1:N. If the attribute is
              N:M, it must be stated explicitly.'
          elaboration:
          - _type: Paragraph
            content: '***DSL***: the cardinality of an attribute, if stated explicitly,
              should be placed just before the class name in the parenthetical data
              type specification after the one-liner.

              '
          diagnostics:
          - _type: Diagnostic
            object_type: Default
            object_name: anon
            message: Formula one_liner is too long (220 chars)
            severity: Error
            constraint_name: ''
          - _type: Diagnostic
            object_type: Default
            object_name: anon
            message: No value for code
            severity: Error
            constraint_name: ''
          is_embellishment: false
          english:
            _type: Paragraph
            content: ''
      - _type: Attribute
        is_embellishment: false
        prefix: '-'
        name:
          _type: AttributeName
          content: author
        parenthetical: 1:1 Author
        data_type_clause:
          _type: DataTypeClause
          data_type:
            _type: BaseDataType
            class_name:
              _type: ClassName
              content: InventedName
            as_value_type:
              _type: AsValue
              t_value: true
          is_optional_lit:
            _type: IsOptional
            t_value: false
      - _type: Attribute
        annotations:
        - _type: Annotation
          label: Note
          content: how this works with optionality
          emoji: ''
        is_embellishment: false
        prefix: '-'
        name:
          _type: AttributeName
          content: books
        parenthetical: optional N:M Set of Books
        data_type_clause:
          _type: DataTypeClause
          data_type:
            _type: BaseDataType
            class_name:
              _type: ClassName
              content: InventedName
            as_value_type:
              _type: AsValue
              t_value: true
          is_optional_lit:
            _type: IsOptional
            t_value: false
    - _type: AttributeSection
      is_embellishment: false
      prefix: __
      name:
        _type: AttributeSectionName
        content: Inverse Attributes
      parenthetical: ''
      is_optional:
        _type: IsOptional
        t_value: false
      attributes:
      - _type: Attribute
        is_embellishment: false
        prefix: '-'
        name:
          _type: AttributeName
          content: isInvertible
        parenthetical: Boolean
        data_type_clause:
          _type: DataTypeClause
          data_type:
            _type: BaseDataType
            class_name:
              _type: ClassName
              content: Boolean
            as_value_type:
              _type: AsValue
              t_value: false
          is_optional_lit:
            _type: IsOptional
            t_value: false
        derivation:
          _type: Derivation
          one_liner:
            _type: OneLiner
            content: ' true if the data type is a class or a simple collection of
              members of a class.

              '
          diagnostics:
          - _type: Diagnostic
            object_type: Derivation
            object_name: anon
            message: No value for code
            severity: Error
            constraint_name: ''
          is_embellishment: false
          english:
            _type: Paragraph
            content: ''
      - _type: Attribute
        one_liner:
          _type: OneLiner
          content: the class which contains, or would contain the inverse attribute
        is_embellishment: false
        prefix: '-'
        name:
          _type: AttributeName
          content: inverseClass
        parenthetical: optional Class
        data_type_clause:
          _type: DataTypeClause
          data_type:
            _type: BaseDataType
            class_name:
              _type: ClassName
              content: Class
            as_value_type:
              _type: AsValue
              t_value: false
          is_optional_lit:
            _type: IsOptional
            t_value: false
        derivation:
          _type: Derivation
          one_liner:
            _type: OneLiner
            content: ' from the data type. Null unless arrribute is invertible.

              '
          diagnostics:
          - _type: Diagnostic
            object_type: Derivation
            object_name: anon
            message: No value for code
            severity: Error
            constraint_name: ''
          is_embellishment: false
          english:
            _type: Paragraph
            content: ''
      - _type: Attribute
        is_embellishment: false
        prefix: '-'
        name:
          _type: AttributeName
          content: inverseAttribute
        parenthetical: optional Attribute
        data_type_clause:
          _type: DataTypeClause
          data_type:
            _type: BaseDataType
            class_name:
              _type: ClassName
              content: Attribute
            as_value_type:
              _type: AsValue
              t_value: false
          is_optional_lit:
            _type: IsOptional
            t_value: false
      - _type: Attribute
        is_embellishment: false
        prefix: '-'
        name:
          _type: AttributeName
          content: inverseIsOptional
        parenthetical: optional Attribute
        data_type_clause:
          _type: DataTypeClause
          data_type:
            _type: BaseDataType
            class_name:
              _type: ClassName
              content: Attribute
            as_value_type:
              _type: AsValue
              t_value: false
          is_optional_lit:
            _type: IsOptional
            t_value: false
  - _type: Class
    is_embellishment: false
    prefix: _
    name:
      _type: ClassName
      content: Formulas
    parenthetical: ''
    is_value_type: false
    attributes:
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: 'The rule or formula for calculating the value, if no value is supplied

          Now running to a second line with the parenthentical on yet a third line'
      annotations:
      - _type: Annotation
        label: Note
        content: "even when an Attribute has a default derivation, there\u2019s no\
          \ guarantee that every instance will have an assigned value. Example needed."
        emoji: ''
        elaboration:
        - _type: Paragraph
          content: 'Yes, it handled extra lines.  Let''s see about additional paras
            for an annotation

            '
        - _type: Paragraph
          content: 'Last paragraph here

            '
      diagnostics:
      - _type: Diagnostic
        object_type: Attribute
        object_name:
          _type: AttributeName
          content: default
        message: oneLiner is too long. (143 chars).
        severity: Warning
        constraint_name: ''
      is_embellishment: false
      prefix: '-'
      name: '[circular reference to AttributeName]'
      parenthetical: optional Derivation
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: Derivation
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: For derived attributes, the rule or formula for calculating the value
          _
      annotations:
      - _type: Annotation
        label: Issue
        content: on insert vs on access?
        emoji: ''
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: derivation
      parenthetical: optional Derivation
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: Derivation
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: Any validation rules specific to this attribute _
      annotations:
      - _type: Annotation
        label: Note
        content: from Class.constraints
        emoji: ''
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: constraints
      parenthetical: ListOf Constraints
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: ListDataType
          element_type:
            _type: BaseDataType
            class_name:
              _type: ClassName
              content: Constraints
            as_value_type:
              _type: AsValue
              t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
    attribute_sections:
    - _type: AttributeSection
      is_embellishment: false
      prefix: __
      name:
        _type: AttributeSectionName
        content: Override Tracking
      parenthetical: ''
      is_optional:
        _type: IsOptional
        t_value: false
      attributes:
      - _type: Attribute
        diagnostics:
        - _type: Diagnostic
          object_type: Attribute
          object_name:
            _type: AttributeName
            content: overrides
          message: No value for data_type_clause
          severity: Error
          constraint_name: ''
        is_embellishment: false
        prefix: '-'
        name: '[circular reference to AttributeName]'
        parenthetical: ''
  - _type: Class
    is_embellishment: false
    prefix: _
    name:
      _type: ClassName
      content: ValueTypeDerivationARuleOrFormulaForDerivingTheValueOfAnAttribute
    parenthetical: ''
    plural: ' Derivations

      '
    is_value_type: false
    attributes:
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: An English language statement of the derivation rule _
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: statement
      parenthetical: RichText
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: RichText
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: The formal expression of the derivation in a programming language
          _
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: expression
      parenthetical: CodeExpression
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: CodeExpression
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
  - _type: Class
    is_embellishment: false
    prefix: _
    name:
      _type: ClassName
      content: ValueTypeConstraintARuleConditionOrValidationThatMustBeSatisfiedByTheModel
    parenthetical: ''
    plural: ' Constraints

      '
    subtype_of:
    - (ClassName(content='Component', _type='ClassName'), SubtypingName(content='subtypes',
      _type='SubtypingName'))
    is_value_type: false
    attributes:
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: An English language statement of the constraint _
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: statement
      parenthetical: RichText
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: RichText
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: The formal expression of the constraint in a programming language
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: expression
      parenthetical: e.g., OCL _(CodeExpression
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: InventedName
          as_value_type:
            _type: AsValue
            t_value: true
        is_optional_lit:
          _type: IsOptional
          t_value: false
    - _type: Attribute
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: severity
      parenthetical: Code
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: Code
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: '**Warning** - nothing fatal; just a caution'
      diagnostics:
      - _type: Diagnostic
        object_type: Attribute
        message: Name is missing
        severity: Error
        constraint_name: ''
      - _type: Diagnostic
        object_type: Attribute
        message: No value for data_type_clause
        severity: Error
        constraint_name: ''
      is_embellishment: false
      prefix: '-'
      parenthetical: ''
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: '**Error** - serious. Fix now'
      diagnostics:
      - _type: Diagnostic
        object_type: Attribute
        message: Name is missing
        severity: Error
        constraint_name: ''
      - _type: Diagnostic
        object_type: Attribute
        message: No value for data_type_clause
        severity: Error
        constraint_name: ''
      is_embellishment: false
      prefix: '-'
      parenthetical: ''
    - _type: Attribute
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: message
      parenthetical: Template
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: Template
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
  - _type: Class
    is_embellishment: false
    prefix: _
    name:
      _type: ClassName
      content: ClassConstraint
    parenthetical: ''
    subtype_of:
    - (ClassName(content='Constraint', _type='ClassName'), SubtypingName(content='subtypes',
      _type='SubtypingName'))
    based_on:
    - _type: ClassName
      content: Class
    is_value_type: false
  - _type: Class
    is_embellishment: false
    prefix: _
    name:
      _type: ClassName
      content: AttributeConstraint
    parenthetical: ''
    subtype_of:
    - (ClassName(content='Constraint', _type='ClassName'), SubtypingName(content='subtypes',
      _type='SubtypingName'))
    based_on:
    - _type: ClassName
      content: Attribute
    is_value_type: false
  - _type: Class
    is_embellishment: false
    prefix: _
    name:
      _type: ClassName
      content: CodeExpression
    parenthetical: ''
    is_value_type: false
    attributes:
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: the programming language
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: language
      parenthetical: Code
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: Code
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: 'OCL: Object Constraint Language'
      diagnostics:
      - _type: Diagnostic
        object_type: Attribute
        message: Name is missing
        severity: Error
        constraint_name: ''
      - _type: Diagnostic
        object_type: Attribute
        message: No value for data_type_clause
        severity: Error
        constraint_name: ''
      is_embellishment: false
      prefix: '-'
      parenthetical: ''
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: 'Java: Java'
      diagnostics:
      - _type: Diagnostic
        object_type: Attribute
        message: Name is missing
        severity: Error
        constraint_name: ''
      - _type: Diagnostic
        object_type: Attribute
        message: No value for data_type_clause
        severity: Error
        constraint_name: ''
      is_embellishment: false
      prefix: '-'
      parenthetical: ''
    - _type: Attribute
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: expression
      parenthetical: String
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: String
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
- _type: SubjectB
  is_embellishment: false
  prefix: '##'
  name:
    _type: SubjectName
    content: Methods
  parenthetical: ''
  classes:
  - _type: Class
    is_embellishment: false
    prefix: _
    name:
      _type: ClassName
      content: MethodABehaviorOrOperationAssociatedWithAClass
    parenthetical: ''
    plural: ' Methods

      '
    subtype_of:
    - (ClassName(content='Component', _type='ClassName'), SubtypingName(content='subtypes',
      _type='SubtypingName'))
    is_value_type: false
    attributes:
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: The input parameters of the method _
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: parameters
      parenthetical: ListOf Parameters
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: ListDataType
          element_type:
            _type: BaseDataType
            class_name:
              _type: ClassName
              content: Parameters
            as_value_type:
              _type: AsValue
              t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: The data type of the value returned by the method _
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: returnType
      parenthetical: DataType
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: DataType
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
  - _type: Class
    is_embellishment: false
    prefix: _
    name:
      _type: ClassName
      content: ParameterAnInputToAMethod
    parenthetical: ''
    plural: ' Parameters

      '
    subtype_of:
    - (ClassName(content='Component', _type='ClassName'), SubtypingName(content='subtypes',
      _type='SubtypingName'))
    is_value_type: false
    attributes:
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: The data type of the parameter _
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: type
      parenthetical: DataType
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: DataType
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: The cardinality of the parameter
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: cardinality
      parenthetical: e.g., optional, required
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: InventedName
          as_value_type:
            _type: AsValue
            t_value: true
        is_optional_lit:
          _type: IsOptional
          t_value: false
- _type: SubjectB
  elaboration:
  - _type: Paragraph
    content: '*ValueType*:**Data Type**

      '
  is_embellishment: false
  prefix: '##'
  name:
    _type: SubjectName
    content: Data Types
  parenthetical: ''
  classes:
  - _type: Class
    is_embellishment: false
    prefix: _
    name:
      _type: ClassName
      content: SimpleDataTypeSubtpeOfDataType
    parenthetical: ''
    is_value_type: false
    attributes:
    - _type: Attribute
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: coreClass
      parenthetical: Class
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: Class
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
  - _type: Class
    is_embellishment: false
    prefix: _
    name:
      _type: ClassName
      content: ComplexDataType
    parenthetical: ''
    is_value_type: false
    attributes:
    - _type: Attribute
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: aggregation
      parenthetical: Aggregating Operator
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: AggregatingOperator
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
    - _type: Attribute
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: aggregatedTypes
      parenthetical: List of DataTypes
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: ListDataType
          element_type:
            _type: BaseDataType
            class_name:
              _type: ClassName
              content: DataTypes
            as_value_type:
              _type: AsValue
              t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
  - _type: Class
    is_embellishment: false
    prefix: _
    name:
      _type: ClassName
      content: AggregatingOperator
    parenthetical: ''
    is_value_type: false
    attributes:
    - _type: Attribute
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: name
      parenthetical: Code
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: Code
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: '**SetOf**'
      diagnostics:
      - _type: Diagnostic
        object_type: Attribute
        message: Name is missing
        severity: Error
        constraint_name: ''
      - _type: Diagnostic
        object_type: Attribute
        message: No value for data_type_clause
        severity: Error
        constraint_name: ''
      is_embellishment: false
      prefix: '-'
      parenthetical: ''
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: '**ListOf**'
      diagnostics:
      - _type: Diagnostic
        object_type: Attribute
        message: Name is missing
        severity: Error
        constraint_name: ''
      - _type: Diagnostic
        object_type: Attribute
        message: No value for data_type_clause
        severity: Error
        constraint_name: ''
      is_embellishment: false
      prefix: '-'
      parenthetical: ''
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: '**Mapping**'
      diagnostics:
      - _type: Diagnostic
        object_type: Attribute
        message: Name is missing
        severity: Error
        constraint_name: ''
      - _type: Diagnostic
        object_type: Attribute
        message: No value for data_type_clause
        severity: Error
        constraint_name: ''
      is_embellishment: false
      prefix: '-'
      parenthetical: ''
    - _type: Attribute
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: arity
      parenthetical: Integer
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: Integer
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
    - _type: Attribute
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: spelling
      parenthetical: Template
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: Template
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
- _type: SubjectB
  elaboration:
  - _type: Paragraph
    content: 'insert Camel Case.md

      '
  is_embellishment: false
  prefix: '##'
  name:
    _type: SubjectName
    content: Low level Data Types
  parenthetical: ''
  classes:
  - _type: Class
    elaboration:
    - _type: Paragraph
      content: 'A short string without punctuation or spaces, suitable for names,
        labels, or identifiers and presented in camel case.

        '
    is_embellishment: false
    prefix: _
    name:
      _type: ClassName
      content: ValueTypeCamelName
    parenthetical: ''
    subtype_of:
    - (ClassName(content='String', _type='ClassName'), SubtypingName(content='subtypes',
      _type='SubtypingName'))
    is_value_type: false
    attributes:
    - _type: Attribute
      annotations:
      - _type: Annotation
        label: Example
        content: '"firstName", "orderDate", "customerID"'
        emoji: ''
        elaboration:
        - _type: Paragraph
          content: "> \U0001F4DD ***ModelingNote***: Putting the non-empty constraint\
            \ on the CamelName value type is effective because it automatically applies\
            \ to all attributes that use CamelName as their type. This ensures consistency\
            \ and avoids the need to define the constraint separately for each attribute.\n"
      - _type: Annotation
        label: ModelingNote
        content: '* *CamelName* is presented here, just after its first usage by another
          class (Component), to provide context and understanding before it is used
          further in the model.'
        emoji: ''
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: valueTheString
      parenthetical: String
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: String
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
      constraints:
      - _type: Constraint
        one_liner:
        - _type: OneLiner
          content: ' Must follow the camel case naming convention and not be empty.

            '
        diagnostics:
        - _type: Diagnostic
          object_type: Constraint
          object_name: anon
          message: Formula one_liner is too long (105 chars)
          severity: Error
          constraint_name: ''
        - _type: Diagnostic
          object_type: Constraint
          object_name: anon
          message: No value for code
          severity: Error
          constraint_name: ''
        is_embellishment: false
        english:
          _type: Paragraph
          content: ''
        message:
          _type: Paragraph
          content: ''
  - _type: Class
    one_liner:
      _type: OneLiner
      content: a CamelName that begins with a capital letter
    annotations:
    - _type: Annotation
      label: Example
      content: _ "Customer", "ProductCategory", "PaymentMethod"
      emoji: ''
    is_embellishment: false
    prefix: _
    name:
      _type: ClassName
      content: UpperCamel
    parenthetical: ''
    subtype_of:
    - (ClassName(content='CamelName', _type='ClassName'), SubtypingName(content='subtypes',
      _type='SubtypingName'))
    is_value_type: false
    where: ' content begins with an upper case letter.

      '
  - _type: Class
    one_liner:
      _type: OneLiner
      content: a CamelName that begins with a lower case letter
    annotations:
    - _type: Annotation
      label: Example
      content: '"firstName", "orderTotal", "shippingAddress"'
      emoji: ''
    is_embellishment: false
    prefix: _
    name:
      _type: ClassName
      content: LowerCamel
    parenthetical: ''
    subtype_of:
    - (ClassName(content='CamelName', _type='ClassName'), SubtypingName(content='subtypes',
      _type='SubtypingName'))
    is_value_type: false
    where: ' content begins with a lower case letter.

      '
  - _type: Class
    one_liner:
      _type: OneLiner
      content: an expression consisting of Camel Names separated by periods
    is_embellishment: false
    prefix: _
    name:
      _type: ClassName
      content: QualifiedCamel
    parenthetical: ''
    subtype_of:
    - (ClassName(content='String', _type='ClassName'), SubtypingName(content='subtypes',
      _type='SubtypingName'))
    is_value_type: false
    constraints:
    - _type: Constraint
      one_liner:
      - _type: OneLiner
        content: ' content consists of CamelNames, separated by periods.  Each of
          the camel names must be Upper Camel except, possibly, the first.

          '
      diagnostics:
      - _type: Diagnostic
        object_type: Constraint
        object_name: anon
        message: Formula one_liner is too long (170 chars)
        severity: Error
        constraint_name: ''
      - _type: Diagnostic
        object_type: Constraint
        object_name: anon
        message: No value for code
        severity: Error
        constraint_name: ''
      is_embellishment: false
      english:
        _type: Paragraph
        content: ''
      message:
        _type: Paragraph
        content: ''
  - _type: Class
    is_embellishment: false
    prefix: _
    name:
      _type: ClassName
      content: RichTextAStringWithMarkupForBlockLevelFormatting
    parenthetical: ''
    subtype_of:
    - (ClassName(content='String', _type='ClassName'), SubtypingName(content='subtypes',
      _type='SubtypingName'))
    is_value_type: false
    attributes:
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: the string content
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: value
      parenthetical: string
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: String
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: the rich text coding language used
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: format
      parenthetical: Code
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: Code
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
    - _type: Attribute
      diagnostics:
      - _type: Diagnostic
        object_type: Attribute
        object_name:
          _type: AttributeName
          content: html
        message: No value for data_type_clause
        severity: Error
        constraint_name: ''
      is_embellishment: false
      prefix: '-'
      name: '[circular reference to AttributeName]'
      parenthetical: ''
    - _type: Attribute
      diagnostics:
      - _type: Diagnostic
        object_type: Attribute
        object_name:
          _type: AttributeName
          content: markDown
        message: No value for data_type_clause
        severity: Error
        constraint_name: ''
      is_embellishment: false
      prefix: '-'
      name: '[circular reference to AttributeName]'
      parenthetical: ''
  - _type: Class
    one_liner:
      _type: OneLiner
      content: String with markup for line level formatting.
    is_embellishment: false
    prefix: _
    name:
      _type: ClassName
      content: RichLine
    parenthetical: ''
    subtype_of:
    - (ClassName(content='RichText', _type='ClassName'), SubtypingName(content='subtypes',
      _type='SubtypingName'))
    is_value_type: false
    attributes:
    - _type: Attribute
      one_liner:
        _type: OneLiner
        content: the string content
      is_embellishment: false
      prefix: '-'
      name:
        _type: AttributeName
        content: value
      parenthetical: string
      data_type_clause:
        _type: DataTypeClause
        data_type:
          _type: BaseDataType
          class_name:
            _type: ClassName
            content: String
          as_value_type:
            _type: AsValue
            t_value: false
        is_optional_lit:
          _type: IsOptional
          t_value: false
      constraints:
      - _type: Constraint
        one_liner:
        - _type: OneLiner
          content: ' must not containa line break or new line character

            '
        diagnostics:
        - _type: Diagnostic
          object_type: Constraint
          object_name: anon
          message: Formula one_liner is too long (93 chars)
          severity: Error
          constraint_name: ''
        - _type: Diagnostic
          object_type: Constraint
          object_name: anon
          message: No value for code
          severity: Error
          constraint_name: ''
        is_embellishment: false
        english:
          _type: Paragraph
          content: ''
        message:
          _type: Paragraph
          content: ''
  - _type: Class
    annotations:
    - _type: Annotation
      label: Values
      content: ''
      emoji: ''
      elaboration:
      - _type: Paragraph
        content: '===

          '
    is_embellishment: false
    prefix: _
    name:
      _type: ClassName
      content: PrimitiveType
    parenthetical: ''
    subtype_of:
    - (ClassName(content='ValueTypeABasic', _type='ClassName'), SubtypingName(content='subtypes',
      _type='SubtypingName'))
    - (ClassName(content='BuiltInDataType', _type='ClassName'), SubtypingName(content='subtypes',
      _type='SubtypingName'))
    is_value_type: false
- _type: SubjectB
  is_embellishment: false
  prefix: '##'
  name:
    _type: SubjectName
    content: Appendices Insert More Sidebars md Insert Overrides md insert LDM Intro
      md Insert OCL md Insert Camel Case md
  parenthetical: ''
  subjects:
  - _type: SubjectC
    elaboration:
    - _type: Paragraph
      content: 'These are the recognized Annotation Types for the LDM model.

        '
    - _type: Paragraph
      content: 'And this is how you register the AnnotationTyped for a model. By including
        this sort of array in the DSL document for the model.

        '
    - _type: CodeBlock
      content: "```puml\n@startjson\n\n[\n{\n\"label\": \"Error\",\n\"emoji\": \"\u274C\
        \",\n\"emojiName\": \"cross_mark\",\n\"emojiUnicode\": \"U+274C\",\n\"purpose\"\
        : \"Indicates a critical error or failure in the model.\"\n},\n{\n\"label\"\
        : \"Warning\",\n\"emoji\": \"\u26A0\uFE0F\",\n\"emojiName\": \"warning\",\n\
        \"emojiUnicode\": \"U+26A0\",\n\"purpose\": \"Indicates a potential issue\
        \ or warning in the model.\"\n},\n{\n\"label\": \"Note\",\n\"emoji\": \"\U0001F4D8\
        \",\n\"emojiName\": \"blue_book\",\n\"emojiUnicode\": \"U+1F4D8\",\n\"purpose\"\
        : \"Provides additional context, explanations, or clarifications for the annotated\
        \ element.\"\n},\n{\n\"label\": \"Issue\",\n\"emoji\": \"\u26A0\uFE0F\",\n\
        \"emojiName\": \"warning\",\n\"emojiUnicode\": \"U+26A0\",\n\"purpose\": \"\
        Highlights a potential issue or error that needs to be addressed or resolved.\"\
        \n},\n{\n\"label\": \"Question\",\n\"emoji\": \"\u2753\",\n\"emojiName\":\
        \ \"question\",\n\"emojiUnicode\": \"U+2753\",\n\"purpose\": \"Raises a question\
        \ or seeks further clarification about the annotated element.\"\n},\n{\n\"\
        label\": \"Suggestion\",\n\"emoji\": \"\U0001F4A1\",\n\"emojiName\": \"bulb\"\
        ,\n\"emojiUnicode\": \"U+1F4A1\",\n\"purpose\": \"Provides a suggestion or\
        \ recommendation for improving the model or the annotated element.\"\n},\n\
        {\n\"label\": \"Info\",\n\"emoji\": \"\u2139\uFE0F\",\n\"emojiName\": \"information_source\"\
        ,\n\"emojiUnicode\": \"U+2139\",\n\"purpose\": \"Offers relevant information,\
        \ facts, or details about the annotated element.\"\n},\n{\n\"label\": \"Todo\"\
        ,\n\"emoji\": \"\U0001F4CC\",\n\"emojiName\": \"pushpin\",\n\"emojiUnicode\"\
        : \"U+1F4CC\",\n\"purpose\": \"Indicates a pending task, action item, or future\
        \ work related to the annotated element.\"\n},\n{\n\"label\": \"Reference\"\
        ,\n\"emoji\": \"\U0001F310\",\n\"emojiName\": \"globe_with_meridians\",\n\"\
        emojiUnicode\": \"U+1F310\",\n\"purpose\": \"Provides a reference or link\
        \ to an external resource or documentation.\"\n},\n{\n\"label\": \"See\",\n\
        \"emoji\": \"\U0001F50D\",\n\"emojiName\": \"mag\",\n\"emojiUnicode\": \"\
        U+1F50D\",\n\"purpose\": \"Indicates a cross-reference to another relevant\
        \ element within the model.\"\n}\n]\n@endjson\n\n```"
    is_embellishment: false
    prefix: '###'
    name:
      _type: SubjectName
      content: Annotation Types Used
    parenthetical: ''
  - _type: SubjectC
    elaboration:
    - _type: CodeBlock
      content: "``` csv\nlabel,emoji,emojiName,emojiUnicode,purpose\nError,\u274C\
        ,cross_mark,U+274C,Indicates a critical error or failure in the model.\nWarning,\u26A0\
        \uFE0F,warning,U+26A0,Indicates a potential issue or warning in the model.\n\
        Note,,blue_book,U+1F4D8,\"Provides additional context, explanations, or clarifications\
        \ for the annotated element.\"\nIssue,,warning,U+26A0,Highlights a potential\
        \ issue or error that needs to be addressed or resolved.\nQuestion,\u2753\
        ,question,U+2753,Raises a question or seeks further clarification about the\
        \ annotated element.\nSuggestion,\U0001F4A1,bulb,U+1F4A1,Provides a suggestion\
        \ or recommendation for improving the model or the annotated element.\nInfo,\u2139\
        \uFE0F,information_source,U+2139,\"Offers relevant information, facts, or\
        \ details about the annotated element.\"\nTodo,\U0001F4CC,pushpin,U+1F4CC,\"\
        Indicates a pending task, action item, or future work related to the annotated\
        \ element.\"\nReference,\U0001F310,globe_with_meridians,U+1F310,Provides a\
        \ reference or link to an external resource or documentation.\nSee,,mag,U+1F50D,Indicates\
        \ a cross-reference to another relevant element within the model.\n\n```"
    - _type: Paragraph
      content: '===

        '
    is_embellishment: false
    prefix: '###'
    name:
      _type: SubjectName
      content: Annotation types as CSV
    parenthetical: ''
- _type: SubjectB
  elaboration:
  - _type: Paragraph
    content: '== content to add

      '
  is_embellishment: false
  prefix: '##'
  name:
    _type: SubjectName
    content: Appendices Insert More Sidebars md Insert Overrides md insert LDM Intro
      md Insert OCL md Insert Camel Case md
  parenthetical: ''
