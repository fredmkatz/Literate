"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/sparql-client.ts":
/*!**********************************!*\
  !*** ./src/lib/sparql-client.ts ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GraphDBClient: () => (/* binding */ GraphDBClient)\n/* harmony export */ });\n// src/lib/sparql-client.ts\nclass GraphDBClient {\n    async executeQuery(query) {\n        try {\n            console.log('Client: Executing SPARQL query:', query);\n            const response = await fetch(\"/api/graphdb?repo=\".concat(this.repository), {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                body: new URLSearchParams({\n                    query\n                })\n            });\n            console.log('Client: Response status:', response.status);\n            if (!response.ok) {\n                const errorText = await response.text();\n                console.log('Client: Error response:', errorText);\n                throw new Error(\"HTTP \".concat(response.status, \": \").concat(response.statusText));\n            }\n            const data = await response.json();\n            console.log('Client: Response data:', data);\n            if (data.error) {\n                throw new Error(data.error);\n            }\n            return data;\n        } catch (error) {\n            console.error('SPARQL query failed:', error);\n            throw error;\n        }\n    }\n    async getClasses() {\n        // Temporary mock data while GraphDB issues are resolved\n        return [\n            {\n                uri: 'http://example.org/LiterateModel',\n                label: 'Literate Model',\n                comment: 'A comprehensive data model for literate programming',\n                attributeCount: 15,\n                lastModified: new Date().toISOString()\n            },\n            {\n                uri: 'http://example.org/Class',\n                label: 'Class',\n                comment: 'Represents a class in the model',\n                attributeCount: 8,\n                lastModified: new Date().toISOString()\n            },\n            {\n                uri: 'http://example.org/Attribute',\n                label: 'Attribute',\n                comment: 'Properties and fields of classes',\n                attributeCount: 5,\n                lastModified: new Date().toISOString()\n            },\n            {\n                uri: 'http://example.org/Method',\n                label: 'Method',\n                comment: 'Functions and operations',\n                attributeCount: 7,\n                lastModified: new Date().toISOString()\n            }\n        ];\n    }\n    async getStats() {\n        // Mock stats while GraphDB issues are resolved\n        return {\n            totalTriples: 55000,\n            totalClasses: 25,\n            totalProperties: 180,\n            temporalStatements: 1250\n        };\n    }\n    constructor(repository = 'ldm_repos'){\n        this.repository = repository;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvc3BhcnFsLWNsaWVudC50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsMkJBQTJCO0FBOENwQixNQUFNQTtJQU9YLE1BQU1DLGFBQWFDLEtBQWEsRUFBeUI7UUFDdkQsSUFBSTtZQUNGQyxRQUFRQyxHQUFHLENBQUMsbUNBQW1DRjtZQUUvQyxNQUFNRyxXQUFXLE1BQU1DLE1BQU0scUJBQXFDLE9BQWhCLElBQUksQ0FBQ0MsVUFBVSxHQUFJO2dCQUNuRUMsUUFBUTtnQkFDUkMsU0FBUztvQkFDUCxnQkFBZ0I7Z0JBQ2xCO2dCQUNBQyxNQUFNLElBQUlDLGdCQUFnQjtvQkFBRVQ7Z0JBQU07WUFDcEM7WUFFQUMsUUFBUUMsR0FBRyxDQUFDLDRCQUE0QkMsU0FBU08sTUFBTTtZQUV2RCxJQUFJLENBQUNQLFNBQVNRLEVBQUUsRUFBRTtnQkFDaEIsTUFBTUMsWUFBWSxNQUFNVCxTQUFTVSxJQUFJO2dCQUNyQ1osUUFBUUMsR0FBRyxDQUFDLDJCQUEyQlU7Z0JBQ3ZDLE1BQU0sSUFBSUUsTUFBTSxRQUE0QlgsT0FBcEJBLFNBQVNPLE1BQU0sRUFBQyxNQUF3QixPQUFwQlAsU0FBU1ksVUFBVTtZQUNqRTtZQUVBLE1BQU1DLE9BQU8sTUFBTWIsU0FBU2MsSUFBSTtZQUNoQ2hCLFFBQVFDLEdBQUcsQ0FBQywwQkFBMEJjO1lBRXRDLElBQUlBLEtBQUtFLEtBQUssRUFBRTtnQkFDZCxNQUFNLElBQUlKLE1BQU1FLEtBQUtFLEtBQUs7WUFDNUI7WUFFQSxPQUFPRjtRQUNULEVBQUUsT0FBT0UsT0FBTztZQUNkakIsUUFBUWlCLEtBQUssQ0FBQyx3QkFBd0JBO1lBQ3RDLE1BQU1BO1FBQ1I7SUFDRjtJQUVBLE1BQU1DLGFBQW1DO1FBQ3ZDLHdEQUF3RDtRQUN4RCxPQUFPO1lBQ0w7Z0JBQ0VDLEtBQUs7Z0JBQ0xDLE9BQU87Z0JBQ1BDLFNBQVM7Z0JBQ1RDLGdCQUFnQjtnQkFDaEJDLGNBQWMsSUFBSUMsT0FBT0MsV0FBVztZQUN0QztZQUNBO2dCQUNFTixLQUFLO2dCQUNMQyxPQUFPO2dCQUNQQyxTQUFTO2dCQUNUQyxnQkFBZ0I7Z0JBQ2hCQyxjQUFjLElBQUlDLE9BQU9DLFdBQVc7WUFDdEM7WUFDQTtnQkFDRU4sS0FBSztnQkFDTEMsT0FBTztnQkFDUEMsU0FBUztnQkFDVEMsZ0JBQWdCO2dCQUNoQkMsY0FBYyxJQUFJQyxPQUFPQyxXQUFXO1lBQ3RDO1lBQ0E7Z0JBQ0VOLEtBQUs7Z0JBQ0xDLE9BQU87Z0JBQ1BDLFNBQVM7Z0JBQ1RDLGdCQUFnQjtnQkFDaEJDLGNBQWMsSUFBSUMsT0FBT0MsV0FBVztZQUN0QztTQUNEO0lBQ0g7SUFFQSxNQUFNQyxXQUtIO1FBQ0QsK0NBQStDO1FBQy9DLE9BQU87WUFDTEMsY0FBYztZQUNkQyxjQUFjO1lBQ2RDLGlCQUFpQjtZQUNqQkMsb0JBQW9CO1FBQ3RCO0lBQ0Y7SUFyRkEsWUFBWTFCLGFBQWEsV0FBVyxDQUFFO1FBQ3BDLElBQUksQ0FBQ0EsVUFBVSxHQUFHQTtJQUNwQjtBQXNGRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxmbWthdFxcRHJvcGJveFxcQWxsRk1LRklsZXNcXEFsbFZTQ29kZVxcRk1LUHJvamVjdHNcXFByZXNlbnRhYmxlXFxsZG1fc2l0ZVxcc3JjXFxsaWJcXHNwYXJxbC1jbGllbnQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2xpYi9zcGFycWwtY2xpZW50LnRzXG5leHBvcnQgaW50ZXJmYWNlIFNQQVJRTEJpbmRpbmcge1xuICBba2V5OiBzdHJpbmddOiB7XG4gICAgdHlwZTogJ3VyaScgfCAnbGl0ZXJhbCcgfCAnYm5vZGUnO1xuICAgIHZhbHVlOiBzdHJpbmc7XG4gICAgZGF0YXR5cGU/OiBzdHJpbmc7XG4gICAgJ3htbDpsYW5nJz86IHN0cmluZztcbiAgfTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBTUEFSUUxSZXN1bHQge1xuICBoZWFkOiB7XG4gICAgdmFyczogc3RyaW5nW107XG4gIH07XG4gIHJlc3VsdHM6IHtcbiAgICBiaW5kaW5nczogU1BBUlFMQmluZGluZ1tdO1xuICB9O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIENsYXNzSW5mbyB7XG4gIHVyaTogc3RyaW5nO1xuICBsYWJlbD86IHN0cmluZztcbiAgY29tbWVudD86IHN0cmluZztcbiAgYXR0cmlidXRlQ291bnQ6IG51bWJlcjtcbiAgbGFzdE1vZGlmaWVkPzogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEF0dHJpYnV0ZUluZm8ge1xuICB1cmk6IHN0cmluZztcbiAgbGFiZWw/OiBzdHJpbmc7XG4gIGRvbWFpbj86IHN0cmluZztcbiAgcmFuZ2U/OiBzdHJpbmc7XG4gIGlzT3B0aW9uYWw/OiBib29sZWFuO1xuICBjYXJkaW5hbGl0eT86IHN0cmluZztcbiAgbGFzdE1vZGlmaWVkPzogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFRlbXBvcmFsVHJpcGxlIHtcbiAgc3ViamVjdDogc3RyaW5nO1xuICBwcmVkaWNhdGU6IHN0cmluZztcbiAgb2JqZWN0OiBzdHJpbmc7XG4gIHRpbWVzdGFtcDogc3RyaW5nO1xuICB1c2VyOiBzdHJpbmc7XG4gIG9wZXJhdGlvbjogc3RyaW5nO1xufVxuXG5leHBvcnQgY2xhc3MgR3JhcGhEQkNsaWVudCB7XG4gIHByaXZhdGUgcmVwb3NpdG9yeTogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKHJlcG9zaXRvcnkgPSAnbGRtX3JlcG9zJykge1xuICAgIHRoaXMucmVwb3NpdG9yeSA9IHJlcG9zaXRvcnk7XG4gIH1cblxuICBhc3luYyBleGVjdXRlUXVlcnkocXVlcnk6IHN0cmluZyk6IFByb21pc2U8U1BBUlFMUmVzdWx0PiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnNvbGUubG9nKCdDbGllbnQ6IEV4ZWN1dGluZyBTUEFSUUwgcXVlcnk6JywgcXVlcnkpO1xuICAgICAgXG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAvYXBpL2dyYXBoZGI/cmVwbz0ke3RoaXMucmVwb3NpdG9yeX1gLCB7XG4gICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnLFxuICAgICAgICB9LFxuICAgICAgICBib2R5OiBuZXcgVVJMU2VhcmNoUGFyYW1zKHsgcXVlcnkgfSksXG4gICAgICB9KTtcblxuICAgICAgY29uc29sZS5sb2coJ0NsaWVudDogUmVzcG9uc2Ugc3RhdHVzOicsIHJlc3BvbnNlLnN0YXR1cyk7XG5cbiAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgY29uc3QgZXJyb3JUZXh0ID0gYXdhaXQgcmVzcG9uc2UudGV4dCgpO1xuICAgICAgICBjb25zb2xlLmxvZygnQ2xpZW50OiBFcnJvciByZXNwb25zZTonLCBlcnJvclRleHQpO1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEhUVFAgJHtyZXNwb25zZS5zdGF0dXN9OiAke3Jlc3BvbnNlLnN0YXR1c1RleHR9YCk7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICBjb25zb2xlLmxvZygnQ2xpZW50OiBSZXNwb25zZSBkYXRhOicsIGRhdGEpO1xuICAgICAgXG4gICAgICBpZiAoZGF0YS5lcnJvcikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZGF0YS5lcnJvcik7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBkYXRhO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdTUEFSUUwgcXVlcnkgZmFpbGVkOicsIGVycm9yKTtcbiAgICAgIHRocm93IGVycm9yO1xuICAgIH1cbiAgfVxuXG4gIGFzeW5jIGdldENsYXNzZXMoKTogUHJvbWlzZTxDbGFzc0luZm9bXT4ge1xuICAgIC8vIFRlbXBvcmFyeSBtb2NrIGRhdGEgd2hpbGUgR3JhcGhEQiBpc3N1ZXMgYXJlIHJlc29sdmVkXG4gICAgcmV0dXJuIFtcbiAgICAgIHtcbiAgICAgICAgdXJpOiAnaHR0cDovL2V4YW1wbGUub3JnL0xpdGVyYXRlTW9kZWwnLFxuICAgICAgICBsYWJlbDogJ0xpdGVyYXRlIE1vZGVsJyxcbiAgICAgICAgY29tbWVudDogJ0EgY29tcHJlaGVuc2l2ZSBkYXRhIG1vZGVsIGZvciBsaXRlcmF0ZSBwcm9ncmFtbWluZycsXG4gICAgICAgIGF0dHJpYnV0ZUNvdW50OiAxNSxcbiAgICAgICAgbGFzdE1vZGlmaWVkOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHVyaTogJ2h0dHA6Ly9leGFtcGxlLm9yZy9DbGFzcycsXG4gICAgICAgIGxhYmVsOiAnQ2xhc3MnLFxuICAgICAgICBjb21tZW50OiAnUmVwcmVzZW50cyBhIGNsYXNzIGluIHRoZSBtb2RlbCcsXG4gICAgICAgIGF0dHJpYnV0ZUNvdW50OiA4LFxuICAgICAgICBsYXN0TW9kaWZpZWQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgdXJpOiAnaHR0cDovL2V4YW1wbGUub3JnL0F0dHJpYnV0ZScsXG4gICAgICAgIGxhYmVsOiAnQXR0cmlidXRlJyxcbiAgICAgICAgY29tbWVudDogJ1Byb3BlcnRpZXMgYW5kIGZpZWxkcyBvZiBjbGFzc2VzJyxcbiAgICAgICAgYXR0cmlidXRlQ291bnQ6IDUsXG4gICAgICAgIGxhc3RNb2RpZmllZDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICB1cmk6ICdodHRwOi8vZXhhbXBsZS5vcmcvTWV0aG9kJyxcbiAgICAgICAgbGFiZWw6ICdNZXRob2QnLFxuICAgICAgICBjb21tZW50OiAnRnVuY3Rpb25zIGFuZCBvcGVyYXRpb25zJyxcbiAgICAgICAgYXR0cmlidXRlQ291bnQ6IDcsXG4gICAgICAgIGxhc3RNb2RpZmllZDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpXG4gICAgICB9XG4gICAgXTtcbiAgfVxuXG4gIGFzeW5jIGdldFN0YXRzKCk6IFByb21pc2U8e1xuICAgIHRvdGFsVHJpcGxlczogbnVtYmVyO1xuICAgIHRvdGFsQ2xhc3NlczogbnVtYmVyO1xuICAgIHRvdGFsUHJvcGVydGllczogbnVtYmVyO1xuICAgIHRlbXBvcmFsU3RhdGVtZW50czogbnVtYmVyO1xuICB9PiB7XG4gICAgLy8gTW9jayBzdGF0cyB3aGlsZSBHcmFwaERCIGlzc3VlcyBhcmUgcmVzb2x2ZWRcbiAgICByZXR1cm4ge1xuICAgICAgdG90YWxUcmlwbGVzOiA1NTAwMCxcbiAgICAgIHRvdGFsQ2xhc3NlczogMjUsXG4gICAgICB0b3RhbFByb3BlcnRpZXM6IDE4MCxcbiAgICAgIHRlbXBvcmFsU3RhdGVtZW50czogMTI1MFxuICAgIH07XG4gIH1cblxuICAvLyBBZGQgb3RoZXIgbWV0aG9kcyBhcyBuZWVkZWQuLi5cbn0iXSwibmFtZXMiOlsiR3JhcGhEQkNsaWVudCIsImV4ZWN1dGVRdWVyeSIsInF1ZXJ5IiwiY29uc29sZSIsImxvZyIsInJlc3BvbnNlIiwiZmV0Y2giLCJyZXBvc2l0b3J5IiwibWV0aG9kIiwiaGVhZGVycyIsImJvZHkiLCJVUkxTZWFyY2hQYXJhbXMiLCJzdGF0dXMiLCJvayIsImVycm9yVGV4dCIsInRleHQiLCJFcnJvciIsInN0YXR1c1RleHQiLCJkYXRhIiwianNvbiIsImVycm9yIiwiZ2V0Q2xhc3NlcyIsInVyaSIsImxhYmVsIiwiY29tbWVudCIsImF0dHJpYnV0ZUNvdW50IiwibGFzdE1vZGlmaWVkIiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwiZ2V0U3RhdHMiLCJ0b3RhbFRyaXBsZXMiLCJ0b3RhbENsYXNzZXMiLCJ0b3RhbFByb3BlcnRpZXMiLCJ0ZW1wb3JhbFN0YXRlbWVudHMiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/sparql-client.ts\n"));

/***/ })

});