"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/sparql-client.ts":
/*!**********************************!*\
  !*** ./src/lib/sparql-client.ts ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GraphDBClient: () => (/* binding */ GraphDBClient)\n/* harmony export */ });\n// src/lib/sparql-client.ts\nclass GraphDBClient {\n    async executeQuery(query) {\n        try {\n            console.log('Client: Executing SPARQL query:', query);\n            const response = await fetch(\"/api/graphdb?repo=\".concat(this.repository), {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                body: new URLSearchParams({\n                    query\n                })\n            });\n            console.log('Client: Response status:', response.status);\n            if (!response.ok) {\n                const errorText = await response.text();\n                console.log('Client: Error response:', errorText);\n                throw new Error(\"HTTP \".concat(response.status, \": \").concat(response.statusText));\n            }\n            const data = await response.json();\n            console.log('Client: Response data:', data);\n            if (data.error) {\n                throw new Error(data.error);\n            }\n            return data;\n        } catch (error) {\n            console.error('SPARQL query failed:', error);\n            throw error;\n        }\n    }\n    async getClasses() {\n        const query = \"\\n      PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\\n      \\n      SELECT ?class ?label ?comment (COUNT(?attr) as ?attrCount) WHERE {\\n        ?class a rdfs:Class .\\n        OPTIONAL { ?class rdfs:label ?label }\\n        OPTIONAL { ?class rdfs:comment ?comment }\\n        OPTIONAL { ?attr rdfs:domain ?class }\\n      }\\n      GROUP BY ?class ?label ?comment\\n      ORDER BY ?label ?class\\n      LIMIT 20\\n    \";\n        const result = await this.executeQuery(query);\n        return result.results.bindings.map((binding)=>{\n            var _binding_label, _binding_comment, _binding_attrCount;\n            return {\n                uri: binding.class.value,\n                label: (_binding_label = binding.label) === null || _binding_label === void 0 ? void 0 : _binding_label.value,\n                comment: (_binding_comment = binding.comment) === null || _binding_comment === void 0 ? void 0 : _binding_comment.value,\n                attributeCount: parseInt(((_binding_attrCount = binding.attrCount) === null || _binding_attrCount === void 0 ? void 0 : _binding_attrCount.value) || '0')\n            };\n        });\n    }\n    async getStats() {\n        var _binding_totalTriples, _binding_totalClasses, _binding_totalProps, _binding_temporalStmts;\n        const query = \"\\n      PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\\n      PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\\n      \\n      SELECT \\n        (COUNT(*) as ?totalTriples)\\n        (COUNT(DISTINCT ?class) as ?totalClasses)\\n        (COUNT(DISTINCT ?prop) as ?totalProps)\\n        (COUNT(DISTINCT ?stmt) as ?temporalStmts)\\n      WHERE {\\n        ?s ?p ?o .\\n        OPTIONAL { ?class a rdfs:Class }\\n        OPTIONAL { ?prop a rdf:Property }\\n        OPTIONAL { ?stmt a rdf:Statement }\\n      }\\n    \";\n        const result = await this.executeQuery(query);\n        const binding = result.results.bindings[0];\n        return {\n            totalTriples: parseInt(((_binding_totalTriples = binding.totalTriples) === null || _binding_totalTriples === void 0 ? void 0 : _binding_totalTriples.value) || '0'),\n            totalClasses: parseInt(((_binding_totalClasses = binding.totalClasses) === null || _binding_totalClasses === void 0 ? void 0 : _binding_totalClasses.value) || '0'),\n            totalProperties: parseInt(((_binding_totalProps = binding.totalProps) === null || _binding_totalProps === void 0 ? void 0 : _binding_totalProps.value) || '0'),\n            temporalStatements: parseInt(((_binding_temporalStmts = binding.temporalStmts) === null || _binding_temporalStmts === void 0 ? void 0 : _binding_temporalStmts.value) || '0')\n        };\n    }\n    constructor(repository = 'ldm_repos'){\n        this.repository = repository;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvc3BhcnFsLWNsaWVudC50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsMkJBQTJCO0FBOENwQixNQUFNQTtJQU9YLE1BQU1DLGFBQWFDLEtBQWEsRUFBeUI7UUFDdkQsSUFBSTtZQUNGQyxRQUFRQyxHQUFHLENBQUMsbUNBQW1DRjtZQUUvQyxNQUFNRyxXQUFXLE1BQU1DLE1BQU0scUJBQXFDLE9BQWhCLElBQUksQ0FBQ0MsVUFBVSxHQUFJO2dCQUNuRUMsUUFBUTtnQkFDUkMsU0FBUztvQkFDUCxnQkFBZ0I7Z0JBQ2xCO2dCQUNBQyxNQUFNLElBQUlDLGdCQUFnQjtvQkFBRVQ7Z0JBQU07WUFDcEM7WUFFQUMsUUFBUUMsR0FBRyxDQUFDLDRCQUE0QkMsU0FBU08sTUFBTTtZQUV2RCxJQUFJLENBQUNQLFNBQVNRLEVBQUUsRUFBRTtnQkFDaEIsTUFBTUMsWUFBWSxNQUFNVCxTQUFTVSxJQUFJO2dCQUNyQ1osUUFBUUMsR0FBRyxDQUFDLDJCQUEyQlU7Z0JBQ3ZDLE1BQU0sSUFBSUUsTUFBTSxRQUE0QlgsT0FBcEJBLFNBQVNPLE1BQU0sRUFBQyxNQUF3QixPQUFwQlAsU0FBU1ksVUFBVTtZQUNqRTtZQUVBLE1BQU1DLE9BQU8sTUFBTWIsU0FBU2MsSUFBSTtZQUNoQ2hCLFFBQVFDLEdBQUcsQ0FBQywwQkFBMEJjO1lBRXRDLElBQUlBLEtBQUtFLEtBQUssRUFBRTtnQkFDZCxNQUFNLElBQUlKLE1BQU1FLEtBQUtFLEtBQUs7WUFDNUI7WUFFQSxPQUFPRjtRQUNULEVBQUUsT0FBT0UsT0FBTztZQUNkakIsUUFBUWlCLEtBQUssQ0FBQyx3QkFBd0JBO1lBQ3RDLE1BQU1BO1FBQ1I7SUFDRjtJQUVBLE1BQU1DLGFBQW1DO1FBQ3ZDLE1BQU1uQixRQUFTO1FBY2YsTUFBTW9CLFNBQVMsTUFBTSxJQUFJLENBQUNyQixZQUFZLENBQUNDO1FBRXZDLE9BQU9vQixPQUFPQyxPQUFPLENBQUNDLFFBQVEsQ0FBQ0MsR0FBRyxDQUFDQyxDQUFBQTtnQkFFMUJBLGdCQUNFQSxrQkFDZ0JBO21CQUpvQjtnQkFDN0NDLEtBQUtELFFBQVFFLEtBQUssQ0FBQ0MsS0FBSztnQkFDeEJDLEtBQUssR0FBRUosaUJBQUFBLFFBQVFJLEtBQUssY0FBYkoscUNBQUFBLGVBQWVHLEtBQUs7Z0JBQzNCRSxPQUFPLEdBQUVMLG1CQUFBQSxRQUFRSyxPQUFPLGNBQWZMLHVDQUFBQSxpQkFBaUJHLEtBQUs7Z0JBQy9CRyxnQkFBZ0JDLFNBQVNQLEVBQUFBLHFCQUFBQSxRQUFRUSxTQUFTLGNBQWpCUix5Q0FBQUEsbUJBQW1CRyxLQUFLLEtBQUk7WUFDdkQ7O0lBQ0Y7SUFFQSxNQUFNTSxXQUtIO1lBc0J3QlQsdUJBQ0FBLHVCQUNHQSxxQkFDR0E7UUF4Qi9CLE1BQU14QixRQUFTO1FBaUJmLE1BQU1vQixTQUFTLE1BQU0sSUFBSSxDQUFDckIsWUFBWSxDQUFDQztRQUN2QyxNQUFNd0IsVUFBVUosT0FBT0MsT0FBTyxDQUFDQyxRQUFRLENBQUMsRUFBRTtRQUUxQyxPQUFPO1lBQ0xZLGNBQWNILFNBQVNQLEVBQUFBLHdCQUFBQSxRQUFRVSxZQUFZLGNBQXBCViw0Q0FBQUEsc0JBQXNCRyxLQUFLLEtBQUk7WUFDdERRLGNBQWNKLFNBQVNQLEVBQUFBLHdCQUFBQSxRQUFRVyxZQUFZLGNBQXBCWCw0Q0FBQUEsc0JBQXNCRyxLQUFLLEtBQUk7WUFDdERTLGlCQUFpQkwsU0FBU1AsRUFBQUEsc0JBQUFBLFFBQVFhLFVBQVUsY0FBbEJiLDBDQUFBQSxvQkFBb0JHLEtBQUssS0FBSTtZQUN2RFcsb0JBQW9CUCxTQUFTUCxFQUFBQSx5QkFBQUEsUUFBUWUsYUFBYSxjQUFyQmYsNkNBQUFBLHVCQUF1QkcsS0FBSyxLQUFJO1FBQy9EO0lBQ0Y7SUEvRkEsWUFBWXRCLGFBQWEsV0FBVyxDQUFFO1FBQ3BDLElBQUksQ0FBQ0EsVUFBVSxHQUFHQTtJQUNwQjtBQWdHRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxmbWthdFxcRHJvcGJveFxcQWxsRk1LRklsZXNcXEFsbFZTQ29kZVxcRk1LUHJvamVjdHNcXFByZXNlbnRhYmxlXFxsZG1fc2l0ZVxcc3JjXFxsaWJcXHNwYXJxbC1jbGllbnQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2xpYi9zcGFycWwtY2xpZW50LnRzXG5leHBvcnQgaW50ZXJmYWNlIFNQQVJRTEJpbmRpbmcge1xuICBba2V5OiBzdHJpbmddOiB7XG4gICAgdHlwZTogJ3VyaScgfCAnbGl0ZXJhbCcgfCAnYm5vZGUnO1xuICAgIHZhbHVlOiBzdHJpbmc7XG4gICAgZGF0YXR5cGU/OiBzdHJpbmc7XG4gICAgJ3htbDpsYW5nJz86IHN0cmluZztcbiAgfTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBTUEFSUUxSZXN1bHQge1xuICBoZWFkOiB7XG4gICAgdmFyczogc3RyaW5nW107XG4gIH07XG4gIHJlc3VsdHM6IHtcbiAgICBiaW5kaW5nczogU1BBUlFMQmluZGluZ1tdO1xuICB9O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIENsYXNzSW5mbyB7XG4gIHVyaTogc3RyaW5nO1xuICBsYWJlbD86IHN0cmluZztcbiAgY29tbWVudD86IHN0cmluZztcbiAgYXR0cmlidXRlQ291bnQ6IG51bWJlcjtcbiAgbGFzdE1vZGlmaWVkPzogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEF0dHJpYnV0ZUluZm8ge1xuICB1cmk6IHN0cmluZztcbiAgbGFiZWw/OiBzdHJpbmc7XG4gIGRvbWFpbj86IHN0cmluZztcbiAgcmFuZ2U/OiBzdHJpbmc7XG4gIGlzT3B0aW9uYWw/OiBib29sZWFuO1xuICBjYXJkaW5hbGl0eT86IHN0cmluZztcbiAgbGFzdE1vZGlmaWVkPzogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFRlbXBvcmFsVHJpcGxlIHtcbiAgc3ViamVjdDogc3RyaW5nO1xuICBwcmVkaWNhdGU6IHN0cmluZztcbiAgb2JqZWN0OiBzdHJpbmc7XG4gIHRpbWVzdGFtcDogc3RyaW5nO1xuICB1c2VyOiBzdHJpbmc7XG4gIG9wZXJhdGlvbjogc3RyaW5nO1xufVxuXG5leHBvcnQgY2xhc3MgR3JhcGhEQkNsaWVudCB7XG4gIHByaXZhdGUgcmVwb3NpdG9yeTogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKHJlcG9zaXRvcnkgPSAnbGRtX3JlcG9zJykge1xuICAgIHRoaXMucmVwb3NpdG9yeSA9IHJlcG9zaXRvcnk7XG4gIH1cblxuICBhc3luYyBleGVjdXRlUXVlcnkocXVlcnk6IHN0cmluZyk6IFByb21pc2U8U1BBUlFMUmVzdWx0PiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnNvbGUubG9nKCdDbGllbnQ6IEV4ZWN1dGluZyBTUEFSUUwgcXVlcnk6JywgcXVlcnkpO1xuICAgICAgXG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAvYXBpL2dyYXBoZGI/cmVwbz0ke3RoaXMucmVwb3NpdG9yeX1gLCB7XG4gICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnLFxuICAgICAgICB9LFxuICAgICAgICBib2R5OiBuZXcgVVJMU2VhcmNoUGFyYW1zKHsgcXVlcnkgfSksXG4gICAgICB9KTtcblxuICAgICAgY29uc29sZS5sb2coJ0NsaWVudDogUmVzcG9uc2Ugc3RhdHVzOicsIHJlc3BvbnNlLnN0YXR1cyk7XG5cbiAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgY29uc3QgZXJyb3JUZXh0ID0gYXdhaXQgcmVzcG9uc2UudGV4dCgpO1xuICAgICAgICBjb25zb2xlLmxvZygnQ2xpZW50OiBFcnJvciByZXNwb25zZTonLCBlcnJvclRleHQpO1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEhUVFAgJHtyZXNwb25zZS5zdGF0dXN9OiAke3Jlc3BvbnNlLnN0YXR1c1RleHR9YCk7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICBjb25zb2xlLmxvZygnQ2xpZW50OiBSZXNwb25zZSBkYXRhOicsIGRhdGEpO1xuICAgICAgXG4gICAgICBpZiAoZGF0YS5lcnJvcikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZGF0YS5lcnJvcik7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBkYXRhO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdTUEFSUUwgcXVlcnkgZmFpbGVkOicsIGVycm9yKTtcbiAgICAgIHRocm93IGVycm9yO1xuICAgIH1cbiAgfVxuXG4gIGFzeW5jIGdldENsYXNzZXMoKTogUHJvbWlzZTxDbGFzc0luZm9bXT4ge1xuICAgIGNvbnN0IHF1ZXJ5ID0gYFxuICAgICAgUFJFRklYIHJkZnM6IDxodHRwOi8vd3d3LnczLm9yZy8yMDAwLzAxL3JkZi1zY2hlbWEjPlxuICAgICAgXG4gICAgICBTRUxFQ1QgP2NsYXNzID9sYWJlbCA/Y29tbWVudCAoQ09VTlQoP2F0dHIpIGFzID9hdHRyQ291bnQpIFdIRVJFIHtcbiAgICAgICAgP2NsYXNzIGEgcmRmczpDbGFzcyAuXG4gICAgICAgIE9QVElPTkFMIHsgP2NsYXNzIHJkZnM6bGFiZWwgP2xhYmVsIH1cbiAgICAgICAgT1BUSU9OQUwgeyA/Y2xhc3MgcmRmczpjb21tZW50ID9jb21tZW50IH1cbiAgICAgICAgT1BUSU9OQUwgeyA/YXR0ciByZGZzOmRvbWFpbiA/Y2xhc3MgfVxuICAgICAgfVxuICAgICAgR1JPVVAgQlkgP2NsYXNzID9sYWJlbCA/Y29tbWVudFxuICAgICAgT1JERVIgQlkgP2xhYmVsID9jbGFzc1xuICAgICAgTElNSVQgMjBcbiAgICBgO1xuXG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgdGhpcy5leGVjdXRlUXVlcnkocXVlcnkpO1xuICAgIFxuICAgIHJldHVybiByZXN1bHQucmVzdWx0cy5iaW5kaW5ncy5tYXAoYmluZGluZyA9PiAoe1xuICAgICAgdXJpOiBiaW5kaW5nLmNsYXNzLnZhbHVlLFxuICAgICAgbGFiZWw6IGJpbmRpbmcubGFiZWw/LnZhbHVlLFxuICAgICAgY29tbWVudDogYmluZGluZy5jb21tZW50Py52YWx1ZSxcbiAgICAgIGF0dHJpYnV0ZUNvdW50OiBwYXJzZUludChiaW5kaW5nLmF0dHJDb3VudD8udmFsdWUgfHwgJzAnKSxcbiAgICB9KSk7XG4gIH1cblxuICBhc3luYyBnZXRTdGF0cygpOiBQcm9taXNlPHtcbiAgICB0b3RhbFRyaXBsZXM6IG51bWJlcjtcbiAgICB0b3RhbENsYXNzZXM6IG51bWJlcjtcbiAgICB0b3RhbFByb3BlcnRpZXM6IG51bWJlcjtcbiAgICB0ZW1wb3JhbFN0YXRlbWVudHM6IG51bWJlcjtcbiAgfT4ge1xuICAgIGNvbnN0IHF1ZXJ5ID0gYFxuICAgICAgUFJFRklYIHJkZnM6IDxodHRwOi8vd3d3LnczLm9yZy8yMDAwLzAxL3JkZi1zY2hlbWEjPlxuICAgICAgUFJFRklYIHJkZjogPGh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyM+XG4gICAgICBcbiAgICAgIFNFTEVDVCBcbiAgICAgICAgKENPVU5UKCopIGFzID90b3RhbFRyaXBsZXMpXG4gICAgICAgIChDT1VOVChESVNUSU5DVCA/Y2xhc3MpIGFzID90b3RhbENsYXNzZXMpXG4gICAgICAgIChDT1VOVChESVNUSU5DVCA/cHJvcCkgYXMgP3RvdGFsUHJvcHMpXG4gICAgICAgIChDT1VOVChESVNUSU5DVCA/c3RtdCkgYXMgP3RlbXBvcmFsU3RtdHMpXG4gICAgICBXSEVSRSB7XG4gICAgICAgID9zID9wID9vIC5cbiAgICAgICAgT1BUSU9OQUwgeyA/Y2xhc3MgYSByZGZzOkNsYXNzIH1cbiAgICAgICAgT1BUSU9OQUwgeyA/cHJvcCBhIHJkZjpQcm9wZXJ0eSB9XG4gICAgICAgIE9QVElPTkFMIHsgP3N0bXQgYSByZGY6U3RhdGVtZW50IH1cbiAgICAgIH1cbiAgICBgO1xuXG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgdGhpcy5leGVjdXRlUXVlcnkocXVlcnkpO1xuICAgIGNvbnN0IGJpbmRpbmcgPSByZXN1bHQucmVzdWx0cy5iaW5kaW5nc1swXTtcblxuICAgIHJldHVybiB7XG4gICAgICB0b3RhbFRyaXBsZXM6IHBhcnNlSW50KGJpbmRpbmcudG90YWxUcmlwbGVzPy52YWx1ZSB8fCAnMCcpLFxuICAgICAgdG90YWxDbGFzc2VzOiBwYXJzZUludChiaW5kaW5nLnRvdGFsQ2xhc3Nlcz8udmFsdWUgfHwgJzAnKSxcbiAgICAgIHRvdGFsUHJvcGVydGllczogcGFyc2VJbnQoYmluZGluZy50b3RhbFByb3BzPy52YWx1ZSB8fCAnMCcpLFxuICAgICAgdGVtcG9yYWxTdGF0ZW1lbnRzOiBwYXJzZUludChiaW5kaW5nLnRlbXBvcmFsU3RtdHM/LnZhbHVlIHx8ICcwJylcbiAgICB9O1xuICB9XG5cbiAgLy8gQWRkIG90aGVyIG1ldGhvZHMgYXMgbmVlZGVkLi4uXG59Il0sIm5hbWVzIjpbIkdyYXBoREJDbGllbnQiLCJleGVjdXRlUXVlcnkiLCJxdWVyeSIsImNvbnNvbGUiLCJsb2ciLCJyZXNwb25zZSIsImZldGNoIiwicmVwb3NpdG9yeSIsIm1ldGhvZCIsImhlYWRlcnMiLCJib2R5IiwiVVJMU2VhcmNoUGFyYW1zIiwic3RhdHVzIiwib2siLCJlcnJvclRleHQiLCJ0ZXh0IiwiRXJyb3IiLCJzdGF0dXNUZXh0IiwiZGF0YSIsImpzb24iLCJlcnJvciIsImdldENsYXNzZXMiLCJyZXN1bHQiLCJyZXN1bHRzIiwiYmluZGluZ3MiLCJtYXAiLCJiaW5kaW5nIiwidXJpIiwiY2xhc3MiLCJ2YWx1ZSIsImxhYmVsIiwiY29tbWVudCIsImF0dHJpYnV0ZUNvdW50IiwicGFyc2VJbnQiLCJhdHRyQ291bnQiLCJnZXRTdGF0cyIsInRvdGFsVHJpcGxlcyIsInRvdGFsQ2xhc3NlcyIsInRvdGFsUHJvcGVydGllcyIsInRvdGFsUHJvcHMiLCJ0ZW1wb3JhbFN0YXRlbWVudHMiLCJ0ZW1wb3JhbFN0bXRzIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/sparql-client.ts\n"));

/***/ })

});