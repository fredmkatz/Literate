// Generated Lark grammar for Presentable Object Model
// Generator: PomGrammarGenerator
// Model: Lit_01
// Format: dull

start:	camel_case
		|	is_optional
		|	reference_or_value
		|	is_really_required
		|	paragraph
		|	annotation
		|	component
		|	data_type
		|	data_type_clause
		|	formula_coding
		|	formula
starter0:	start+	// For any number of any NT


//          ========== UpperCamel ==========
upper_camel:	/[A-Za-z][A-Za-z0-9]*/

//          ========== LowerCamel ==========
lower_camel:	/[A-Za-z][A-Za-z0-9]*/

//          ========== CamelCase ==========
camel_case:	/[A-Za-z][A-Za-z0-9]*/

//          ========== IsOptional ==========
is_optional:	"optional"i | "true"i | "sure"i | "yes"i | "required"i | "false"i | "no way"i

//          ========== ReferenceOrValue ==========
reference_or_value:	"reference"i | "value"i

//          ========== IsReallyRequired ==========
is_really_required:	"required"i | "true"i | "sure"i | "yes"i | "optional"i | "false"i | "no way"i

//          ========== Paragraph ==========
paragraph:	one_liner
	|	paragraph__content__value

//  ... value rules for paragraph  ...
paragraph__content__value:	STRING


//          ========== OneLiner ==========
one_liner:	one_liner__content__value

//  ... value rules for one_liner  ...
one_liner__content__value:	STRING


//          ========== ClassName ==========
class_name:	/[A-Za-z][A-Za-z0-9]*/

//          ========== Label ==========
label:	/[A-Za-z][A-Za-z0-9]*/

//          ========== Annotation ==========
annotation:	[ annotation__emoji__value ] annotation__label__value COLON annotation__content__value NEWLINE

//  ... value rules for annotation  ...
annotation__label__value:	label
annotation__content__value:	one_liner
annotation__emoji__value:	STRING


//          ========== Component ==========
component:	subject_e | class | attribute_section | attribute

//          ========== SubjectE ==========
subject_e_clause:	NAME_QF COLON camel_case NEWLINE	-> subject_e__name__simple
	|	ONE_LINER_QF COLON one_liner NEWLINE	-> subject_e__one_liner__simple
	|	ABBREVIATION_QF COLON upper_camel NEWLINE	-> subject_e__abbreviation__simple
	|	paragraph+	-> subject_e__elaboration__list
	|	annotation+	-> subject_e__annotations__list
	|	class+	-> subject_e__classes__list
subject_e:	subject_d
	|	HASH HASH HASH HASH HASH LBRACE subject_e__name__value [ DASH subject_e__one_liner__value ] NEWLINE  (subject_e_clause)+

//  ... value rules for subject_e  ...
subject_e__name__value:	camel_case
subject_e__one_liner__value:	one_liner


//          ========== SubjectD ==========
subject_d_clause:	NAME_QF COLON camel_case NEWLINE	-> subject_d__name__simple
	|	ONE_LINER_QF COLON one_liner NEWLINE	-> subject_d__one_liner__simple
	|	ABBREVIATION_QF COLON upper_camel NEWLINE	-> subject_d__abbreviation__simple
	|	paragraph+	-> subject_d__elaboration__list
	|	annotation+	-> subject_d__annotations__list
	|	class+	-> subject_d__classes__list
	|	subject_e+	-> subject_d__subjects__list
subject_d:	subject_c
	|	HASH HASH HASH HASH LBRACE subject_d__name__value [ DASH subject_d__one_liner__value ] NEWLINE  (subject_d_clause)+

//  ... value rules for subject_d  ...
subject_d__name__value:	camel_case
subject_d__one_liner__value:	one_liner


//          ========== SubjectC ==========
subject_c_clause:	NAME_QF COLON camel_case NEWLINE	-> subject_c__name__simple
	|	ONE_LINER_QF COLON one_liner NEWLINE	-> subject_c__one_liner__simple
	|	ABBREVIATION_QF COLON upper_camel NEWLINE	-> subject_c__abbreviation__simple
	|	paragraph+	-> subject_c__elaboration__list
	|	annotation+	-> subject_c__annotations__list
	|	class+	-> subject_c__classes__list
	|	subject_d+	-> subject_c__subjects__list
subject_c:	subject_b
	|	HASH HASH HASH LBRACE subject_c__name__value [ DASH subject_c__one_liner__value ] NEWLINE  (subject_c_clause)+

//  ... value rules for subject_c  ...
subject_c__name__value:	camel_case
subject_c__one_liner__value:	one_liner


//          ========== SubjectB ==========
subject_b_clause:	NAME_QF COLON camel_case NEWLINE	-> subject_b__name__simple
	|	ONE_LINER_QF COLON one_liner NEWLINE	-> subject_b__one_liner__simple
	|	ABBREVIATION_QF COLON upper_camel NEWLINE	-> subject_b__abbreviation__simple
	|	paragraph+	-> subject_b__elaboration__list
	|	annotation+	-> subject_b__annotations__list
	|	class+	-> subject_b__classes__list
	|	subject_c+	-> subject_b__subjects__list
subject_b:	ldm
	|	HASH HASH LBRACE subject_b__name__value [ DASH subject_b__one_liner__value ] NEWLINE  (subject_b_clause)+

//  ... value rules for subject_b  ...
subject_b__name__value:	camel_case
subject_b__one_liner__value:	one_liner


//          ========== Ldm ==========
ldm_clause:	NAME_QF COLON camel_case NEWLINE	-> ldm__name__simple
	|	ONE_LINER_QF COLON one_liner NEWLINE	-> ldm__one_liner__simple
	|	ABBREVIATION_QF COLON upper_camel NEWLINE	-> ldm__abbreviation__simple
	|	paragraph+	-> ldm__elaboration__list
	|	annotation+	-> ldm__annotations__list
	|	class+	-> ldm__classes__list
	|	subject_b+	-> ldm__subjects__list
ldm:	HASH LBRACE ldm__name__value [ DASH ldm__one_liner__value ] NEWLINE  (ldm_clause)+

//  ... value rules for ldm  ...
ldm__name__value:	camel_case
ldm__one_liner__value:	one_liner


//          ========== DataType ==========
data_type:	base_data_type | list_data_type | set_data_type | mapping_data_type

//          ========== BaseDataType ==========
base_data_type:	base_data_type__class_name__value [ DASH base_data_type__is_value__value ]

//  ... value rules for base_data_type  ...
base_data_type__class_name__value:	STRING
base_data_type__is_value__value:	reference_or_value


//          ========== ListDataType ==========
list_data_type:	LIST_Q OF_Q list_data_type__element_type__value

//  ... value rules for list_data_type  ...
list_data_type__element_type__value:	data_type


//          ========== SetDataType ==========
set_data_type:	SET_Q OF_Q set_data_type__element_type__value

//  ... value rules for set_data_type  ...
set_data_type__element_type__value:	data_type


//          ========== MappingDataType ==========
mapping_data_type:	MAPPING_Q FROM_Q mapping_data_type__domain_type__value TO_Q mapping_data_type__range_type__value

//  ... value rules for mapping_data_type  ...
mapping_data_type__domain_type__value:	data_type
mapping_data_type__range_type__value:	data_type


//          ========== DataTypeClause ==========
data_type_clause:	data_type_clause__is_optional__value data_type_clause__data_type__value [ data_type_clause__cardinality__value ]

//  ... value rules for data_type_clause  ...
data_type_clause__data_type__value:	data_type
data_type_clause__is_optional__value:	BOOLEAN
data_type_clause__cardinality__value:	STRING


//          ========== FormulaCoding ==========
formula_coding_clause:	CONTENT_QF COLON STRING NEWLINE	-> formula_coding__content__str
formula_coding:	( formula_coding_clause )+

//          ========== Formula ==========
formula_clause:	ENGLISH_QF COLON STRING NEWLINE	-> formula__english__str
	|	CODE_QF COLON formula_coding NEWLINE	-> formula__code__simple
formula:	constraint | derivation | default
	|	( formula_clause )+

//          ========== Constraint ==========
constraint_clause:	ENGLISH_QF COLON STRING NEWLINE	-> constraint__english__str
	|	CODE_QF COLON formula_coding NEWLINE	-> constraint__code__simple
	|	MESSAGE_QF COLON STRING NEWLINE	-> constraint__message__str
	|	SEVERITY_QF COLON STRING NEWLINE	-> constraint__severity__str
constraint:	( constraint_clause )+

//          ========== Derivation ==========
derivation_clause:	ENGLISH_QF COLON STRING NEWLINE	-> derivation__english__str
	|	CODE_QF COLON formula_coding NEWLINE	-> derivation__code__simple
derivation:	( derivation_clause )+

//          ========== Default ==========
default_clause:	ENGLISH_QF COLON STRING NEWLINE	-> default__english__str
	|	CODE_QF COLON formula_coding NEWLINE	-> default__code__simple
default:	( default_clause )+

//          ========== Class ==========
class_clause:	NAME_QF COLON upper_camel NEWLINE	-> class__name__simple
	|	ONE_LINER_QF COLON one_liner NEWLINE	-> class__one_liner__simple
	|	ABBREVIATION_QF COLON upper_camel NEWLINE	-> class__abbreviation__simple
	|	paragraph+	-> class__elaboration__list
	|	annotation+	-> class__annotations__list
	|	PLURAL_QF COLON upper_camel NEWLINE	-> class__plural__simple
	|	SUBTYPE_OF_QF COLON class_name (COMMA class_name)+ NEWLINE	-> class__subtype_of__list
	|	SUBTYPES_QF COLON class_name (COMMA class_name)+ NEWLINE	-> class__subtypes__list
	|	BASED_ON_QF COLON class_name (COMMA class_name)+ NEWLINE	-> class__based_on__list
	|	DEPENDENTS_QF COLON class_name (COMMA class_name)+ NEWLINE	-> class__dependents__list
	|	IS_VALUE_TYPE_QF COLON BOOLEAN NEWLINE	-> class__is_value_type__bool
	|	WHERE_QF COLON STRING NEWLINE	-> class__where__str
	|	attribute+	-> class__attributes__list
	|	attribute_section+	-> class__attribute_sections__list
class:	value_type | reference_type
	|	UNDERSCORE CLASS_Q COLON class__name__value [ DASH class__one_liner__value ] N  (class_clause)+

//  ... value rules for class  ...
class__name__value:	upper_camel
class__one_liner__value:	one_liner


//          ========== ValueType ==========
value_type_clause:	NAME_QF COLON upper_camel NEWLINE	-> value_type__name__simple
	|	ONE_LINER_QF COLON one_liner NEWLINE	-> value_type__one_liner__simple
	|	ABBREVIATION_QF COLON upper_camel NEWLINE	-> value_type__abbreviation__simple
	|	paragraph+	-> value_type__elaboration__list
	|	annotation+	-> value_type__annotations__list
	|	PLURAL_QF COLON upper_camel NEWLINE	-> value_type__plural__simple
	|	SUBTYPE_OF_QF COLON class_name (COMMA class_name)+ NEWLINE	-> value_type__subtype_of__list
	|	SUBTYPES_QF COLON class_name (COMMA class_name)+ NEWLINE	-> value_type__subtypes__list
	|	BASED_ON_QF COLON class_name (COMMA class_name)+ NEWLINE	-> value_type__based_on__list
	|	DEPENDENTS_QF COLON class_name (COMMA class_name)+ NEWLINE	-> value_type__dependents__list
	|	IS_VALUE_TYPE_QF COLON BOOLEAN NEWLINE	-> value_type__is_value_type__bool
	|	WHERE_QF COLON STRING NEWLINE	-> value_type__where__str
	|	attribute+	-> value_type__attributes__list
	|	attribute_section+	-> value_type__attribute_sections__list
value_type:	UNDERSCORE value_type__name__value [ DASH value_type__one_liner__value ] NEWLINE  (value_type_clause)+

//  ... value rules for value_type  ...
value_type__name__value:	upper_camel
value_type__one_liner__value:	one_liner


//          ========== ReferenceType ==========
reference_type_clause:	NAME_QF COLON upper_camel NEWLINE	-> reference_type__name__simple
	|	ONE_LINER_QF COLON one_liner NEWLINE	-> reference_type__one_liner__simple
	|	ABBREVIATION_QF COLON upper_camel NEWLINE	-> reference_type__abbreviation__simple
	|	paragraph+	-> reference_type__elaboration__list
	|	annotation+	-> reference_type__annotations__list
	|	PLURAL_QF COLON upper_camel NEWLINE	-> reference_type__plural__simple
	|	SUBTYPE_OF_QF COLON class_name (COMMA class_name)+ NEWLINE	-> reference_type__subtype_of__list
	|	SUBTYPES_QF COLON class_name (COMMA class_name)+ NEWLINE	-> reference_type__subtypes__list
	|	BASED_ON_QF COLON class_name (COMMA class_name)+ NEWLINE	-> reference_type__based_on__list
	|	DEPENDENTS_QF COLON class_name (COMMA class_name)+ NEWLINE	-> reference_type__dependents__list
	|	IS_VALUE_TYPE_QF COLON BOOLEAN NEWLINE	-> reference_type__is_value_type__bool
	|	WHERE_QF COLON STRING NEWLINE	-> reference_type__where__str
	|	attribute+	-> reference_type__attributes__list
	|	attribute_section+	-> reference_type__attribute_sections__list
reference_type:	UNDERSCORE reference_type__name__value [ DASH reference_type__one_liner__value ] NEWLINE  (reference_type_clause)+

//  ... value rules for reference_type  ...
reference_type__name__value:	upper_camel
reference_type__one_liner__value:	one_liner


//          ========== AttributeSection ==========
attribute_section_clause:	NAME_QF COLON camel_case NEWLINE	-> attribute_section__name__simple
	|	ONE_LINER_QF COLON one_liner NEWLINE	-> attribute_section__one_liner__simple
	|	ABBREVIATION_QF COLON upper_camel NEWLINE	-> attribute_section__abbreviation__simple
	|	paragraph+	-> attribute_section__elaboration__list
	|	annotation+	-> attribute_section__annotations__list
	|	IS_REQUIRED_QF COLON is_really_required NEWLINE	-> attribute_section__is_required__simple
	|	attribute+	-> attribute_section__attributes__list
attribute_section:	DASH attribute_section__name__value [ DASH attribute_section__one_liner__value ] [ LPAREN attribute_section__is_required__value RPAREN ] NEWLINE  (attribute_section_clause)+

//  ... value rules for attribute_section  ...
attribute_section__name__value:	camel_case
attribute_section__one_liner__value:	one_liner
attribute_section__is_required__value:	is_really_required


//          ========== Attribute ==========
attribute_clause:	NAME_QF COLON lower_camel NEWLINE	-> attribute__name__simple
	|	ONE_LINER_QF COLON one_liner NEWLINE	-> attribute__one_liner__simple
	|	ABBREVIATION_QF COLON upper_camel NEWLINE	-> attribute__abbreviation__simple
	|	paragraph+	-> attribute__elaboration__list
	|	annotation+	-> attribute__annotations__list
	|	DATA_TYPE_CLAUSE_QF COLON data_type_clause NEWLINE	-> attribute__data_type_clause__simple
	|	DERIVATION_QF COLON derivation NEWLINE	-> attribute__derivation__simple
	|	DEFAULT_QF COLON default NEWLINE	-> attribute__default__simple
	|	constraint+	-> attribute__constraints__list
attribute:	DASH attribute__name__value [ DASH attribute__one_liner__value ] [ LPAREN attribute__data_type_clause__value RPAREN ] N  (attribute_clause)+

//  ... value rules for attribute  ...
attribute__name__value:	lower_camel
attribute__one_liner__value:	one_liner
attribute__data_type_clause__value:	data_type_clause


// ===== Terminal definitions =====
// ===== Field name literals =====
ABBREVIATION_QF: "abbreviation"
ANNOTATIONS_QF: "annotations"
ATTRIBUTES_QF: "attributes"
ATTRIBUTE_SECTIONS_QF: "attribute_sections"
BASED_ON_QF: "based_on"
CARDINALITY_QF: "cardinality"
CLASSES_QF: "classes"
CLASS_NAME_QF: "class_name"
CODE_QF: "code"
CONSTRAINTS_QF: "constraints"
CONTENT_QF: "content"
DATA_TYPE_CLAUSE_QF: "data_type_clause"
DATA_TYPE_QF: "data_type"
DEFAULT_QF: "default"
DEPENDENTS_QF: "dependents"
DERIVATION_QF: "derivation"
DOMAIN_TYPE_QF: "domain_type"
ELABORATION_QF: "elaboration"
ELEMENT_TYPE_QF: "element_type"
EMOJI_QF: "emoji"
ENGLISH_QF: "english"
IS_ALSO_OPTIONAL_QF: "is_also_optional"
IS_OPTIONAL_QF: "is_optional"
IS_REQUIRED_QF: "is_required"
IS_VALUE_QF: "is_value"
IS_VALUE_TYPE_QF: "is_value_type"
LABEL_QF: "label"
MESSAGE_QF: "message"
NAME_QF: "name"
ONE_LINER_QF: "one_liner"
PLURAL_QF: "plural"
RANGE_TYPE_QF: "range_type"
SEVERITY_QF: "severity"
SUBJECTS_QF: "subjects"
SUBTYPES_QF: "subtypes"
SUBTYPE_OF_QF: "subtype_of"
WHERE_QF: "where"

// ===== Named Punctuation =====
HASH: "#"
ASTERISK: "*"
UNDERSCORE: "_"
DASH: "-"
LPAREN: "("
RPAREN: ")"
LBRACK: "["
RBRACK: "]"
LBRACE: "{"
RBRACE: "}"
COMMA: ","
COLON: ":"
DOT: "."
NEWLINE: "\n"

// ===== Tokens =====
CLASS_Q: "class"
FROM_Q: "from"
LIST_Q: "list"
MAPPING_Q: "mapping"
N: "n"
OF_Q: "of"
SET_Q: "set"
TO_Q: "to"

// ===== Value types =====
STRING: /"\""[^"\"]*"\""/
NUMBER: /[0-9]+(\.[0-9]+)?/
BOOLEAN: "true" | "false"
IDENTIFIER: /[a-zA-Z][a-zA-Z0-9_]*/

// Whitespace handling
WHITESPACE: /[ \t\n\r]+/
COMMENT: "//" /[^\n]*/ "\n"
%ignore WHITESPACE
%ignore COMMENT