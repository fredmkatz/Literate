'# Literate Data Model\n\n## Pr...' Rule: start
'# Literate Data Model\n\n## Pr...' . Rule: document
'# Literate Data Model\n\n## Pr...' . . Rule: section
'# Literate Data Model\n'           . . . Rule: section_head
'# Literate Data Model\n'           . . . . Token: SECTION_LINE
'\n'                                . . . Rule: elaboration
'\n'                                . . . . Rule: blank_line
'\n'                                . . . . . Token: BLANK_LINE
'## Preliminaries\nIn Literate ...' . . . Rule: section
'## Preliminaries\nIn Literate ...' . . . . Rule: section_head
'## Preliminaries\n'                . . . . . Token: SECTION_LINE
'In Literate Data Modeling, the...' . . . . . Token: TEXT_LINE
'```\nSample code block between...' . . . . Rule: elaboration
'```\nSample code block between...' . . . . . Rule: code_block
'```\nSample code block between...' . . . . . . Token: CODE_BLOCK
'\n'                                . . . . . Rule: blank_line
'\n'                                . . . . . . Token: BLANK_LINE
'\n'                                . . . . . Rule: blank_line
'\n'                                . . . . . . Token: BLANK_LINE
'We present the Component class...' . . . . . Rule: paragraph
'We present the Component class...' . . . . . . Token: TEXT_LINE
'\n'                                . . . . . Rule: blank_line
'\n'                                . . . . . . Token: BLANK_LINE
'\n'                                . . . . . Rule: blank_line
'\n'                                . . . . . . Token: BLANK_LINE
'_ **Component** - An element o...' . . . . Rule: class
'_ **Component** - An element o...' . . . . . Rule: class_head
'_ **Component** - An element o...' . . . . . . Token: CLASS_LINE
'  OneLiner  \n'                    . . . . . . Token: TEXT_LINE
'In Literate Data Modeling, the...' . . . . . . Token: TEXT_LINE
'```\nSample code block between...' . . . . . Rule: elaboration
'```\nSample code block between...' . . . . . . Rule: code_block
'```\nSample code block between...' . . . . . . . Token: CODE_BLOCK
'We present the Component class...' . . . . . . Rule: paragraph
'We present the Component class...' . . . . . . . Token: TEXT_LINE
'abbreviation: COMPT\n'             . . . . . . . Token: TEXT_LINE
'\n'                                . . . . . . Rule: blank_line
'\n'                                . . . . . . . Token: BLANK_LINE
'Subtypes: ComponentA, Componen...' . . . . . . Rule: paragraph
'Subtypes: ComponentA, Componen...' . . . . . . . Token: TEXT_LINE
'    Trying an elaboration for ...' . . . . . . . Token: TEXT_LINE
'    End of first paragraph\n'      . . . . . . . Token: TEXT_LINE
'\n'                                . . . . . . Rule: blank_line
'\n'                                . . . . . . . Token: BLANK_LINE
'    Start of second paragraph....' . . . . . . Rule: paragraph
'    Start of second paragraph....' . . . . . . . Token: TEXT_LINE
'\n'                                . . . . . . Rule: blank_line
'\n'                                . . . . . . . Token: BLANK_LINE
'BasedOn: ComponentA, Component...' . . . . . Rule: field
'BasedOn: ComponentA, Component...' . . . . . . Token: FIELD_LINE
'- parentClass - the supertype ...' . . . . . Rule: attribute
'- parentClass - the supertype ...' . . . . . . Rule: attribute_head
'- parentClass - the supertype ...' . . . . . . . Token: ATTRIBUTE_LINE
'    Trying an elaboration for ...' . . . . . . . Token: TEXT_LINE
'    End of first paragraph\n'      . . . . . . . Token: TEXT_LINE
'    Start of second paragraph....' . . . . . . . Token: TEXT_LINE
'inverseOf: Class.child_class\n'    . . . . . . . Token: TEXT_LINE
'    Trying an elaboration for ...' . . . . . . . Token: TEXT_LINE
'    End of first paragraph\n'      . . . . . . . Token: TEXT_LINE
'    Start of second paragraph....' . . . . . . . Token: TEXT_LINE
'inverse: Class.child_class2\n'     . . . . . . . Token: TEXT_LINE
'\n'                                . . . . . . Rule: elaboration
'\n'                                . . . . . . . Rule: blank_line
'\n'                                . . . . . . . . Token: BLANK_LINE
'- **normalName** - the name of...' . . . . . Rule: attribute
'- **normalName** - the name of...' . . . . . . Rule: attribute_head
'- **normalName** - the name of...' . . . . . . . Token: ATTRIBUTE_LINE
'- **name** - The name of the c...' . . . . . Rule: attribute
'- **name** - The name of the c...' . . . . . . Rule: attribute_head
'- **name** - The name of the c...' . . . . . . . Token: ATTRIBUTE_LINE
'\n\n\n'                            . . . . . . Rule: elaboration
'\n'                                . . . . . . . Rule: blank_line
'\n'                                . . . . . . . . Token: BLANK_LINE
'\n'                                . . . . . . . Rule: blank_line
'\n'                                . . . . . . . . Token: BLANK_LINE
'\n'                                . . . . . . . Rule: blank_line
'\n'                                . . . . . . . . Token: BLANK_LINE
'- **qualifiedName** - (*Qualif...' . . . . . Rule: attribute
'- **qualifiedName** - (*Qualif...' . . . . . . Rule: attribute_head
'- **qualifiedName** - (*Qualif...' . . . . . . . Token: ATTRIBUTE_LINE
'- **abbreviatedName** - a shor...' . . . . . Rule: attribute
'- **abbreviatedName** - a shor...' . . . . . . Rule: attribute_head
'- **abbreviatedName** - a shor...' . . . . . . . Token: ATTRIBUTE_LINE
'	***Default***: name\n'            . . . . . . . Token: TEXT_LINE
'    Trying an elaboration for ...' . . . . . . . Token: TEXT_LINE
'    End of first paragraph\n'      . . . . . . . Token: TEXT_LINE
'    Start of second paragraph....' . . . . . . . Token: TEXT_LINE
'  code: This is the OCL code f...' . . . . . . . Token: TEXT_LINE
'      Trying an elaboration fo...' . . . . . . . Token: TEXT_LINE
'    End of first paragraph\n'      . . . . . . . Token: TEXT_LINE
'    Start of second paragraph....' . . . . . . . Token: TEXT_LINE
'  English: And thii is an engl...' . . . . . . . Token: TEXT_LINE
'  constraint: this is the firs...' . . . . . . . Token: TEXT_LINE
'  code: OCL for first constrai...' . . . . . . . Token: TEXT_LINE
'  english: English for first c...' . . . . . . . Token: TEXT_LINE
'  Severity: Harsh\n'               . . . . . . . Token: TEXT_LINE
'  Message: {name} is all wrong...' . . . . . . Rule: elaboration
'  Message: {name} is all wrong...' . . . . . . . Rule: paragraph
'  Message: {name} is all wrong...' . . . . . . . . Token: TEXT_LINE
'  constraint: this is the seco...' . . . . . . . . Token: TEXT_LINE
'  code: OCL for second constra...' . . . . . . . . Token: TEXT_LINE
'  english: English for second ...' . . . . . . . . Token: TEXT_LINE
'Severity: Harsh second\n  Mess...' . . . . . . Rule: field
'Severity: Harsh second\n'          . . . . . . . Token: FIELD_LINE
'  Message: {name} is all wrong...' . . . . . . . Token: TEXT_LINE
'	***Example***: "LDM" is the s...' . . . . . . . Token: TEXT_LINE
'- **oneLiner** - A brief, one-...' . . . . . Rule: attribute
'- **oneLiner** - A brief, one-...' . . . . . . Rule: attribute_head
'- **oneLiner** - A brief, one-...' . . . . . . . Token: ATTRIBUTE_LINE
'\n'                                . . . . . . Rule: elaboration
'\n'                                . . . . . . . Rule: blank_line
'\n'                                . . . . . . . . Token: BLANK_LINE
'- **elaboration** - A more det...' . . . . . Rule: attribute
'- **elaboration** - A more det...' . . . . . . Rule: attribute_head
'- **elaboration** - A more det...' . . . . . . . Token: ATTRIBUTE_LINE
'__  ***For Machinery*** - mech...' . . . . Rule: class
'__  ***For Machinery*** - mech...' . . . . . Rule: class_head
'__  ***For Machinery*** - mech...' . . . . . . Token: CLASS_LINE
'- **isEmbellishment** - Indica...' . . . . . Rule: attribute
'- **isEmbellishment** - Indica...' . . . . . . Rule: attribute_head
'- **isEmbellishment** - Indica...' . . . . . . . Token: ATTRIBUTE_LINE
'  🔄 ***Default***: false\n'        . . . . . . . Token: TEXT_LINE
'  🔄  ***Note***: This attribut...' . . . . . . Rule: elaboration
'  🔄  ***Note***: This attribut...' . . . . . . . Rule: paragraph
'  🔄  ***Note***: This attribut...' . . . . . . . . Token: TEXT_LINE
'  And after that very long one...' . . . . . . . . Token: TEXT_LINE
'  With a second line in the fi...' . . . . . . . . Token: TEXT_LINE
'  And another paragraph, too.\...' . . . . . . . . Token: TEXT_LINE
'  Also with a second line\n'       . . . . . . . . Token: TEXT_LINE
'    wildly: This is an unregis...' . . . . . . . . Token: TEXT_LINE
'    minorNote: This is a minor...' . . . . . . . . Token: TEXT_LINE
'majorNote: And this is a major...' . . . . . . Rule: field
'majorNote: And this is a major...' . . . . . . . Token: FIELD_LINE
'__  ***Markdown Support***\n- ...' . . . . Rule: class
'__  ***Markdown Support***\n'      . . . . . Rule: class_head
'__  ***Markdown Support***\n'      . . . . . . Token: CLASS_LINE
'- **mdPrefix** (*[String](#str...' . . . . . Rule: attribute
'- **mdPrefix** (*[String](#str...' . . . . . . Rule: attribute_head
'- **mdPrefix** (*[String](#str...' . . . . . . . Token: ATTRIBUTE_LINE
'	🆎 ***Derivation***: ""\n'         . . . . . . Rule: elaboration
'	🆎 ***Derivation***: ""\n'         . . . . . . . Rule: paragraph
'	🆎 ***Derivation***: ""\n'         . . . . . . . . Token: TEXT_LINE
'- **mdSuffix** (*[String](#str...' . . . . . Rule: attribute
'- **mdSuffix** (*[String](#str...' . . . . . . Rule: attribute_head
'- **mdSuffix** (*[String](#str...' . . . . . . . Token: ATTRIBUTE_LINE
'	🆎 ***Derivation***: ""\n'         . . . . . . Rule: elaboration
'	🆎 ***Derivation***: ""\n'         . . . . . . . Rule: paragraph
'	🆎 ***Derivation***: ""\n'         . . . . . . . . Token: TEXT_LINE
'- **mdTopLine** (*[String](#st...' . . . . . Rule: attribute
'- **mdTopLine** (*[String](#st...' . . . . . . Rule: attribute_head
'- **mdTopLine** (*[String](#st...' . . . . . . . Token: ATTRIBUTE_LINE
'	🆎 ***Derivation***: mdPrefix ...' . . . . . . Rule: elaboration
'	🆎 ***Derivation***: mdPrefix ...' . . . . . . . Rule: paragraph
'	🆎 ***Derivation***: mdPrefix ...' . . . . . . . . Token: TEXT_LINE
'_ **AnnotationType** - a kind ...' . . . . Rule: class
'_ **AnnotationType** - a kind ...' . . . . . Rule: class_head
'_ **AnnotationType** - a kind ...' . . . . . . Token: CLASS_LINE
'And it can be continued on fre...' . . . . . Rule: elaboration
'And it can be continued on fre...' . . . . . . Rule: paragraph
'And it can be continued on fre...' . . . . . . . Token: TEXT_LINE
'However many you want.\n'          . . . . . . . Token: TEXT_LINE
'But only up to a blank line or...' . . . . . . . Token: TEXT_LINE
'See. this is not included in t...' . . . . . . . Token: TEXT_LINE
'***Based on*** : Literate Data...' . . . . . . . Token: TEXT_LINE
'***Note***: Each LDM declares ...' . . . . . . . Token: TEXT_LINE
'But, if none of these fit, you...' . . . . . . . Token: TEXT_LINE
'- **emoji** - an emoji (Emoji)...' . . . . . Rule: attribute
'- **emoji** - an emoji (Emoji)...' . . . . . . Rule: attribute_head
'- **emoji** - an emoji (Emoji)...' . . . . . . . Token: ATTRIBUTE_LINE
'- **emojiName** - an emoji (St...' . . . . . Rule: attribute
'- **emojiName** - an emoji (St...' . . . . . . Rule: attribute_head
'- **emojiName** - an emoji (St...' . . . . . . . Token: ATTRIBUTE_LINE
'- **emojiUnicode** - the Unico...' . . . . . Rule: attribute
'- **emojiUnicode** - the Unico...' . . . . . . Rule: attribute_head
'- **emojiUnicode** - the Unico...' . . . . . . . Token: ATTRIBUTE_LINE
'- **label** - A short label to...' . . . . . Rule: attribute
'- **label** - A short label to...' . . . . . . Rule: attribute_head
'- **label** - A short label to...' . . . . . . . Token: ATTRIBUTE_LINE
'- **plural** - the plural form...' . . . . . Rule: attribute
'- **plural** - the plural form...' . . . . . . Rule: attribute_head
'- **plural** - the plural form...' . . . . . . . Token: ATTRIBUTE_LINE
'    Default: based on label\n'     . . . . . . Rule: elaboration
'    Default: based on label\n'     . . . . . . . Rule: paragraph
'    Default: based on label\n'     . . . . . . . . Token: TEXT_LINE
'- **Purpose** - the intended r...' . . . . . Rule: attribute
'- **Purpose** - the intended r...' . . . . . . Rule: attribute_head
'- **Purpose** - the intended r...' . . . . . . . Token: ATTRIBUTE_LINE
'_ ValueType: **Annotation**  \...' . . . . Rule: class
'_ ValueType: **Annotation**  \...' . . . . . Rule: class_head
'_ ValueType: **Annotation**  \...' . . . . . . Token: CLASS_LINE
'A note or comment associated w...' . . . . . . Token: TEXT_LINE
'***Based on***: Component \n'      . . . . . Rule: elaboration
'***Based on***: Component \n'      . . . . . . Rule: paragraph
'***Based on***: Component \n'      . . . . . . . Token: TEXT_LINE
'- **annotationType** - (option...' . . . . . Rule: attribute
'- **annotationType** - (option...' . . . . . . Rule: attribute_head
'- **annotationType** - (option...' . . . . . . . Token: ATTRIBUTE_LINE
'Note: An Annotation is conside...' . . . . . . Rule: elaboration
'Note: An Annotation is conside...' . . . . . . . Rule: paragraph
'Note: An Annotation is conside...' . . . . . . . . Token: TEXT_LINE
'- **label** - A short label to...' . . . . . Rule: attribute
'- **label** - A short label to...' . . . . . . Rule: attribute_head
'- **label** - A short label to...' . . . . . . . Token: ATTRIBUTE_LINE
'     \n'                           . . . . . . . Token: TEXT_LINE
'     But any short label is va...' . . . . . . Rule: elaboration
'     But any short label is va...' . . . . . . . Rule: paragraph
'     But any short label is va...' . . . . . . . . Token: TEXT_LINE
'Default: from annotationType\n'    . . . . . . Rule: field
'Default: from annotationType\n'    . . . . . . . Token: FIELD_LINE
'- **Emoji** - (optional Emoji)...' . . . . . Rule: attribute
'- **Emoji** - (optional Emoji)...' . . . . . . Rule: attribute_head
'- **Emoji** - (optional Emoji)...' . . . . . . . Token: ATTRIBUTE_LINE
'	Default: from annotation type...' . . . . . . Rule: elaboration
'	Default: from annotation type...' . . . . . . . Rule: paragraph
'	Default: from annotation type...' . . . . . . . . Token: TEXT_LINE
'\n'                                . . . . . . . Rule: blank_line
'\n'                                . . . . . . . . Token: BLANK_LINE
'\n'                                . . . . . . . Rule: blank_line
'\n'                                . . . . . . . . Token: BLANK_LINE
'- **content** - The content or...' . . . . . Rule: attribute
'- **content** - The content or...' . . . . . . Rule: attribute_head
'- **content** - The content or...' . . . . . . . Token: ATTRIBUTE_LINE
'__ ***For Machinery***\n- **is...' . . . . Rule: class
'__ ***For Machinery***\n'          . . . . . Rule: class_head
'__ ***For Machinery***\n'          . . . . . . Token: CLASS_LINE
'- **isEmbellishment** - Indica...' . . . . . Rule: attribute
'- **isEmbellishment** - Indica...' . . . . . . Rule: attribute_head
'- **isEmbellishment** - Indica...' . . . . . . . Token: ATTRIBUTE_LINE
'  🔄 ***Default***: false\n'        . . . . . . . Token: TEXT_LINE
'  ℹ️ ***Note***: This attribut...' . . . . . . Rule: elaboration
'  ℹ️ ***Note***: This attribut...' . . . . . . . Rule: paragraph
'  ℹ️ ***Note***: This attribut...' . . . . . . . . Token: TEXT_LINE
'## The Model and its Subjects\...' . . . . Rule: section
'## The Model and its Subjects\...' . . . . . Rule: section_head
'## The Model and its Subjects\...' . . . . . . Token: SECTION_LINE
'\n\n'                              . . . . . Rule: elaboration
'\n'                                . . . . . . Rule: blank_line
'\n'                                . . . . . . . Token: BLANK_LINE
'\n'                                . . . . . . Rule: blank_line
'\n'                                . . . . . . . Token: BLANK_LINE
'_ **LiterateDataModel** - A re...' . . . . . Rule: class
'_ **LiterateDataModel** - A re...' . . . . . . Rule: class_head
'_ **LiterateDataModel** - A re...' . . . . . . . Token: CLASS_LINE
'along with explanatory text an...' . . . . . . . Token: TEXT_LINE
'***Abbreviation***: LDM\n'         . . . . . . Rule: elaboration
'***Abbreviation***: LDM\n'         . . . . . . . Rule: paragraph
'***Abbreviation***: LDM\n'         . . . . . . . . Token: TEXT_LINE
'Plural: LiterateDataModels \nS...' . . . . . . Rule: field
'Plural: LiterateDataModels \n'     . . . . . . . Token: FIELD_LINE
'Subtype of: Component  \n'         . . . . . . . Token: TEXT_LINE
'- name (UpperCamel )\n'            . . . . . . Rule: attribute
'- name (UpperCamel )\n'            . . . . . . . Rule: attribute_head
'- name (UpperCamel )\n'            . . . . . . . . Token: ATTRIBUTE_LINE
'- allSubjects - list of all cl...' . . . . . . Rule: attribute
'- allSubjects - list of all cl...' . . . . . . . Rule: attribute_head
'- allSubjects - list of all cl...' . . . . . . . . Token: ATTRIBUTE_LINE
'                definition of ...' . . . . . . . Rule: elaboration
'                definition of ...' . . . . . . . . Rule: paragraph
'                definition of ...' . . . . . . . . . Token: TEXT_LINE
'Derivation: gathering s.allSub...' . . . . . . . Rule: field
'Derivation: gathering s.allSub...' . . . . . . . . Token: FIELD_LINE
'    ***Constraint***: Subject ...' . . . . . . . . Token: TEXT_LINE
'- allClasses - list of all cla...' . . . . . . Rule: attribute
'- allClasses - list of all cla...' . . . . . . . Rule: attribute_head
'- allClasses - list of all cla...' . . . . . . . . Token: ATTRIBUTE_LINE
'    Derivation: gathering s.al...' . . . . . . . . Token: TEXT_LINE
'***Constraint***: Class names ...' . . . . . . . Rule: elaboration
'***Constraint***: Class names ...' . . . . . . . . Rule: paragraph
'***Constraint***: Class names ...' . . . . . . . . . Token: TEXT_LINE
'__ 	***Modeling Configuration*...' . . . . . Rule: class
'__ 	***Modeling Configuration*...' . . . . . . Rule: class_head
'__ 	***Modeling Configuration*...' . . . . . . . Token: CLASS_LINE
'- **annotationTypes** - (List ...' . . . . . . Rule: attribute
'- **annotationTypes** - (List ...' . . . . . . . Rule: attribute_head
'- **annotationTypes** - (List ...' . . . . . . . . Token: ATTRIBUTE_LINE
'- **Preferred Coding Language*...' . . . . . . Rule: attribute
'- **Preferred Coding Language*...' . . . . . . . Rule: attribute_head
'- **Preferred Coding Language*...' . . . . . . . . Token: ATTRIBUTE_LINE
'   Default: OCL\n'                 . . . . . . . Rule: elaboration
'   Default: OCL\n'                 . . . . . . . . Rule: paragraph
'   Default: OCL\n'                 . . . . . . . . . Token: TEXT_LINE
'- **alternate Coding Languages...' . . . . . . Rule: attribute
'- **alternate Coding Languages...' . . . . . . . Rule: attribute_head
'- **alternate Coding Languages...' . . . . . . . . Token: ATTRIBUTE_LINE
'- **Preferred Template Languag...' . . . . . . Rule: attribute
'- **Preferred Template Languag...' . . . . . . . Rule: attribute_head
'- **Preferred Template Languag...' . . . . . . . . Token: ATTRIBUTE_LINE
'   Default: Handlebars\n'          . . . . . . . Rule: elaboration
'   Default: Handlebars\n'          . . . . . . . . Rule: paragraph
'   Default: Handlebars\n'          . . . . . . . . . Token: TEXT_LINE
'- **alternate Template Languag...' . . . . . . Rule: attribute
'- **alternate Template Languag...' . . . . . . . Rule: attribute_head
'- **alternate Template Languag...' . . . . . . . . Token: ATTRIBUTE_LINE
'- **aiFunctions** - A list of ...' . . . . . . Rule: attribute
'- **aiFunctions** - A list of ...' . . . . . . . Rule: attribute_head
'- **aiFunctions** - A list of ...' . . . . . . . . Token: ATTRIBUTE_LINE
'  Derivation: ['aiEnglishPlura...' . . . . . . . Rule: elaboration
'  Derivation: ['aiEnglishPlura...' . . . . . . . . Rule: paragraph
'  Derivation: ['aiEnglishPlura...' . . . . . . . . . Token: TEXT_LINE
'__ ***Markdown Support***\n- *...' . . . . . Rule: class
'__ ***Markdown Support***\n'       . . . . . . Rule: class_head
'__ ***Markdown Support***\n'       . . . . . . . Token: CLASS_LINE
'- **mdPrefix** (*[String](#str...' . . . . . . Rule: attribute
'- **mdPrefix** (*[String](#str...' . . . . . . . Rule: attribute_head
'- **mdPrefix** (*[String](#str...' . . . . . . . . Token: ATTRIBUTE_LINE
'	🆎 ***Derivation***: "# "\n'       . . . . . . . Rule: elaboration
'	🆎 ***Derivation***: "# "\n'       . . . . . . . . Rule: paragraph
'	🆎 ***Derivation***: "# "\n'       . . . . . . . . . Token: TEXT_LINE
'- **mdTopLine** (*[String](#st...' . . . . . . Rule: attribute
'- **mdTopLine** (*[String](#st...' . . . . . . . Rule: attribute_head
'- **mdTopLine** (*[String](#st...' . . . . . . . . Token: ATTRIBUTE_LINE
'	🆎 ***Derivation***: mdPrefix ...' . . . . . . . Rule: elaboration
'	🆎 ***Derivation***: mdPrefix ...' . . . . . . . . Rule: paragraph
'	🆎 ***Derivation***: mdPrefix ...' . . . . . . . . . Token: TEXT_LINE
'_ **Subject**  \nA specific to...' . . . . . Rule: class
'_ **Subject**  \n'                 . . . . . . Rule: class_head
'_ **Subject**  \n'                 . . . . . . . Token: CLASS_LINE
'A specific topic or theme with...' . . . . . . Rule: elaboration
'A specific topic or theme with...' . . . . . . . Rule: paragraph
'A specific topic or theme with...' . . . . . . . . Token: TEXT_LINE
'Plural: Subjects  \nSubtype of...' . . . . . . Rule: field
'Plural: Subjects  \n'              . . . . . . . Token: FIELD_LINE
'Subtype of: Component  \n'         . . . . . . . Token: TEXT_LINE
'Dependent of: LiterateDataMode...' . . . . . . . Token: TEXT_LINE
'Subjects are the chapters an s...' . . . . . . . Token: TEXT_LINE
'A subject need not contain any...' . . . . . . . Token: TEXT_LINE
'- name (UpperCamel )\n'            . . . . . . Rule: attribute
'- name (UpperCamel )\n'            . . . . . . . Rule: attribute_head
'- name (UpperCamel )\n'            . . . . . . . . Token: ATTRIBUTE_LINE
'- **parentSubject** - The pare...' . . . . . . Rule: attribute
'- **parentSubject** - The pare...' . . . . . . . Rule: attribute_head
'- **parentSubject** - The pare...' . . . . . . . . Token: ATTRIBUTE_LINE
'- **Classes** - The major clas...' . . . . . . Rule: attribute
'- **Classes** - The major clas...' . . . . . . . Rule: attribute_head
'- **Classes** - The major clas...' . . . . . . . . Token: ATTRIBUTE_LINE
'  ***Issue***: define chapter,...' . . . . . . . . Token: TEXT_LINE
'	***DSL***: Generally, it is b...' . . . . . . . Rule: elaboration
'	***DSL***: Generally, it is b...' . . . . . . . . Rule: paragraph
'	***DSL***: Generally, it is b...' . . . . . . . . . Token: TEXT_LINE
'- Each Class should be followe...' . . . . . . Rule: attribute
'- Each Class should be followe...' . . . . . . . Rule: attribute_head
'- Each Class should be followe...' . . . . . . . . Token: ATTRIBUTE_LINE
'- By its subtype classes.\n'       . . . . . . Rule: attribute
'- By its subtype classes.\n'       . . . . . . . Rule: attribute_head
'- By its subtype classes.\n'       . . . . . . . . Token: ATTRIBUTE_LINE
'- **childSubjects** - Any chil...' . . . . . . Rule: attribute
'- **childSubjects** - Any chil...' . . . . . . . Rule: attribute_head
'- **childSubjects** - Any chil...' . . . . . . . . Token: ATTRIBUTE_LINE
'	inverse of: Subject.parentSub...' . . . . . . . Rule: elaboration
'	inverse of: Subject.parentSub...' . . . . . . . . Rule: paragraph
'	inverse of: Subject.parentSub...' . . . . . . . . . Token: TEXT_LINE
'    ***DSL***:  the Classes wi...' . . . . . . . . . Token: TEXT_LINE
'__ ***Markdown Support***\n- *...' . . . . . Rule: class
'__ ***Markdown Support***\n'       . . . . . . Rule: class_head
'__ ***Markdown Support***\n'       . . . . . . . Token: CLASS_LINE
'- **mdPrefix** (*[String](#str...' . . . . . . Rule: attribute
'- **mdPrefix** (*[String](#str...' . . . . . . . Rule: attribute_head
'- **mdPrefix** (*[String](#str...' . . . . . . . . Token: ATTRIBUTE_LINE
'	🆎 ***Derivation***: levelIndi...' . . . . . . . Rule: elaboration
'	🆎 ***Derivation***: levelIndi...' . . . . . . . . Rule: paragraph
'	🆎 ***Derivation***: levelIndi...' . . . . . . . . . Token: TEXT_LINE
'- **mdTopLine** (*[String](#st...' . . . . . . Rule: attribute
'- **mdTopLine** (*[String](#st...' . . . . . . . Rule: attribute_head
'- **mdTopLine** (*[String](#st...' . . . . . . . . Token: ATTRIBUTE_LINE
'	🆎 ***Derivation***: mdPrefix ...' . . . . . . . Rule: elaboration
'	🆎 ***Derivation***: mdPrefix ...' . . . . . . . . Rule: paragraph
'	🆎 ***Derivation***: mdPrefix ...' . . . . . . . . . Token: TEXT_LINE
'_ **SubjectArea**  \nA main to...' . . . . . Rule: class
'_ **SubjectArea**  \n'             . . . . . . Rule: class_head
'_ **SubjectArea**  \n'             . . . . . . . Token: CLASS_LINE
'A main topic or area of focus ...' . . . . . . Rule: elaboration
'A main topic or area of focus ...' . . . . . . . Rule: paragraph
'A main topic or area of focus ...' . . . . . . . . Token: TEXT_LINE
'Plural: SubjectAreas  \nSubtyp...' . . . . . . Rule: field
'Plural: SubjectAreas  \n'          . . . . . . . Token: FIELD_LINE
'Subtype of: Subject  \n'           . . . . . . . Token: TEXT_LINE
'  _Where:_ parentSubject is ab...' . . . . . . . Token: TEXT_LINE
'### Classes\n\n\n_ **Class** -...' . . . . . Rule: section
'### Classes\n'                     . . . . . . Rule: section_head
'### Classes\n'                     . . . . . . . Token: SECTION_LINE
'\n\n'                              . . . . . . Rule: elaboration
'\n'                                . . . . . . . Rule: blank_line
'\n'                                . . . . . . . . Token: BLANK_LINE
'\n'                                . . . . . . . Rule: blank_line
'\n'                                . . . . . . . . Token: BLANK_LINE
'_ **Class** - A key entity or ...' . . . . . . Rule: class
'_ **Class** - A key entity or ...' . . . . . . . Rule: class_head
'_ **Class** - A key entity or ...' . . . . . . . . Token: CLASS_LINE
'\n'                                . . . . . . . Rule: elaboration
'\n'                                . . . . . . . . Rule: blank_line
'\n'                                . . . . . . . . . Token: BLANK_LINE
'Plural: Classes  \nSubtype of:...' . . . . . . . Rule: field
'Plural: Classes  \n'               . . . . . . . . Token: FIELD_LINE
'Subtype of: Component  \n'         . . . . . . . . Token: TEXT_LINE
'***Constraint***: Within each ...' . . . . . . . . Token: TEXT_LINE
'- **pluralForm** - the normal ...' . . . . . . . Rule: attribute
'- **pluralForm** - the normal ...' . . . . . . . . Rule: attribute_head
'- **pluralForm** - the normal ...' . . . . . . . . . Token: ATTRIBUTE_LINE
'    Might be Books for the Boo...' . . . . . . . . Rule: elaboration
'    Might be Books for the Boo...' . . . . . . . . . Rule: paragraph
'    Might be Books for the Boo...' . . . . . . . . . . Token: TEXT_LINE
'    But also might be People f...' . . . . . . . . . . Token: TEXT_LINE
'   \n'                             . . . . . . . . . . Token: TEXT_LINE
'Note: When inputting a model, ...' . . . . . . . . Rule: field
'Note: When inputting a model, ...' . . . . . . . . . Token: FIELD_LINE
'    The exception is when a co...' . . . . . . . . . Token: TEXT_LINE
'	***Default***: the regular pl...' . . . . . . . . . Token: TEXT_LINE
'- **basedOn** - the Class or C...' . . . . . . . Rule: attribute
'- **basedOn** - the Class or C...' . . . . . . . . Rule: attribute_head
'- **basedOn** - the Class or C...' . . . . . . . . . Token: ATTRIBUTE_LINE
'  	This is solely based on **E...' . . . . . . . . Rule: elaboration
'  	This is solely based on **E...' . . . . . . . . . Rule: paragraph
'  	This is solely based on **E...' . . . . . . . . . . Token: TEXT_LINE
'  	Note: basedOn and dependent...' . . . . . . . . . . Token: TEXT_LINE
'  	issue: fix that\n'              . . . . . . . . . . Token: TEXT_LINE
'\n'                                . . . . . . . . . Rule: blank_line
'\n'                                . . . . . . . . . . Token: BLANK_LINE
'\n'                                . . . . . . . . . Rule: blank_line
'\n'                                . . . . . . . . . . Token: BLANK_LINE
'- **supertypes** - The parent ...' . . . . . . . Rule: attribute
'- **supertypes** - The parent ...' . . . . . . . . Rule: attribute_head
'- **supertypes** - The parent ...' . . . . . . . . . Token: ATTRIBUTE_LINE
'- **subtypings** - the criteri...' . . . . . . . Rule: attribute
'- **subtypings** - the criteri...' . . . . . . . . Rule: attribute_head
'- **subtypings** - the criteri...' . . . . . . . . . Token: ATTRIBUTE_LINE
'	\n'                               . . . . . . . . Rule: elaboration
'	\n'                               . . . . . . . . . Rule: paragraph
'	\n'                               . . . . . . . . . . Token: TEXT_LINE
'Example: in a library model, t...' . . . . . . . . Rule: field
'Example: in a library model, t...' . . . . . . . . . Token: FIELD_LINE
'- **subtypes** - Any subtypes ...' . . . . . . . Rule: attribute
'- **subtypes** - Any subtypes ...' . . . . . . . . Rule: attribute_head
'- **subtypes** - Any subtypes ...' . . . . . . . . . Token: ATTRIBUTE_LINE
'    Example: For instance, usi...' . . . . . . . . . Token: TEXT_LINE
'\n\n\n'                            . . . . . . . . Rule: elaboration
'\n'                                . . . . . . . . . Rule: blank_line
'\n'                                . . . . . . . . . . Token: BLANK_LINE
'\n'                                . . . . . . . . . Rule: blank_line
'\n'                                . . . . . . . . . . Token: BLANK_LINE
'\n'                                . . . . . . . . . Rule: blank_line
'\n'                                . . . . . . . . . . Token: BLANK_LINE
'- **attributes** - The attribu...' . . . . . . . Rule: attribute
'- **attributes** - The attribu...' . . . . . . . . Rule: attribute_head
'- **attributes** - The attribu...' . . . . . . . . . Token: ATTRIBUTE_LINE
'- **attributeSections** - addi...' . . . . . . . Rule: attribute
'- **attributeSections** - addi...' . . . . . . . . Rule: attribute_head
'- **attributeSections** - addi...' . . . . . . . . . Token: ATTRIBUTE_LINE
'- **constraints** - Any constr...' . . . . . . . Rule: attribute
'- **constraints** - Any constr...' . . . . . . . . Rule: attribute_head
'- **constraints** - Any constr...' . . . . . . . . . Token: ATTRIBUTE_LINE
'    Note: Constraints may be e...' . . . . . . . . . Token: TEXT_LINE
'    Add examples where clarity...' . . . . . . . . Rule: elaboration
'    Add examples where clarity...' . . . . . . . . . Rule: paragraph
'    Add examples where clarity...' . . . . . . . . . . Token: TEXT_LINE
'- **methods** - Any behaviors ...' . . . . . . . Rule: attribute
'- **methods** - Any behaviors ...' . . . . . . . . Rule: attribute_head
'- **methods** - Any behaviors ...' . . . . . . . . . Token: ATTRIBUTE_LINE
'__  ***Implied Attributes*** \...' . . . . . . Rule: class
'__  ***Implied Attributes*** \...' . . . . . . . Rule: class_head
'__  ***Implied Attributes*** \...' . . . . . . . . Token: CLASS_LINE
'- **dependents** - the Classes...' . . . . . . . Rule: attribute
'- **dependents** - the Classes...' . . . . . . . . Rule: attribute_head
'- **dependents** - the Classes...' . . . . . . . . . Token: ATTRIBUTE_LINE
'     ***Inverse of***: Class.b...' . . . . . . . . Rule: elaboration
'     ***Inverse of***: Class.b...' . . . . . . . . . Rule: paragraph
'     ***Inverse of***: Class.b...' . . . . . . . . . . Token: TEXT_LINE
'- UniqueKeys - (optional Set o...' . . . . . . . Rule: attribute
'- UniqueKeys - (optional Set o...' . . . . . . . . Rule: attribute_head
'- UniqueKeys - (optional Set o...' . . . . . . . . . Token: ATTRIBUTE_LINE
'        ***Inverse of***:\n   ...' . . . . . . . . Rule: elaboration
'        ***Inverse of***:\n   ...' . . . . . . . . . Rule: paragraph
'        ***Inverse of***:\n'       . . . . . . . . . . Token: TEXT_LINE
'        UniqueKey.basedOn\n'       . . . . . . . . . . Token: TEXT_LINE
'_ **Subtyping** - a way in whi...' . . . . . . Rule: class
'_ **Subtyping** - a way in whi...' . . . . . . . Rule: class_head
'_ **Subtyping** - a way in whi...' . . . . . . . . Token: CLASS_LINE
'    ***Dependent of:*** Class\...' . . . . . . . Rule: elaboration
'    ***Dependent of:*** Class\...' . . . . . . . . Rule: paragraph
'    ***Dependent of:*** Class\...' . . . . . . . . . Token: TEXT_LINE
'- **name** (Upper Name). \n   ...' . . . . . . . Rule: attribute
'- **name** (Upper Name). \n'       . . . . . . . . Rule: attribute_head
'- **name** (Upper Name). \n'       . . . . . . . . . Token: ATTRIBUTE_LINE
'    Usually ByThis or ByThat\n'    . . . . . . . . Rule: elaboration
'    Usually ByThis or ByThat\n'    . . . . . . . . . Rule: paragraph
'    Usually ByThis or ByThat\n'    . . . . . . . . . . Token: TEXT_LINE
'- **is exclusive** (Boolean). ...' . . . . . . . Rule: attribute
'- **is exclusive** (Boolean). ...' . . . . . . . . Rule: attribute_head
'- **is exclusive** (Boolean). ...' . . . . . . . . . Token: ATTRIBUTE_LINE
'    Default: true\n'               . . . . . . . . Rule: elaboration
'    Default: true\n'               . . . . . . . . . Rule: paragraph
'    Default: true\n'               . . . . . . . . . . Token: TEXT_LINE
'- **is exhaustive** (Boolean)....' . . . . . . . Rule: attribute
'- **is exhaustive** (Boolean)....' . . . . . . . . Rule: attribute_head
'- **is exhaustive** (Boolean)....' . . . . . . . . . Token: ATTRIBUTE_LINE
'    Default: true\n'               . . . . . . . . Rule: elaboration
'    Default: true\n'               . . . . . . . . . Rule: paragraph
'    Default: true\n'               . . . . . . . . . . Token: TEXT_LINE
'- **classes** (List of Classes...' . . . . . . . Rule: attribute
'- **classes** (List of Classes...' . . . . . . . . Rule: attribute_head
'- **classes** (List of Classes...' . . . . . . . . . Token: ATTRIBUTE_LINE
'	***DSL***:  Shown in the DSL ...' . . . . . . . . Rule: elaboration
'	***DSL***:  Shown in the DSL ...' . . . . . . . . . Rule: paragraph
'	***DSL***:  Shown in the DSL ...' . . . . . . . . . . Token: TEXT_LINE
'	> Subbtypes: byBrand - Brand1...' . . . . . . . . . . Token: TEXT_LINE
'	on the super class. And as\n'     . . . . . . . . . . Token: TEXT_LINE
'	> Subtype of: SuperClass byBr...' . . . . . . . . . . Token: TEXT_LINE
'	on the subclass.  \n'             . . . . . . . . . . Token: TEXT_LINE
'	\n'                               . . . . . . . . . . Token: TEXT_LINE
'Note: every class can have an ...' . . . . . . . . Rule: field
'Note: every class can have an ...' . . . . . . . . . Token: FIELD_LINE
'	Also,  each subtyping is by d...' . . . . . . . . . Token: TEXT_LINE
'_ **ValueType** - \nSubtype of...' . . . . . . Rule: class
'_ **ValueType** - \n'              . . . . . . . Rule: class_head
'_ **ValueType** - \n'              . . . . . . . . Token: CLASS_LINE
'Subtype of: Class. \n'             . . . . . . . Rule: elaboration
'Subtype of: Class. \n'             . . . . . . . . Rule: paragraph
'Subtype of: Class. \n'             . . . . . . . . . Token: TEXT_LINE
'__ ***Markdown Support***\n- *...' . . . . . . Rule: class
'__ ***Markdown Support***\n'       . . . . . . . Rule: class_head
'__ ***Markdown Support***\n'       . . . . . . . . Token: CLASS_LINE
'- ***mdPrefix*** (*[String](#s...' . . . . . . . Rule: attribute
'- ***mdPrefix*** (*[String](#s...' . . . . . . . . Rule: attribute_head
'- ***mdPrefix*** (*[String](#s...' . . . . . . . . . Token: ATTRIBUTE_LINE
'	🆎 ***Derivation***: "ValueTyp...' . . . . . . . . Rule: elaboration
'	🆎 ***Derivation***: "ValueTyp...' . . . . . . . . . Rule: paragraph
'	🆎 ***Derivation***: "ValueTyp...' . . . . . . . . . . Token: TEXT_LINE
'_ **Reference Type**:\nSubtype...' . . . . . . Rule: class
'_ **Reference Type**:\n'           . . . . . . . Rule: class_head
'_ **Reference Type**:\n'           . . . . . . . . Token: CLASS_LINE
'Subtype of: Class. \n'             . . . . . . . Rule: elaboration
'Subtype of: Class. \n'             . . . . . . . . Rule: paragraph
'Subtype of: Class. \n'             . . . . . . . . . Token: TEXT_LINE
'_ **CodeType**  \nA data type ...' . . . . . . Rule: class
'_ **CodeType**  \nA data type ...' . . . . . . . Rule: class_head
'_ **CodeType**  \n'                . . . . . . . . Token: CLASS_LINE
'A data type or enumeration use...' . . . . . . . . Token: TEXT_LINE
'Subtype of: ValueType.  \n'        . . . . . . . Rule: elaboration
'Subtype of: ValueType.  \n'        . . . . . . . . Rule: paragraph
'Subtype of: ValueType.  \n'        . . . . . . . . . Token: TEXT_LINE
'Note: Often, a CodeType will b...' . . . . . . . Rule: field
'Note: Often, a CodeType will b...' . . . . . . . . Token: FIELD_LINE
'   - List the code values as a...' . . . . . . . . Token: TEXT_LINE
'	   ‘**code**: description’\n'     . . . . . . . . Token: TEXT_LINE
'   - A Code Type will be creat...' . . . . . . . . Token: TEXT_LINE
'- isCaptive - the code type wa...' . . . . . . . Rule: attribute
'- isCaptive - the code type wa...' . . . . . . . . Rule: attribute_head
'- isCaptive - the code type wa...' . . . . . . . . . Token: ATTRIBUTE_LINE
'_ **Code Value**\nA possible v...' . . . . . . Rule: class
'_ **Code Value**\n'                . . . . . . . Rule: class_head
'_ **Code Value**\n'                . . . . . . . . Token: CLASS_LINE
'A possible value for an enumer...' . . . . . . . Rule: elaboration
'A possible value for an enumer...' . . . . . . . . Rule: paragraph
'A possible value for an enumer...' . . . . . . . . . Token: TEXT_LINE
'- **code** - A short code or a...' . . . . . . . Rule: attribute
'- **code** - A short code or a...' . . . . . . . . Rule: attribute_head
'- **code** - A short code or a...' . . . . . . . . . Token: ATTRIBUTE_LINE
'- **description** - an explana...' . . . . . . . Rule: attribute
'- **description** - an explana...' . . . . . . . . Rule: attribute_head
'- **description** - an explana...' . . . . . . . . . Token: ATTRIBUTE_LINE
'_ **Key** - a list of attribut...' . . . . . . Rule: class
'_ **Key** - a list of attribut...' . . . . . . . Rule: class_head
'_ **Key** - a list of attribut...' . . . . . . . . Token: CLASS_LINE
'Subtype of: Component \n'          . . . . . . . Rule: elaboration
'Subtype of: Component \n'          . . . . . . . . Rule: paragraph
'Subtype of: Component \n'          . . . . . . . . . Token: TEXT_LINE
'DependentOf: Class\n'              . . . . . . . Rule: field
'DependentOf: Class\n'              . . . . . . . . Token: FIELD_LINE
'- keyAttributes - the attribut...' . . . . . . . Rule: attribute
'- keyAttributes - the attribut...' . . . . . . . . Rule: attribute_head
'- keyAttributes - the attribut...' . . . . . . . . . Token: ATTRIBUTE_LINE
'Constraint: each attribute mus...' . . . . . . . . Rule: elaboration
'Constraint: each attribute mus...' . . . . . . . . . Rule: paragraph
'Constraint: each attribute mus...' . . . . . . . . . . Token: TEXT_LINE
'Constraint: no repetitions all...' . . . . . . . . . . Token: TEXT_LINE
'> 👍 **Issue**: introduce PureL...' . . . . . . . . . . Token: TEXT_LINE
'    \n'                            . . . . . . . . . . Token: TEXT_LINE
'    \n'                            . . . . . . . . . . Token: TEXT_LINE
'Issue: need ascending descendi...' . . . . . . . . Rule: field
'Issue: need ascending descendi...' . . . . . . . . . Token: FIELD_LINE
'_ **UniqueKey** - a list of at...' . . . . . . Rule: class
'_ **UniqueKey** - a list of at...' . . . . . . . Rule: class_head
'_ **UniqueKey** - a list of at...' . . . . . . . . Token: CLASS_LINE
'Subtype of: Key \n'                . . . . . . . . Token: TEXT_LINE
'\n'                                . . . . . . . Rule: elaboration
'\n'                                . . . . . . . . Rule: blank_line
'\n'                                . . . . . . . . . Token: BLANK_LINE
'Note: order unimportant for Un...' . . . . . . . Rule: field
'Note: order unimportant for Un...' . . . . . . . . Token: FIELD_LINE
'## Attributes\n\n_ **Attribute...' . . . . . . Rule: section
'## Attributes\n'                   . . . . . . . Rule: section_head
'## Attributes\n'                   . . . . . . . . Token: SECTION_LINE
'\n'                                . . . . . . . Rule: elaboration
'\n'                                . . . . . . . . Rule: blank_line
'\n'                                . . . . . . . . . Token: BLANK_LINE
'_ **Attribute Section** - a gr...' . . . . . . . Rule: class
'_ **Attribute Section** - a gr...' . . . . . . . . Rule: class_head
'_ **Attribute Section** - a gr...' . . . . . . . . . Token: CLASS_LINE
'***SubtypeOf***: Component.  \...' . . . . . . . . . Token: TEXT_LINE
'***Based on***: Class\n'           . . . . . . . . Rule: elaboration
'***Based on***: Class\n'           . . . . . . . . . Rule: paragraph
'***Based on***: Class\n'           . . . . . . . . . . Token: TEXT_LINE
'-	isOptional - whether the att...' . . . . . . . . Rule: attribute
'-	isOptional - whether the att...' . . . . . . . . . Rule: attribute_head
'-	isOptional - whether the att...' . . . . . . . . . . Token: ATTRIBUTE_LINE
'	 If the Attribute Section is ...' . . . . . . . . . Rule: elaboration
'	 If the Attribute Section is ...' . . . . . . . . . . Rule: paragraph
'	 If the Attribute Section is ...' . . . . . . . . . . . Token: TEXT_LINE
'	&nbsp;\n'                         . . . . . . . . . . . Token: TEXT_LINE
'	But if the Arrribute Section ...' . . . . . . . . . . . Token: TEXT_LINE
'__ ***Markdown Support***\n- *...' . . . . . . . Rule: class
'__ ***Markdown Support***\n'       . . . . . . . . Rule: class_head
'__ ***Markdown Support***\n'       . . . . . . . . . Token: CLASS_LINE
'- **mdPrefix** (*[String](#str...' . . . . . . . . Rule: attribute
'- **mdPrefix** (*[String](#str...' . . . . . . . . . Rule: attribute_head
'- **mdPrefix** (*[String](#str...' . . . . . . . . . . Token: ATTRIBUTE_LINE
'	🔄 ***Default***: "_ "\n'          . . . . . . . . . Rule: elaboration
'	🔄 ***Default***: "_ "\n'          . . . . . . . . . . Rule: paragraph
'	🔄 ***Default***: "_ "\n'          . . . . . . . . . . . Token: TEXT_LINE
'- **mdTopLine** (*[String](#st...' . . . . . . . . Rule: attribute
'- **mdTopLine** (*[String](#st...' . . . . . . . . . Rule: attribute_head
'- **mdTopLine** (*[String](#st...' . . . . . . . . . . Token: ATTRIBUTE_LINE
'_ **Attribute**  \nA property ...' . . . . . . . Rule: class
'_ **Attribute**  \n'               . . . . . . . . Rule: class_head
'_ **Attribute**  \n'               . . . . . . . . . Token: CLASS_LINE
'A property or characteristic o...' . . . . . . . . Rule: elaboration
'A property or characteristic o...' . . . . . . . . . Rule: paragraph
'A property or characteristic o...' . . . . . . . . . . Token: TEXT_LINE
'Plural: Attributes  \nSubtype ...' . . . . . . . . Rule: field
'Plural: Attributes  \n'            . . . . . . . . . Token: FIELD_LINE
'Subtype of: Component  \n'         . . . . . . . . . Token: TEXT_LINE
'*Based on*: AttributeSection\n'    . . . . . . . . . Token: TEXT_LINE
'- **name** - (Lower Camel).   ...' . . . . . . . . Rule: attribute
'- **name** - (Lower Camel).   ...' . . . . . . . . . Rule: attribute_head
'- **name** - (Lower Camel).   ...' . . . . . . . . . . Token: ATTRIBUTE_LINE
'    Overrides: CamelName\n'        . . . . . . . . . Rule: elaboration
'    Overrides: CamelName\n'        . . . . . . . . . . Rule: paragraph
'    Overrides: CamelName\n'        . . . . . . . . . . . Token: TEXT_LINE
'- **dataType** - The kind of o...' . . . . . . . . Rule: attribute
'- **dataType** - The kind of o...' . . . . . . . . . Rule: attribute_head
'- **dataType** - The kind of o...' . . . . . . . . . . Token: ATTRIBUTE_LINE
'  H\n'                             . . . . . . . . . . Token: TEXT_LINE
'     In the simplest cases, th...' . . . . . . . . . . Token: TEXT_LINE
'     But,\n'                       . . . . . . . . . . Token: TEXT_LINE
'     - List of Editions\n'         . . . . . . . . . . Token: TEXT_LINE
'     - Set of Edition\n     - ...' . . . . . . . . . Rule: elaboration
'     - Set of Edition\n     - ...' . . . . . . . . . . Rule: paragraph
'     - Set of Edition\n'           . . . . . . . . . . . Token: TEXT_LINE
'     - ... and more complicate...' . . . . . . . . . . . Token: TEXT_LINE
'    ***See***: the section bel...' . . . . . . . . . . . Token: TEXT_LINE
'__ **Cardinalities**.   \n- **...' . . . . . . . Rule: class
'__ **Cardinalities**.   \n'        . . . . . . . . Rule: class_head
'__ **Cardinalities**.   \n'        . . . . . . . . . Token: CLASS_LINE
'- **isOptional** - Indicates w...' . . . . . . . . Rule: attribute
'- **isOptional** - Indicates w...' . . . . . . . . . Rule: attribute_head
'- **isOptional** - Indicates w...' . . . . . . . . . . Token: ATTRIBUTE_LINE
'  \n'                              . . . . . . . . . . Token: TEXT_LINE
'  	***Default:*** False\n'         . . . . . . . . . Rule: elaboration
'  	***Default:*** False\n'         . . . . . . . . . . Rule: paragraph
'  	***Default:*** False\n'         . . . . . . . . . . . Token: TEXT_LINE
'- **cardinality** - The cardin...' . . . . . . . . Rule: attribute
'- **cardinality** - The cardin...' . . . . . . . . . Rule: attribute_head
'- **cardinality** - The cardin...' . . . . . . . . . . Token: ATTRIBUTE_LINE
'  	***Default:***  For a singu...' . . . . . . . . . Rule: elaboration
'  	***Default:***  For a singu...' . . . . . . . . . . Rule: paragraph
'  	***Default:***  For a singu...' . . . . . . . . . . . Token: TEXT_LINE
'  For a collective attribute, ...' . . . . . . . . . . . Token: TEXT_LINE
'	***DSL***: the cardinality of...' . . . . . . . . . . . Token: TEXT_LINE
'	For example:\n'                   . . . . . . . . . . . Token: TEXT_LINE
'- author (1:1 Author)\n	- book...' . . . . . . . . Rule: attribute
'- author (1:1 Author)\n	- book...' . . . . . . . . . Rule: attribute_head
'- author (1:1 Author)\n'           . . . . . . . . . . Token: ATTRIBUTE_LINE
'	- books (optional N:M Set of ...' . . . . . . . . . . Token: TEXT_LINE
'	***Note***: how this works wi...' . . . . . . . . . Rule: elaboration
'	***Note***: how this works wi...' . . . . . . . . . . Rule: paragraph
'	***Note***: how this works wi...' . . . . . . . . . . . Token: TEXT_LINE
'__  ***Inverse Attributes***\n...' . . . . . . . Rule: class
'__  ***Inverse Attributes***\n'    . . . . . . . . Rule: class_head
'__  ***Inverse Attributes***\n'    . . . . . . . . . Token: CLASS_LINE
'- **isInvertible** - (Boolean)...' . . . . . . . . Rule: attribute
'- **isInvertible** - (Boolean)...' . . . . . . . . . Rule: attribute_head
'- **isInvertible** - (Boolean)...' . . . . . . . . . . Token: ATTRIBUTE_LINE
'	***Derivation***: true if the...' . . . . . . . . . Rule: elaboration
'	***Derivation***: true if the...' . . . . . . . . . . Rule: paragraph
'	***Derivation***: true if the...' . . . . . . . . . . . Token: TEXT_LINE
'- **inverseClass** - the class...' . . . . . . . . Rule: attribute
'- **inverseClass** - the class...' . . . . . . . . . Rule: attribute_head
'- **inverseClass** - the class...' . . . . . . . . . . Token: ATTRIBUTE_LINE
'	***Derivation***: from the da...' . . . . . . . . . Rule: elaboration
'	***Derivation***: from the da...' . . . . . . . . . . Rule: paragraph
'	***Derivation***: from the da...' . . . . . . . . . . . Token: TEXT_LINE
'- **inverseAttribute** - (opti...' . . . . . . . . Rule: attribute
'- **inverseAttribute** - (opti...' . . . . . . . . . Rule: attribute_head
'- **inverseAttribute** - (opti...' . . . . . . . . . . Token: ATTRIBUTE_LINE
'- **inverseIsOptional** - (opt...' . . . . . . . . Rule: attribute
'- **inverseIsOptional** - (opt...' . . . . . . . . . Rule: attribute_head
'- **inverseIsOptional** - (opt...' . . . . . . . . . . Token: ATTRIBUTE_LINE
'_ ***Formulas*** \n\n- **defau...' . . . . . . . Rule: class
'_ ***Formulas*** \n'               . . . . . . . . Rule: class_head
'_ ***Formulas*** \n'               . . . . . . . . . Token: CLASS_LINE
'\n'                                . . . . . . . . Rule: elaboration
'\n'                                . . . . . . . . . Rule: blank_line
'\n'                                . . . . . . . . . . Token: BLANK_LINE
'- **default** - The rule or fo...' . . . . . . . . Rule: attribute
'- **default** - The rule or fo...' . . . . . . . . . Rule: attribute_head
'- **default** - The rule or fo...' . . . . . . . . . . Token: ATTRIBUTE_LINE
'    Now running to a second li...' . . . . . . . . . . Token: TEXT_LINE
'    (Derivation, optional)\n'      . . . . . . . . . Rule: elaboration
'    (Derivation, optional)\n'      . . . . . . . . . . Rule: paragraph
'    (Derivation, optional)\n'      . . . . . . . . . . . Token: TEXT_LINE
'Note: even when an Attribute h...' . . . . . . . . . Rule: field
'Note: even when an Attribute h...' . . . . . . . . . . Token: FIELD_LINE
'    And let's see if the note ...' . . . . . . . . . . Token: TEXT_LINE
'    Yes, it handled extra line...' . . . . . . . . . . Token: TEXT_LINE
'    Last paragraph here\n'         . . . . . . . . . . Token: TEXT_LINE
'- **derivation** - For derived...' . . . . . . . . Rule: attribute
'- **derivation** - For derived...' . . . . . . . . . Rule: attribute_head
'- **derivation** - For derived...' . . . . . . . . . . Token: ATTRIBUTE_LINE
'    ***Issue***: on insert vs ...' . . . . . . . . . Rule: elaboration
'    ***Issue***: on insert vs ...' . . . . . . . . . . Rule: paragraph
'    ***Issue***: on insert vs ...' . . . . . . . . . . . Token: TEXT_LINE
'- **constraints** - Any valida...' . . . . . . . . Rule: attribute
'- **constraints** - Any valida...' . . . . . . . . . Rule: attribute_head
'- **constraints** - Any valida...' . . . . . . . . . . Token: ATTRIBUTE_LINE
'    Note: from Class.constrain...' . . . . . . . . . Rule: elaboration
'    Note: from Class.constrain...' . . . . . . . . . . Rule: paragraph
'    Note: from Class.constrain...' . . . . . . . . . . . Token: TEXT_LINE
'__ Override Tracking\n- Overri...' . . . . . . . Rule: class
'__ Override Tracking\n'            . . . . . . . . Rule: class_head
'__ Override Tracking\n'            . . . . . . . . . Token: CLASS_LINE
'- Overrides\n'                     . . . . . . . . Rule: attribute
'- Overrides\n'                     . . . . . . . . . Rule: attribute_head
'- Overrides\n'                     . . . . . . . . . . Token: ATTRIBUTE_LINE
'_ ***ValueType:*** **Derivatio...' . . . . . . . Rule: class
'_ ***ValueType:*** **Derivatio...' . . . . . . . . Rule: class_head
'_ ***ValueType:*** **Derivatio...' . . . . . . . . . Token: CLASS_LINE
'A rule or formula for deriving...' . . . . . . . . Rule: elaboration
'A rule or formula for deriving...' . . . . . . . . . Rule: paragraph
'A rule or formula for deriving...' . . . . . . . . . . Token: TEXT_LINE
'Plural: Derivations  \n'           . . . . . . . . Rule: field
'Plural: Derivations  \n'           . . . . . . . . . Token: FIELD_LINE
'- **statement** - An English l...' . . . . . . . . Rule: attribute
'- **statement** - An English l...' . . . . . . . . . Rule: attribute_head
'- **statement** - An English l...' . . . . . . . . . . Token: ATTRIBUTE_LINE
'- **expression** - The formal ...' . . . . . . . . Rule: attribute
'- **expression** - The formal ...' . . . . . . . . . Rule: attribute_head
'- **expression** - The formal ...' . . . . . . . . . . Token: ATTRIBUTE_LINE
'_ ***ValueType:*** **Constrain...' . . . . . . . Rule: class
'_ ***ValueType:*** **Constrain...' . . . . . . . . Rule: class_head
'_ ***ValueType:*** **Constrain...' . . . . . . . . . Token: CLASS_LINE
'A rule, condition, or validati...' . . . . . . . . Rule: elaboration
'A rule, condition, or validati...' . . . . . . . . . Rule: paragraph
'A rule, condition, or validati...' . . . . . . . . . . Token: TEXT_LINE
'Plural: Constraints  \nSubtype...' . . . . . . . . Rule: field
'Plural: Constraints  \n'           . . . . . . . . . Token: FIELD_LINE
'Subtype of: Component  \n'         . . . . . . . . . Token: TEXT_LINE
'- **statement** - An English l...' . . . . . . . . Rule: attribute
'- **statement** - An English l...' . . . . . . . . . Rule: attribute_head
'- **statement** - An English l...' . . . . . . . . . . Token: ATTRIBUTE_LINE
'- **expression** - The formal ...' . . . . . . . . Rule: attribute
'- **expression** - The formal ...' . . . . . . . . . Rule: attribute_head
'- **expression** - The formal ...' . . . . . . . . . . Token: ATTRIBUTE_LINE
'- **severity** -  (Code)\n'        . . . . . . . . Rule: attribute
'- **severity** -  (Code)\n'        . . . . . . . . . Rule: attribute_head
'- **severity** -  (Code)\n'        . . . . . . . . . . Token: ATTRIBUTE_LINE
'- - **Warning** - nothing fata...' . . . . . . . . Rule: attribute
'- - **Warning** - nothing fata...' . . . . . . . . . Rule: attribute_head
'- - **Warning** - nothing fata...' . . . . . . . . . . Token: ATTRIBUTE_LINE
'- - **Error** - serious. Fix n...' . . . . . . . . Rule: attribute
'- - **Error** - serious. Fix n...' . . . . . . . . . Rule: attribute_head
'- - **Error** - serious. Fix n...' . . . . . . . . . . Token: ATTRIBUTE_LINE
'- **Message** - (Template)\n'      . . . . . . . . Rule: attribute
'- **Message** - (Template)\n'      . . . . . . . . . Rule: attribute_head
'- **Message** - (Template)\n'      . . . . . . . . . . Token: ATTRIBUTE_LINE
'_ **Class Constraint**  \n**Su...' . . . . . . . Rule: class
'_ **Class Constraint**  \n**Su...' . . . . . . . . Rule: class_head
'_ **Class Constraint**  \n'        . . . . . . . . . Token: CLASS_LINE
'**Subtype of**: Constraint  \n'    . . . . . . . . . Token: TEXT_LINE
'***Based on***: Class. \n'         . . . . . . . . Rule: elaboration
'***Based on***: Class. \n'         . . . . . . . . . Rule: paragraph
'***Based on***: Class. \n'         . . . . . . . . . . Token: TEXT_LINE
'_ **Attribute Constraint** \n*...' . . . . . . . Rule: class
'_ **Attribute Constraint** \n*...' . . . . . . . . Rule: class_head
'_ **Attribute Constraint** \n'     . . . . . . . . . Token: CLASS_LINE
'***Subtype of***: Constraint \...' . . . . . . . . . Token: TEXT_LINE
'***Based on***: Attribute\n'       . . . . . . . . Rule: elaboration
'***Based on***: Attribute\n'       . . . . . . . . . Rule: paragraph
'***Based on***: Attribute\n'       . . . . . . . . . . Token: TEXT_LINE
'_ **CodeExpression**\n- **Lang...' . . . . . . . Rule: class
'_ **CodeExpression**\n'            . . . . . . . . Rule: class_head
'_ **CodeExpression**\n'            . . . . . . . . . Token: CLASS_LINE
'- **Language** - the programmi...' . . . . . . . . Rule: attribute
'- **Language** - the programmi...' . . . . . . . . . Rule: attribute_head
'- **Language** - the programmi...' . . . . . . . . . . Token: ATTRIBUTE_LINE
'- - OCL: Object Constraint Lan...' . . . . . . . . Rule: attribute
'- - OCL: Object Constraint Lan...' . . . . . . . . . Rule: attribute_head
'- - OCL: Object Constraint Lan...' . . . . . . . . . . Token: ATTRIBUTE_LINE
'- - Java: Java \n'                 . . . . . . . . Rule: attribute
'- - Java: Java \n'                 . . . . . . . . . Rule: attribute_head
'- - Java: Java \n'                 . . . . . . . . . . Token: ATTRIBUTE_LINE
'- **Expression** (String)\n'       . . . . . . . . Rule: attribute
'- **Expression** (String)\n'       . . . . . . . . . Rule: attribute_head
'- **Expression** (String)\n'       . . . . . . . . . . Token: ATTRIBUTE_LINE
'## Methods \n_ **Method**  \nA...' . . . . . . . Rule: section
'## Methods \n'                     . . . . . . . . Rule: section_head
'## Methods \n'                     . . . . . . . . . Token: SECTION_LINE
'_ **Method**  \nA behavior or ...' . . . . . . . . Rule: class
'_ **Method**  \n'                  . . . . . . . . . Rule: class_head
'_ **Method**  \n'                  . . . . . . . . . . Token: CLASS_LINE
'A behavior or operation associ...' . . . . . . . . . Rule: elaboration
'A behavior or operation associ...' . . . . . . . . . . Rule: paragraph
'A behavior or operation associ...' . . . . . . . . . . . Token: TEXT_LINE
'Plural: Methods  \nSubtype of:...' . . . . . . . . . Rule: field
'Plural: Methods  \n'               . . . . . . . . . . Token: FIELD_LINE
'Subtype of: Component  \n'         . . . . . . . . . . Token: TEXT_LINE
'- **parameters** - The input p...' . . . . . . . . . Rule: attribute
'- **parameters** - The input p...' . . . . . . . . . . Rule: attribute_head
'- **parameters** - The input p...' . . . . . . . . . . . Token: ATTRIBUTE_LINE
'- **returnType** - The data ty...' . . . . . . . . . Rule: attribute
'- **returnType** - The data ty...' . . . . . . . . . . Rule: attribute_head
'- **returnType** - The data ty...' . . . . . . . . . . . Token: ATTRIBUTE_LINE
'_ **Parameter**  \nAn input to...' . . . . . . . . Rule: class
'_ **Parameter**  \n'               . . . . . . . . . Rule: class_head
'_ **Parameter**  \n'               . . . . . . . . . . Token: CLASS_LINE
'An input to a method  \n'          . . . . . . . . . Rule: elaboration
'An input to a method  \n'          . . . . . . . . . . Rule: paragraph
'An input to a method  \n'          . . . . . . . . . . . Token: TEXT_LINE
'Plural: Parameters  \nSubtype ...' . . . . . . . . . Rule: field
'Plural: Parameters  \n'            . . . . . . . . . . Token: FIELD_LINE
'Subtype of: Component  \n'         . . . . . . . . . . Token: TEXT_LINE
'- **type** - The data type of ...' . . . . . . . . . Rule: attribute
'- **type** - The data type of ...' . . . . . . . . . . Rule: attribute_head
'- **type** - The data type of ...' . . . . . . . . . . . Token: ATTRIBUTE_LINE
'- **cardinality** - The cardin...' . . . . . . . . . Rule: attribute
'- **cardinality** - The cardin...' . . . . . . . . . . Rule: attribute_head
'- **cardinality** - The cardin...' . . . . . . . . . . . Token: ATTRIBUTE_LINE
'## Data Types\n*ValueType*:**D...' . . . . . . . . Rule: section
'## Data Types\n'                   . . . . . . . . . Rule: section_head
'## Data Types\n'                   . . . . . . . . . . Token: SECTION_LINE
'*ValueType*:**Data Type**\n'       . . . . . . . . . Rule: elaboration
'*ValueType*:**Data Type**\n'       . . . . . . . . . . Rule: paragraph
'*ValueType*:**Data Type**\n'       . . . . . . . . . . . Token: TEXT_LINE
'_ **Simple Data Type** \n***Su...' . . . . . . . . . Rule: class
'_ **Simple Data Type** \n'         . . . . . . . . . . Rule: class_head
'_ **Simple Data Type** \n'         . . . . . . . . . . . Token: CLASS_LINE
'***SubtpeOf***: DataType\n'        . . . . . . . . . . Rule: elaboration
'***SubtpeOf***: DataType\n'        . . . . . . . . . . . Rule: paragraph
'***SubtpeOf***: DataType\n'        . . . . . . . . . . . . Token: TEXT_LINE
'- **coreClass** - (Class)\n'       . . . . . . . . . . Rule: attribute
'- **coreClass** - (Class)\n'       . . . . . . . . . . . Rule: attribute_head
'- **coreClass** - (Class)\n'       . . . . . . . . . . . . Token: ATTRIBUTE_LINE
'_ **Complex Data Type**  \n- *...' . . . . . . . . . Rule: class
'_ **Complex Data Type**  \n'       . . . . . . . . . . Rule: class_head
'_ **Complex Data Type**  \n'       . . . . . . . . . . . Token: CLASS_LINE
'- **aggregation** (Aggregating...' . . . . . . . . . . Rule: attribute
'- **aggregation** (Aggregating...' . . . . . . . . . . . Rule: attribute_head
'- **aggregation** (Aggregating...' . . . . . . . . . . . . Token: ATTRIBUTE_LINE
'- **aggregatedTypes** (List of...' . . . . . . . . . . Rule: attribute
'- **aggregatedTypes** (List of...' . . . . . . . . . . . Rule: attribute_head
'- **aggregatedTypes** (List of...' . . . . . . . . . . . . Token: ATTRIBUTE_LINE
'_ **Aggregating Operator**\n\n...' . . . . . . . . . Rule: class
'_ **Aggregating Operator**\n'      . . . . . . . . . . Rule: class_head
'_ **Aggregating Operator**\n'      . . . . . . . . . . . Token: CLASS_LINE
'\n'                                . . . . . . . . . . Rule: elaboration
'\n'                                . . . . . . . . . . . Rule: blank_line
'\n'                                . . . . . . . . . . . . Token: BLANK_LINE
'- **Name**- (Code)\n'              . . . . . . . . . . Rule: attribute
'- **Name**- (Code)\n'              . . . . . . . . . . . Rule: attribute_head
'- **Name**- (Code)\n'              . . . . . . . . . . . . Token: ATTRIBUTE_LINE
'- - **SetOf**\n'                   . . . . . . . . . . Rule: attribute
'- - **SetOf**\n'                   . . . . . . . . . . . Rule: attribute_head
'- - **SetOf**\n'                   . . . . . . . . . . . . Token: ATTRIBUTE_LINE
'- - **ListOf**\n'                  . . . . . . . . . . Rule: attribute
'- - **ListOf**\n'                  . . . . . . . . . . . Rule: attribute_head
'- - **ListOf**\n'                  . . . . . . . . . . . . Token: ATTRIBUTE_LINE
'- - **Mapping**\n'                 . . . . . . . . . . Rule: attribute
'- - **Mapping**\n'                 . . . . . . . . . . . Rule: attribute_head
'- - **Mapping**\n'                 . . . . . . . . . . . . Token: ATTRIBUTE_LINE
'- **arity** - (Integer)\n'         . . . . . . . . . . Rule: attribute
'- **arity** - (Integer)\n'         . . . . . . . . . . . Rule: attribute_head
'- **arity** - (Integer)\n'         . . . . . . . . . . . . Token: ATTRIBUTE_LINE
'- **spelling** - (Template)\n'     . . . . . . . . . . Rule: attribute
'- **spelling** - (Template)\n'     . . . . . . . . . . . Rule: attribute_head
'- **spelling** - (Template)\n'     . . . . . . . . . . . . Token: ATTRIBUTE_LINE
'## Low level Data Types\ninser...' . . . . . . . . . Rule: section
'## Low level Data Types\n'         . . . . . . . . . . Rule: section_head
'## Low level Data Types\n'         . . . . . . . . . . . Token: SECTION_LINE
'insert Camel Case.md\n'            . . . . . . . . . . Rule: elaboration
'insert Camel Case.md\n'            . . . . . . . . . . . Rule: paragraph
'insert Camel Case.md\n'            . . . . . . . . . . . . Token: TEXT_LINE
'_ ***ValueType***: **CamelName...' . . . . . . . . . . Rule: class
'_ ***ValueType***: **CamelName...' . . . . . . . . . . . Rule: class_head
'_ ***ValueType***: **CamelName...' . . . . . . . . . . . . Token: CLASS_LINE
'A short string without punctua...' . . . . . . . . . . . Rule: elaboration
'A short string without punctua...' . . . . . . . . . . . . Rule: paragraph
'A short string without punctua...' . . . . . . . . . . . . . Token: TEXT_LINE
'***Subtype of***: String\n'        . . . . . . . . . . . . . Token: TEXT_LINE
'- value: the string (String)\n...' . . . . . . . . . . . Rule: attribute
'- value: the string (String)\n'    . . . . . . . . . . . . Rule: attribute_head
'- value: the string (String)\n'    . . . . . . . . . . . . . Token: ATTRIBUTE_LINE
'🚫 ***Constraint***: Must follo...' . . . . . . . . . . . . Rule: elaboration
'🚫 ***Constraint***: Must follo...' . . . . . . . . . . . . . Rule: paragraph
'🚫 ***Constraint***: Must follo...' . . . . . . . . . . . . . . Token: TEXT_LINE
'Example:  "firstName", "orderD...' . . . . . . . . . . . . Rule: field
'Example:  "firstName", "orderD...' . . . . . . . . . . . . . Token: FIELD_LINE
'> 📝 ***ModelingNote***: Puttin...' . . . . . . . . . . . . . Token: TEXT_LINE
'*ModelingNote:* *CamelName* is...' . . . . . . . . . . . . . Token: TEXT_LINE
'_ **UpperCamel**- a CamelName ...' . . . . . . . . . . Rule: class
'_ **UpperCamel**- a CamelName ...' . . . . . . . . . . . Rule: class_head
'_ **UpperCamel**- a CamelName ...' . . . . . . . . . . . . Token: CLASS_LINE
'**Subtype of**: CamelName\n'       . . . . . . . . . . . . Token: TEXT_LINE
'**Where**: content begins with...' . . . . . . . . . . . Rule: elaboration
'**Where**: content begins with...' . . . . . . . . . . . . Rule: paragraph
'**Where**: content begins with...' . . . . . . . . . . . . . Token: TEXT_LINE
'Example:_ "Customer", "Product...' . . . . . . . . . . . Rule: field
'Example:_ "Customer", "Product...' . . . . . . . . . . . . Token: FIELD_LINE
'_ **LowerCamel** - a CamelName...' . . . . . . . . . . Rule: class
'_ **LowerCamel** - a CamelName...' . . . . . . . . . . . Rule: class_head
'_ **LowerCamel** - a CamelName...' . . . . . . . . . . . . Token: CLASS_LINE
'**Subtype of**: CamelName\n'       . . . . . . . . . . . . Token: TEXT_LINE
'**Where**: content begins with...' . . . . . . . . . . . . Token: TEXT_LINE
'\n'                                . . . . . . . . . . . Rule: elaboration
'\n'                                . . . . . . . . . . . . Rule: blank_line
'\n'                                . . . . . . . . . . . . . Token: BLANK_LINE
'Example:  "firstName", "orderT...' . . . . . . . . . . . Rule: field
'Example:  "firstName", "orderT...' . . . . . . . . . . . . Token: FIELD_LINE
'_ **Qualified Camel** - an exp...' . . . . . . . . . . Rule: class
'_ **Qualified Camel** - an exp...' . . . . . . . . . . . Rule: class_head
'_ **Qualified Camel** - an exp...' . . . . . . . . . . . . Token: CLASS_LINE
'***Subtype of***: String\n'        . . . . . . . . . . . . Token: TEXT_LINE
'***Constraint***: content cons...' . . . . . . . . . . . Rule: elaboration
'***Constraint***: content cons...' . . . . . . . . . . . . Rule: paragraph
'***Constraint***: content cons...' . . . . . . . . . . . . . Token: TEXT_LINE
'_ **RichText**.  A string with...' . . . . . . . . . . Rule: class
'_ **RichText**.  A string with...' . . . . . . . . . . . Rule: class_head
'_ **RichText**.  A string with...' . . . . . . . . . . . . Token: CLASS_LINE
'  ***SubtypeOf***: String  \n'     . . . . . . . . . . . . Token: TEXT_LINE
'  - **value** - the string con...' . . . . . . . . . . . Rule: elaboration
'  - **value** - the string con...' . . . . . . . . . . . . Rule: paragraph
'  - **value** - the string con...' . . . . . . . . . . . . . Token: TEXT_LINE
'  - **format** - the rich text...' . . . . . . . . . . . . . Token: TEXT_LINE
'  	- **HTML**  \n'                 . . . . . . . . . . . . . Token: TEXT_LINE
'- **MarkDown**  \n'                . . . . . . . . . . . Rule: attribute
'- **MarkDown**  \n'                . . . . . . . . . . . . Rule: attribute_head
'- **MarkDown**  \n'                . . . . . . . . . . . . . Token: ATTRIBUTE_LINE
'_  **RichLine**   - String wit...' . . . . . . . . . . Rule: class
'_  **RichLine**   - String wit...' . . . . . . . . . . . Rule: class_head
'_  **RichLine**   - String wit...' . . . . . . . . . . . . Token: CLASS_LINE
'  ***SubtypeOf***: RichText \n'    . . . . . . . . . . . Rule: elaboration
'  ***SubtypeOf***: RichText \n'    . . . . . . . . . . . . Rule: paragraph
'  ***SubtypeOf***: RichText \n'    . . . . . . . . . . . . . Token: TEXT_LINE
'- **value** - the string conte...' . . . . . . . . . . . Rule: attribute
'- **value** - the string conte...' . . . . . . . . . . . . Rule: attribute_head
'- **value** - the string conte...' . . . . . . . . . . . . . Token: ATTRIBUTE_LINE
'      ***Constraint***: must n...' . . . . . . . . . . . . Rule: elaboration
'      ***Constraint***: must n...' . . . . . . . . . . . . . Rule: paragraph
'      ***Constraint***: must n...' . . . . . . . . . . . . . . Token: TEXT_LINE
'_ **PrimitiveType**  \nSubtype...' . . . . . . . . . . Rule: class
'_ **PrimitiveType**  \nSubtype...' . . . . . . . . . . . Rule: class_head
'_ **PrimitiveType**  \n'           . . . . . . . . . . . . Token: CLASS_LINE
'Subtype of: ValueType\n'           . . . . . . . . . . . . Token: TEXT_LINE
'A basic, built-in data type  \...' . . . . . . . . . . . Rule: elaboration
'A basic, built-in data type  \...' . . . . . . . . . . . . Rule: paragraph
'A basic, built-in data type  \...' . . . . . . . . . . . . . Token: TEXT_LINE
'Values: \n  **String**  \n  **...' . . . . . . . . . . . Rule: field
'Values: \n'                        . . . . . . . . . . . . Token: FIELD_LINE
'  **String**  \n'                  . . . . . . . . . . . . Token: TEXT_LINE
'  **Integer**  \n'                 . . . . . . . . . . . . Token: TEXT_LINE
'  **Decimal**  \n'                 . . . . . . . . . . . . Token: TEXT_LINE
'  **Boolean**  \n'                 . . . . . . . . . . . . Token: TEXT_LINE
'  **Date**  \n'                    . . . . . . . . . . . . Token: TEXT_LINE
'  **Time**  \n'                    . . . . . . . . . . . . Token: TEXT_LINE
'  **DateTime**  \n'                . . . . . . . . . . . . Token: TEXT_LINE
'===\n'                             . . . . . . . . . . . . Token: TEXT_LINE
'## Appendices\nInsert More Sid...' . . . . . . . . . . Rule: section
'## Appendices\n'                   . . . . . . . . . . . Rule: section_head
'## Appendices\n'                   . . . . . . . . . . . . Token: SECTION_LINE
'Insert More Sidebars.md\nInser...' . . . . . . . . . . . Rule: elaboration
'Insert More Sidebars.md\nInser...' . . . . . . . . . . . . Rule: paragraph
'Insert More Sidebars.md\n'         . . . . . . . . . . . . . Token: TEXT_LINE
'Insert Overrides.md\n'             . . . . . . . . . . . . . Token: TEXT_LINE
'insert LDM Intro.md\n'             . . . . . . . . . . . . . Token: TEXT_LINE
'Insert OCL.md\n'                   . . . . . . . . . . . . . Token: TEXT_LINE
'Insert Camel Case.md\n'            . . . . . . . . . . . . . Token: TEXT_LINE
'### Annotation Types Used\nThe...' . . . . . . . . . . . Rule: section
'### Annotation Types Used\nThe...' . . . . . . . . . . . . Rule: section_head
'### Annotation Types Used\n'       . . . . . . . . . . . . . Token: SECTION_LINE
'These are the recognized Annot...' . . . . . . . . . . . . . Token: TEXT_LINE
'And this is how you register t...' . . . . . . . . . . . . Rule: elaboration
'And this is how you register t...' . . . . . . . . . . . . . Rule: paragraph
'And this is how you register t...' . . . . . . . . . . . . . . Token: TEXT_LINE
'\n'                                . . . . . . . . . . . . . Rule: blank_line
'\n'                                . . . . . . . . . . . . . . Token: BLANK_LINE
'```\ninterface AnnotationType ...' . . . . . . . . . . . . . Rule: code_block
'```\ninterface AnnotationType ...' . . . . . . . . . . . . . . Token: CODE_BLOCK